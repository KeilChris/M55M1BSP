Component: Arm Compiler for Embedded 6.24 Tool: armlink [5f371500]

==============================================================================

Section Cross References

    startup_M55M1.o(.ARM.exidx.text.Default_Handler) refers to startup_M55M1.o(.text.Default_Handler) for [Anonymous Symbol]
    startup_M55M1.o(.text.Reset_Handler) refers to system_M55M1.o(.data.SystemCoreClock) for SystemCoreClock
    startup_M55M1.o(.text.Reset_Handler) refers to startup_M55M1.o(.text.Reset_Handler_PreInit) for Reset_Handler_PreInit
    startup_M55M1.o(.text.Reset_Handler) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    startup_M55M1.o(.ARM.exidx.text.Reset_Handler) refers to startup_M55M1.o(.text.Reset_Handler) for [Anonymous Symbol]
    startup_M55M1.o(.text.HardFault_Handler) refers to retarget.o(.text.ProcessHardFault) for ProcessHardFault
    startup_M55M1.o(.ARM.exidx.text.HardFault_Handler) refers to startup_M55M1.o(.text.HardFault_Handler) for [Anonymous Symbol]
    startup_M55M1.o(.text.Reset_Handler_PreInit) refers to clk.o(.text.CLK_SetBusClock) for CLK_SetBusClock
    startup_M55M1.o(.text.Reset_Handler_PreInit) refers to system_M55M1.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    startup_M55M1.o(.ARM.exidx.text.Reset_Handler_PreInit) refers to startup_M55M1.o(.text.Reset_Handler_PreInit) for [Anonymous Symbol]
    startup_M55M1.o(RESET) refers to startup_M55M1.o(.text.Reset_Handler) for Reset_Handler
    startup_M55M1.o(RESET) refers to startup_M55M1.o(.text.Default_Handler) for NMI_Handler
    startup_M55M1.o(RESET) refers to startup_M55M1.o(.text.HardFault_Handler) for HardFault_Handler
    startup_M55M1.o(DTCM.VTOR) refers to startup_M55M1.o(.text.Reset_Handler) for Reset_Handler
    startup_M55M1.o(DTCM.VTOR) refers to startup_M55M1.o(.text.Default_Handler) for NMI_Handler
    startup_M55M1.o(DTCM.VTOR) refers to startup_M55M1.o(.text.HardFault_Handler) for HardFault_Handler
    startup_M55M1.o(DTCM.VTOR) refers to portasm.o(.text.SVC_Handler) for SVC_Handler
    startup_M55M1.o(DTCM.VTOR) refers to portasm.o(.text.PendSV_Handler) for PendSV_Handler
    startup_M55M1.o(DTCM.VTOR) refers to port.o(.text.SysTick_Handler) for SysTick_Handler
    startup_M55M1.o(DTCM.VTOR) refers to emac.o(ITCM) for EMAC0_IRQHandler
    system_M55M1.o(.text.SystemCoreClockUpdate) refers to clk.o(.text.CLK_SystemClockUpdate) for CLK_SystemClockUpdate
    system_M55M1.o(.text.SystemCoreClockUpdate) refers to system_M55M1.o(.data.SystemCoreClock) for SystemCoreClock
    system_M55M1.o(.text.SystemCoreClockUpdate) refers to system_M55M1.o(.data.CyclesPerUs) for CyclesPerUs
    system_M55M1.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_M55M1.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_M55M1.o(.ARM.exidx.text.SetDebugUartMFP) refers to system_M55M1.o(.text.SetDebugUartMFP) for [Anonymous Symbol]
    system_M55M1.o(.text.SetDebugUartCLK) refers to clk.o(.text.CLK_EnableXtalRC) for CLK_EnableXtalRC
    system_M55M1.o(.text.SetDebugUartCLK) refers to clk.o(.text.CLK_WaitClockReady) for CLK_WaitClockReady
    system_M55M1.o(.text.SetDebugUartCLK) refers to clk.o(.text.CLK_SetModuleClock) for CLK_SetModuleClock
    system_M55M1.o(.text.SetDebugUartCLK) refers to clk.o(.text.CLK_EnableModuleClock) for CLK_EnableModuleClock
    system_M55M1.o(.text.SetDebugUartCLK) refers to sys.o(.text.SYS_ResetModule) for SYS_ResetModule
    system_M55M1.o(.ARM.exidx.text.SetDebugUartCLK) refers to system_M55M1.o(.text.SetDebugUartCLK) for [Anonymous Symbol]
    system_M55M1.o(.text.InitDebugUart) refers to uart.o(.text.UART_Open) for UART_Open
    system_M55M1.o(.ARM.exidx.text.InitDebugUart) refers to system_M55M1.o(.text.InitDebugUart) for [Anonymous Symbol]
    system_M55M1.o(.text.InitPreDefMPURegion) refers to system_M55M1.o(.bss.g_u32NonCacheableBase) for g_u32NonCacheableBase
    system_M55M1.o(.text.InitPreDefMPURegion) refers to system_M55M1.o(.bss.g_u32NonCacheableLimit) for g_u32NonCacheableLimit
    system_M55M1.o(.ARM.exidx.text.InitPreDefMPURegion) refers to system_M55M1.o(.text.InitPreDefMPURegion) for [Anonymous Symbol]
    system_M55M1.o(.text.SystemInit) refers to startup_M55M1.o(DTCM.VTOR) for DTCM_VECTOR_TABLE
    system_M55M1.o(.text.SystemInit) refers to system_M55M1.o(.text.InitPreDefMPURegion) for InitPreDefMPURegion
    system_M55M1.o(.ARM.exidx.text.SystemInit) refers to system_M55M1.o(.text.SystemInit) for [Anonymous Symbol]
    system_M55M1.o(.init_array) refers to system_M55M1.o(.text.SystemInit) for SystemInit
    main.o(.text.main) refers to system_M55M1.o(.data.SystemCoreClock) for SystemCoreClock
    main.o(.text.main) refers to clk.o(.text.CLK_EnableXtalRC) for CLK_EnableXtalRC
    main.o(.text.main) refers to clk.o(.text.CLK_WaitClockReady) for CLK_WaitClockReady
    main.o(.text.main) refers to clk.o(.text.CLK_SetBusClock) for CLK_SetBusClock
    main.o(.text.main) refers to system_M55M1.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    main.o(.text.main) refers to system_M55M1.o(.text.SetDebugUartCLK) for SetDebugUartCLK
    main.o(.text.main) refers to clk.o(.text.CLK_EnableModuleClock) for CLK_EnableModuleClock
    main.o(.text.main) refers to sys.o(.text.SYS_ResetModule) for SYS_ResetModule
    main.o(.text.main) refers to system_M55M1.o(.text.SetDebugUartMFP) for SetDebugUartMFP
    main.o(.text.main) refers to gpio.o(.text.GPIO_SetSlewCtl) for GPIO_SetSlewCtl
    main.o(.text.main) refers to gpio.o(.text.GPIO_SetMode) for GPIO_SetMode
    main.o(.text.main) refers to system_M55M1.o(.text.InitDebugUart) for InitDebugUart
    main.o(.text.main) refers to main.o(.text.vWebTask) for vWebTask
    main.o(.text.main) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    main.o(.text.main) refers to PollQ.o(.text.vStartPolledQueueTasks) for vStartPolledQueueTasks
    main.o(.text.main) refers to semtest.o(.text.vStartSemaphoreTasks) for vStartSemaphoreTasks
    main.o(.text.main) refers to GenQTest.o(.text.vStartGenericQueueTasks) for vStartGenericQueueTasks
    main.o(.text.main) refers to QueueSet.o(.text.vStartQueueSetTasks) for vStartQueueSetTasks
    main.o(.text.main) refers to puts.o(i.puts) for puts
    main.o(.text.main) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.text.vWebTask) refers to tcpip.o(.text.tcpip_init) for tcpip_init
    main.o(.text.vWebTask) refers to ethernetif.o(.text.ethernetif_init) for ethernetif_init
    main.o(.text.vWebTask) refers to main.o(.bss.netif) for netif
    main.o(.text.vWebTask) refers to tcpip.o(.text.tcpip_input) for tcpip_input
    main.o(.text.vWebTask) refers to netif.o(.text.netif_add) for netif_add
    main.o(.text.vWebTask) refers to netif.o(.text.netif_set_default) for netif_set_default
    main.o(.text.vWebTask) refers to netif.o(.text.netif_set_up) for netif_set_up
    main.o(.text.vWebTask) refers to puts.o(i.puts) for puts
    main.o(.text.vWebTask) refers to ip4_addr.o(.text.ip4addr_ntoa) for ip4addr_ntoa
    main.o(.text.vWebTask) refers to printf8.o(i.__0printf$8) for __2printf
    main.o(.text.vWebTask) refers to httpserver-netconn.o(.text.http_server_netconn_init) for http_server_netconn_init
    main.o(.text.vWebTask) refers to tasks.o(.text.vTaskSuspend) for vTaskSuspend
    main.o(.ARM.exidx.text.vWebTask) refers to main.o(.text.vWebTask) for [Anonymous Symbol]
    main.o(.text.vApplicationMallocFailedHook) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    main.o(.ARM.exidx.text.vApplicationMallocFailedHook) refers to main.o(.text.vApplicationMallocFailedHook) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.vApplicationIdleHook) refers to main.o(.text.vApplicationIdleHook) for [Anonymous Symbol]
    main.o(.text.vApplicationStackOverflowHook) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    main.o(.ARM.exidx.text.vApplicationStackOverflowHook) refers to main.o(.text.vApplicationStackOverflowHook) for [Anonymous Symbol]
    main.o(.text.vApplicationTickHook) refers to QueueSet.o(.text.vQueueSetAccessQueueSetFromISR) for vQueueSetAccessQueueSetFromISR
    main.o(.ARM.exidx.text.vApplicationTickHook) refers to main.o(.text.vApplicationTickHook) for [Anonymous Symbol]
    fs.o(.text.fs_open) refers to fs.o(.bss.fs_memory) for fs_memory
    fs.o(.text.fs_open) refers to fs.o(.rodata.file_index_html) for file_index_html
    fs.o(.text.fs_open) refers to strcmp.o(.text) for strcmp
    fs.o(.ARM.exidx.text.fs_open) refers to fs.o(.text.fs_open) for [Anonymous Symbol]
    fs.o(.text.fs_close) refers to fs.o(.bss.fs_memory) for fs_memory
    fs.o(.ARM.exidx.text.fs_close) refers to fs.o(.text.fs_close) for [Anonymous Symbol]
    fs.o(.text.fs_read) refers to memmovea.o(.text) for __aeabi_memcpy
    fs.o(.ARM.exidx.text.fs_read) refers to fs.o(.text.fs_read) for [Anonymous Symbol]
    fs.o(.ARM.exidx.text.fs_bytes_left) refers to fs.o(.text.fs_bytes_left) for [Anonymous Symbol]
    fs.o(.rodata.file_404_html) refers to fs.o(.rodata.data_404_html) for [Anonymous Symbol]
    fs.o(.rodata.file_img_m4_jpg) refers to fs.o(.rodata.file_404_html) for file_404_html
    fs.o(.rodata.file_img_m4_jpg) refers to fs.o(.rodata.data_img_m4_jpg) for [Anonymous Symbol]
    fs.o(.rodata.file_index_html) refers to fs.o(.rodata.file_img_m4_jpg) for file_img_m4_jpg
    fs.o(.rodata.file_index_html) refers to fs.o(.rodata.data_index_html) for [Anonymous Symbol]
    httpserver-netconn.o(.text.http_server_serve) refers to api_lib.o(.text.netconn_recv) for netconn_recv
    httpserver-netconn.o(.text.http_server_serve) refers to api_lib.o(.text.netconn_err) for netconn_err
    httpserver-netconn.o(.text.http_server_serve) refers to netbuf.o(.text.netbuf_data) for netbuf_data
    httpserver-netconn.o(.text.http_server_serve) refers to strncmp.o(.text) for strncmp
    httpserver-netconn.o(.text.http_server_serve) refers to httpserver-netconn.o(.rodata.str1.1) for .L.str.5
    httpserver-netconn.o(.text.http_server_serve) refers to fs.o(.text.fs_open) for fs_open
    httpserver-netconn.o(.text.http_server_serve) refers to api_lib.o(.text.netconn_write_partly) for netconn_write_partly
    httpserver-netconn.o(.text.http_server_serve) refers to fs.o(.text.fs_close) for fs_close
    httpserver-netconn.o(.text.http_server_serve) refers to api_lib.o(.text.netconn_close) for netconn_close
    httpserver-netconn.o(.text.http_server_serve) refers to netbuf.o(.text.netbuf_delete) for netbuf_delete
    httpserver-netconn.o(.ARM.exidx.text.http_server_serve) refers to httpserver-netconn.o(.text.http_server_serve) for [Anonymous Symbol]
    httpserver-netconn.o(.text.http_server_netconn_init) refers to httpserver-netconn.o(.text.http_server_netconn_thread) for http_server_netconn_thread
    httpserver-netconn.o(.text.http_server_netconn_init) refers to sys_arch.o(.text.sys_thread_new) for sys_thread_new
    httpserver-netconn.o(.ARM.exidx.text.http_server_netconn_init) refers to httpserver-netconn.o(.text.http_server_netconn_init) for [Anonymous Symbol]
    httpserver-netconn.o(.text.http_server_netconn_thread) refers to api_lib.o(.text.netconn_new_with_proto_and_callback) for netconn_new_with_proto_and_callback
    httpserver-netconn.o(.text.http_server_netconn_thread) refers to api_lib.o(.text.netconn_bind) for netconn_bind
    httpserver-netconn.o(.text.http_server_netconn_thread) refers to printf8.o(i.__0printf$8) for __2printf
    httpserver-netconn.o(.text.http_server_netconn_thread) refers to api_lib.o(.text.netconn_listen_with_backlog) for netconn_listen_with_backlog
    httpserver-netconn.o(.text.http_server_netconn_thread) refers to api_lib.o(.text.netconn_accept) for netconn_accept
    httpserver-netconn.o(.text.http_server_netconn_thread) refers to httpserver-netconn.o(.text.http_server_serve) for http_server_serve
    httpserver-netconn.o(.text.http_server_netconn_thread) refers to api_lib.o(.text.netconn_delete) for netconn_delete
    httpserver-netconn.o(.ARM.exidx.text.http_server_netconn_thread) refers to httpserver-netconn.o(.text.http_server_netconn_thread) for [Anonymous Symbol]
    emac.o(.text.EMAC_Open) refers to emac.o(.bss.GMACdev) for GMACdev
    emac.o(.text.EMAC_Open) refers to synopGMAC_Dev.o(.text.synopGMAC_attach) for synopGMAC_attach
    emac.o(.text.EMAC_Open) refers to synopGMAC_Dev.o(.text.synopGMAC_reset) for synopGMAC_reset
    emac.o(.text.EMAC_Open) refers to synopGMAC_Dev.o(.text.synopGMAC_read_version) for synopGMAC_read_version
    emac.o(.text.EMAC_Open) refers to system_M55M1.o(.data.SystemCoreClock) for SystemCoreClock
    emac.o(.text.EMAC_Open) refers to synopGMAC_Dev.o(.text.synopGMAC_set_mdc_clk_div) for synopGMAC_set_mdc_clk_div
    emac.o(.text.EMAC_Open) refers to synopGMAC_Dev.o(.text.synopGMAC_get_mdc_clk_div) for synopGMAC_get_mdc_clk_div
    emac.o(.text.EMAC_Open) refers to mii.o(.text.mii_check_phy_init) for mii_check_phy_init
    emac.o(.text.EMAC_Open) refers to emac.o(.bss.NonCacheable.ZeroInit) for tx_desc
    emac.o(.text.EMAC_Open) refers to synopGMAC_network_interface.o(.text.synopGMAC_setup_tx_desc_queue) for synopGMAC_setup_tx_desc_queue
    emac.o(.text.EMAC_Open) refers to synopGMAC_Dev.o(.text.synopGMAC_init_tx_desc_base) for synopGMAC_init_tx_desc_base
    emac.o(.text.EMAC_Open) refers to synopGMAC_network_interface.o(.text.synopGMAC_setup_rx_desc_queue) for synopGMAC_setup_rx_desc_queue
    emac.o(.text.EMAC_Open) refers to synopGMAC_Dev.o(.text.synopGMAC_init_rx_desc_base) for synopGMAC_init_rx_desc_base
    emac.o(.text.EMAC_Open) refers to synopGMAC_Dev.o(.text.synopGMAC_dma_bus_mode_init) for synopGMAC_dma_bus_mode_init
    emac.o(.text.EMAC_Open) refers to synopGMAC_Dev.o(.text.synopGMAC_dma_control_init) for synopGMAC_dma_control_init
    emac.o(.text.EMAC_Open) refers to synopGMAC_Dev.o(.text.synopGMAC_mac_init) for synopGMAC_mac_init
    emac.o(.text.EMAC_Open) refers to synopGMAC_Dev.o(.text.synopGMAC_promisc_enable) for synopGMAC_promisc_enable
    emac.o(.text.EMAC_Open) refers to synopGMAC_Dev.o(.text.synopGMAC_pause_control) for synopGMAC_pause_control
    emac.o(.text.EMAC_Open) refers to synopGMAC_Dev.o(.text.synopGMAC_set_rx_qptr) for synopGMAC_set_rx_qptr
    emac.o(.text.EMAC_Open) refers to synopGMAC_Dev.o(.text.synopGMAC_clear_interrupt) for synopGMAC_clear_interrupt
    emac.o(.text.EMAC_Open) refers to synopGMAC_Dev.o(.text.synopGMAC_disable_interrupt_all) for synopGMAC_disable_interrupt_all
    emac.o(.text.EMAC_Open) refers to synopGMAC_Dev.o(.text.synopGMAC_enable_interrupt) for synopGMAC_enable_interrupt
    emac.o(.text.EMAC_Open) refers to synopGMAC_Dev.o(.text.synopGMAC_enable_dma_rx) for synopGMAC_enable_dma_rx
    emac.o(.text.EMAC_Open) refers to synopGMAC_Dev.o(.text.synopGMAC_enable_dma_tx) for synopGMAC_enable_dma_tx
    emac.o(.text.EMAC_Open) refers to synopGMAC_Dev.o(.text.synopGMAC_set_mac_addr) for synopGMAC_set_mac_addr
    emac.o(.text.EMAC_Open) refers to printf8.o(i.__0printf$8) for __2printf
    emac.o(.text.EMAC_Open) refers to synopGMAC_network_interface.o(.text.synopGMAC_set_mode) for synopGMAC_set_mode
    emac.o(.text.EMAC_Open) refers to emac.o(.rodata.memp_emac_rx) for memp_emac_rx
    emac.o(.text.EMAC_Open) refers to memp.o(.text.memp_init_pool) for memp_init_pool
    emac.o(.text.EMAC_Open) refers to puts.o(i.puts) for puts
    emac.o(.ARM.exidx.text.EMAC_Open) refers to emac.o(.text.EMAC_Open) for [Anonymous Symbol]
    emac.o(ITCM) refers to emac.o(.bss.GMACdev) for GMACdev
    emac.o(ITCM) refers to synopGMAC_plat.o(.text.synopGMACReadReg) for synopGMACReadReg
    emac.o(ITCM) refers to synopGMAC_plat.o(.text.synopGMACWriteReg) for synopGMACWriteReg
    emac.o(ITCM) refers to synopGMAC_network_interface.o(.text.synopGMAC_powerup_mac) for synopGMAC_powerup_mac
    emac.o(ITCM) refers to synopGMAC_Dev.o(.text.synopGMAC_get_interrupt_type) for synopGMAC_get_interrupt_type
    emac.o(ITCM) refers to synopGMAC_Dev.o(.text.synopGMAC_disable_dma_tx) for synopGMAC_disable_dma_tx
    emac.o(ITCM) refers to synopGMAC_Dev.o(.text.synopGMAC_disable_dma_rx) for synopGMAC_disable_dma_rx
    emac.o(ITCM) refers to synopGMAC_Dev.o(.text.synopGMAC_take_desc_ownership_tx) for synopGMAC_take_desc_ownership_tx
    emac.o(ITCM) refers to synopGMAC_Dev.o(.text.synopGMAC_take_desc_ownership_rx) for synopGMAC_take_desc_ownership_rx
    emac.o(ITCM) refers to synopGMAC_Dev.o(.text.synopGMAC_init_tx_rx_desc_queue) for synopGMAC_init_tx_rx_desc_queue
    emac.o(ITCM) refers to synopGMAC_Dev.o(.text.synopGMAC_reset) for synopGMAC_reset
    emac.o(ITCM) refers to synopGMAC_Dev.o(.text.synopGMAC_set_mac_addr) for synopGMAC_set_mac_addr
    emac.o(ITCM) refers to synopGMAC_Dev.o(.text.synopGMAC_dma_bus_mode_init) for synopGMAC_dma_bus_mode_init
    emac.o(ITCM) refers to synopGMAC_Dev.o(.text.synopGMAC_dma_control_init) for synopGMAC_dma_control_init
    emac.o(ITCM) refers to synopGMAC_Dev.o(.text.synopGMAC_init_rx_desc_base) for synopGMAC_init_rx_desc_base
    emac.o(ITCM) refers to synopGMAC_Dev.o(.text.synopGMAC_init_tx_desc_base) for synopGMAC_init_tx_desc_base
    emac.o(ITCM) refers to synopGMAC_Dev.o(.text.synopGMAC_mac_init) for synopGMAC_mac_init
    emac.o(ITCM) refers to synopGMAC_Dev.o(.text.synopGMAC_enable_dma_rx) for synopGMAC_enable_dma_rx
    emac.o(ITCM) refers to synopGMAC_Dev.o(.text.synopGMAC_enable_dma_tx) for synopGMAC_enable_dma_tx
    emac.o(ITCM) refers to printf8.o(i.__0printf$8) for __2printf
    emac.o(ITCM) refers to synopGMAC_Dev.o(.text.synopGMAC_resume_dma_rx) for synopGMAC_resume_dma_rx
    emac.o(ITCM) refers to ethernetif.o(.bss.xRxSemaphore) for xRxSemaphore
    emac.o(ITCM) refers to queue.o(.text.xQueueGiveFromISR) for xQueueGiveFromISR
    emac.o(ITCM) refers to synopGMAC_network_interface.o(.text.synop_handle_transmit_over) for synop_handle_transmit_over
    emac.o(ITCM) refers to synopGMAC_Dev.o(.text.synopGMAC_enable_interrupt) for synopGMAC_enable_interrupt
    emac.o(.ARM.exidxITCM) refers to emac.o(ITCM) for [Anonymous Symbol]
    emac.o(.text.nu_emac_pbuf_free) refers to sys_arch.o(.text.sys_arch_protect) for sys_arch_protect
    emac.o(.text.nu_emac_pbuf_free) refers to emac.o(.bss.GMACdev) for GMACdev
    emac.o(.text.nu_emac_pbuf_free) refers to synopGMAC_Dev.o(.text.synopGMAC_set_rx_qptr) for synopGMAC_set_rx_qptr
    emac.o(.text.nu_emac_pbuf_free) refers to puts.o(i.puts) for puts
    emac.o(.text.nu_emac_pbuf_free) refers to emac.o(.rodata.memp_emac_rx) for memp_emac_rx
    emac.o(.text.nu_emac_pbuf_free) refers to memp.o(.text.memp_free_pool) for memp_free_pool
    emac.o(.text.nu_emac_pbuf_free) refers to sys_arch.o(.text.sys_arch_unprotect) for sys_arch_unprotect
    emac.o(.ARM.exidx.text.nu_emac_pbuf_free) refers to emac.o(.text.nu_emac_pbuf_free) for [Anonymous Symbol]
    emac.o(.text.EMAC_ReceivePkt) refers to emac.o(.bss.GMACdev) for GMACdev
    emac.o(.text.EMAC_ReceivePkt) refers to synopGMAC_network_interface.o(.text.synop_handle_received_data) for synop_handle_received_data
    emac.o(.text.EMAC_ReceivePkt) refers to emac.o(.rodata.memp_emac_rx) for memp_emac_rx
    emac.o(.text.EMAC_ReceivePkt) refers to memp.o(.text.memp_malloc_pool) for memp_malloc_pool
    emac.o(.text.EMAC_ReceivePkt) refers to emac.o(.text.nu_emac_pbuf_free) for nu_emac_pbuf_free
    emac.o(.text.EMAC_ReceivePkt) refers to pbuf.o(.text.pbuf_alloced_custom) for pbuf_alloced_custom
    emac.o(.text.EMAC_ReceivePkt) refers to ethernetif.o(.bss._netif) for _netif
    emac.o(.text.EMAC_ReceivePkt) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    emac.o(.text.EMAC_ReceivePkt) refers to synopGMAC_Dev.o(.text.synopGMAC_enable_interrupt) for synopGMAC_enable_interrupt
    emac.o(.text.EMAC_ReceivePkt) refers to puts.o(i.puts) for puts
    emac.o(.text.EMAC_ReceivePkt) refers to printf8.o(i.__0printf$8) for __2printf
    emac.o(.ARM.exidx.text.EMAC_ReceivePkt) refers to emac.o(.text.EMAC_ReceivePkt) for [Anonymous Symbol]
    emac.o(.text.EMAC_AllocatePktBuf) refers to emac.o(.bss.GMACdev) for GMACdev
    emac.o(.text.EMAC_AllocatePktBuf) refers to emac.o(.bss.NonCacheable.ZeroInit) for tx_buf
    emac.o(.ARM.exidx.text.EMAC_AllocatePktBuf) refers to emac.o(.text.EMAC_AllocatePktBuf) for [Anonymous Symbol]
    emac.o(.text.EMAC_TransmitPkt) refers to emac.o(.bss.GMACdev) for GMACdev
    emac.o(.text.EMAC_TransmitPkt) refers to synopGMAC_Dev.o(.text.synopGMAC_is_desc_owned_by_dma) for synopGMAC_is_desc_owned_by_dma
    emac.o(.text.EMAC_TransmitPkt) refers to synopGMAC_network_interface.o(.text.synopGMAC_xmit_frames) for synopGMAC_xmit_frames
    emac.o(.ARM.exidx.text.EMAC_TransmitPkt) refers to emac.o(.text.EMAC_TransmitPkt) for [Anonymous Symbol]
    emac.o(.rodata.memp_emac_rx) refers to emac.o(.bss.memp_memory_emac_rx_base) for memp_memory_emac_rx_base
    emac.o(.rodata.memp_emac_rx) refers to emac.o(.bss.memp_tab_emac_rx) for [Anonymous Symbol]
    mii.o(.ARM.exidx.text.mii_nway_result) refers to mii.o(.text.mii_nway_result) for [Anonymous Symbol]
    mii.o(.text.mii_ethtool_gset) refers to synopGMAC_Dev.o(.text.synopGMAC_write_phy_reg) for synopGMAC_write_phy_reg
    mii.o(.text.mii_ethtool_gset) refers to synopGMAC_Dev.o(.text.synopGMAC_read_phy_reg) for synopGMAC_read_phy_reg
    mii.o(.ARM.exidx.text.mii_ethtool_gset) refers to mii.o(.text.mii_ethtool_gset) for [Anonymous Symbol]
    mii.o(.text.mii_link_ok) refers to synopGMAC_Dev.o(.text.synopGMAC_read_phy_reg) for synopGMAC_read_phy_reg
    mii.o(.ARM.exidx.text.mii_link_ok) refers to mii.o(.text.mii_link_ok) for [Anonymous Symbol]
    mii.o(.text.mii_link_monitor) refers to synopGMAC_Dev.o(.text.synopGMAC_read_phy_reg) for synopGMAC_read_phy_reg
    mii.o(.text.mii_link_monitor) refers to mii.o(.text.mii_ethtool_gset) for mii_ethtool_gset
    mii.o(.text.mii_link_monitor) refers to synopGMAC_Dev.o(.text.synopGMAC_mac_init) for synopGMAC_mac_init
    mii.o(.ARM.exidx.text.mii_link_monitor) refers to mii.o(.text.mii_link_monitor) for [Anonymous Symbol]
    mii.o(.text.mii_check_phy_init) refers to synopGMAC_Dev.o(.text.synopGMAC_read_phy_reg) for synopGMAC_read_phy_reg
    mii.o(.text.mii_check_phy_init) refers to mii.o(.text.mii_ethtool_gset) for mii_ethtool_gset
    mii.o(.ARM.exidx.text.mii_check_phy_init) refers to mii.o(.text.mii_check_phy_init) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialiseItem) refers to list.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.uxListRemove) refers to list.o(.text.uxListRemove) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to heap_2.o(.text.pvPortMalloc) for pvPortMalloc
    tasks.o(.text.xTaskCreate) refers to memseta.o(.text) for __aeabi_memclr
    tasks.o(.text.xTaskCreate) refers to heap_2.o(.text.vPortFree) for vPortFree
    tasks.o(.text.xTaskCreate) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    tasks.o(.text.xTaskCreate) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks.o(.text.xTaskCreate) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(.text.xTaskCreate) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskCreate) refers to list.o(.text.vListInitialise) for vListInitialise
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.xDelayedTaskList1) for xDelayedTaskList1
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.xDelayedTaskList2) for xDelayedTaskList2
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskCreate) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskCreate) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.ARM.exidx.text.xTaskCreate) refers to tasks.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelete) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.vTaskDelete) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskDelete) refers to heap_2.o(.text.vPortFree) for vPortFree
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskDelete) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.ARM.exidx.text.vTaskDelete) refers to tasks.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskDelayUntil) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskDelayUntil) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskDelayUntil) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.xTaskDelayUntil) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.ARM.exidx.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskDelayUntil) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspendAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskResumeAll) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskDelay) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskDelay) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.vTaskDelay) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.vTaskDelay) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.ARM.exidx.text.vTaskDelay) refers to tasks.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.eTaskGetState) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.ARM.exidx.text.eTaskGetState) refers to tasks.o(.text.eTaskGetState) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskPriorityGet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to portasm.o(.text.vClearInterruptMask) for vClearInterruptMask
    tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSuspend) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(.ARM.exidx.text.vTaskSuspend) refers to tasks.o(.text.vTaskSuspend) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSwitchContext) refers to main.o(.text.vApplicationStackOverflowHook) for vApplicationStackOverflowHook
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSwitchContext) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    tasks.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskResume) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskResume) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    tasks.o(.ARM.exidx.text.vTaskResume) refers to tasks.o(.text.vTaskResume) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvIdleTask) for prvIdleTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    tasks.o(.text.vTaskStartScheduler) refers to timers.o(.text.xTimerCreateTimerTask) for xTimerCreateTimerTask
    tasks.o(.text.vTaskStartScheduler) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStartScheduler) refers to port.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.uxTopUsedPriority) for uxTopUsedPriority
    tasks.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvIdleTask) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvIdleTask) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvIdleTask) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.prvIdleTask) refers to heap_2.o(.text.vPortFree) for vPortFree
    tasks.o(.text.prvIdleTask) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvIdleTask) refers to port.o(.text.vPortSuppressTicksAndSleep) for vPortSuppressTicksAndSleep
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.prvIdleTask) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    tasks.o(.ARM.exidx.text.prvIdleTask) refers to tasks.o(.text.prvIdleTask) for [Anonymous Symbol]
    tasks.o(.text.vTaskEndScheduler) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskEndScheduler) refers to port.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskIncrementTick) refers to main.o(.text.vApplicationTickHook) for vApplicationTickHook
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCount) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCountFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetNumberOfTasks) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.pcTaskGetName) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.pcTaskGetName) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    tasks.o(.ARM.exidx.text.pcTaskGetName) refers to tasks.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.uxTaskGetSystemState) refers to tasks.o(.text.uxTaskGetSystemState) for [Anonymous Symbol]
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStepTick) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskStepTick) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.vTaskStepTick) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskStepTick) refers to tasks.o(.text.vTaskStepTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskCatchUpTicks) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskCatchUpTicks) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskPlaceOnEventList) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskRemoveFromEventList) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    tasks.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskCheckForTimeOut) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks.o(.text.vTaskMissedYield) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber) refers to tasks.o(.text.uxTaskGetTaskNumber) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSetTaskNumber) refers to tasks.o(.text.vTaskSetTaskNumber) for [Anonymous Symbol]
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.text.eTaskConfirmSleepModeStatus) for [Anonymous Symbol]
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGetInfo) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.vTaskGetInfo) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.vTaskGetInfo) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    tasks.o(.ARM.exidx.text.vTaskGetInfo) refers to tasks.o(.text.vTaskGetInfo) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.xTaskGetSchedulerState) refers to tasks.o(.text.xTaskGetSchedulerState) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.xTaskPriorityInherit) refers to tasks.o(.text.xTaskPriorityInherit) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityDisinherit) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit) refers to tasks.o(.text.xTaskPriorityDisinherit) for [Anonymous Symbol]
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for [Anonymous Symbol]
    tasks.o(.text.vTaskList) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskList) refers to heap_2.o(.text.pvPortMalloc) for pvPortMalloc
    tasks.o(.text.vTaskList) refers to tasks.o(.text.uxTaskGetSystemState) for uxTaskGetSystemState
    tasks.o(.text.vTaskList) refers to printf8.o(i.__0sprintf$8) for __2sprintf
    tasks.o(.text.vTaskList) refers to strlen.o(.text) for strlen
    tasks.o(.text.vTaskList) refers to strcpy.o(.text) for strcpy
    tasks.o(.text.vTaskList) refers to memseta.o(.text) for __aeabi_memset
    tasks.o(.text.vTaskList) refers to heap_2.o(.text.vPortFree) for vPortFree
    tasks.o(.ARM.exidx.text.vTaskList) refers to tasks.o(.text.vTaskList) for [Anonymous Symbol]
    tasks.o(.text.uxTaskResetEventItemValue) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks.o(.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyTake) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.ulTaskGenericNotifyTake) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyWait) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait) refers to tasks.o(.text.xTaskGenericNotifyWait) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to portasm.o(.text.vClearInterruptMask) for vClearInterruptMask
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to portasm.o(.text.vClearInterruptMask) for vClearInterruptMask
    tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.text.vTaskGenericNotifyGiveFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.text.ulTaskGenericNotifyValueClear) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvTimerTask) for prvTimerTask
    timers.o(.text.xTimerCreateTimerTask) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    timers.o(.text.xTimerCreateTimerTask) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    timers.o(.ARM.exidx.text.xTimerCreateTimerTask) refers to timers.o(.text.xTimerCreateTimerTask) for [Anonymous Symbol]
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList1) for xActiveTimerList1
    timers.o(.text.prvCheckForValidListAndQueue) refers to list.o(.text.vListInitialise) for vListInitialise
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList2) for xActiveTimerList2
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    timers.o(.text.prvCheckForValidListAndQueue) refers to queue.o(.text.vQueueAddToRegistry) for vQueueAddToRegistry
    timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue) refers to timers.o(.text.prvCheckForValidListAndQueue) for [Anonymous Symbol]
    timers.o(.text.prvTimerTask) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvTimerTask) refers to timers.o(.bss.prvSampleTimeNow.xLastTime) for prvSampleTimeNow.xLastTime
    timers.o(.text.prvTimerTask) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvTimerTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvTimerTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    timers.o(.text.prvTimerTask) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvTimerTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    timers.o(.text.prvTimerTask) refers to queue.o(.text.vQueueWaitForMessageRestricted) for vQueueWaitForMessageRestricted
    timers.o(.text.prvTimerTask) refers to port.o(.text.vPortYield) for vPortYield
    timers.o(.text.prvTimerTask) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.text.prvTimerTask) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    timers.o(.text.prvTimerTask) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvTimerTask) refers to heap_2.o(.text.vPortFree) for vPortFree
    timers.o(.text.prvTimerTask) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    timers.o(.ARM.exidx.text.prvTimerTask) refers to timers.o(.text.prvTimerTask) for [Anonymous Symbol]
    timers.o(.text.xTimerCreate) refers to heap_2.o(.text.pvPortMalloc) for pvPortMalloc
    timers.o(.text.xTimerCreate) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.xTimerCreate) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    timers.o(.text.xTimerCreate) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    timers.o(.ARM.exidx.text.xTimerCreate) refers to timers.o(.text.xTimerCreate) for [Anonymous Symbol]
    timers.o(.text.xTimerGenericCommand) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerGenericCommand) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.text.xTimerGenericCommand) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.ARM.exidx.text.xTimerGenericCommand) refers to timers.o(.text.xTimerGenericCommand) for [Anonymous Symbol]
    timers.o(.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.text.xTimerGetTimerDaemonTaskHandle) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.text.xTimerGetTimerDaemonTaskHandle) for [Anonymous Symbol]
    timers.o(.text.xTimerGetPeriod) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    timers.o(.ARM.exidx.text.xTimerGetPeriod) refers to timers.o(.text.xTimerGetPeriod) for [Anonymous Symbol]
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.text.vTimerSetReloadMode) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    timers.o(.ARM.exidx.text.vTimerSetReloadMode) refers to timers.o(.text.vTimerSetReloadMode) for [Anonymous Symbol]
    timers.o(.text.xTimerGetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerGetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.text.xTimerGetReloadMode) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    timers.o(.ARM.exidx.text.xTimerGetReloadMode) refers to timers.o(.text.xTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.text.uxTimerGetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.uxTimerGetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.text.uxTimerGetReloadMode) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    timers.o(.ARM.exidx.text.uxTimerGetReloadMode) refers to timers.o(.text.uxTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.text.xTimerGetExpiryTime) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    timers.o(.ARM.exidx.text.xTimerGetExpiryTime) refers to timers.o(.text.xTimerGetExpiryTime) for [Anonymous Symbol]
    timers.o(.text.pcTimerGetName) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    timers.o(.ARM.exidx.text.pcTimerGetName) refers to timers.o(.text.pcTimerGetName) for [Anonymous Symbol]
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.text.xTimerIsTimerActive) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    timers.o(.ARM.exidx.text.xTimerIsTimerActive) refers to timers.o(.text.xTimerIsTimerActive) for [Anonymous Symbol]
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.text.pvTimerGetTimerID) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    timers.o(.ARM.exidx.text.pvTimerGetTimerID) refers to timers.o(.text.pvTimerGetTimerID) for [Anonymous Symbol]
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.text.vTimerSetTimerID) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    timers.o(.ARM.exidx.text.vTimerSetTimerID) refers to timers.o(.text.vTimerSetTimerID) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCall) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerPendFunctionCall) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.text.xTimerPendFunctionCall) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    timers.o(.ARM.exidx.text.xTimerPendFunctionCall) refers to timers.o(.text.xTimerPendFunctionCall) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.uxTimerGetTimerNumber) refers to timers.o(.text.uxTimerGetTimerNumber) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.vTimerSetTimerNumber) refers to timers.o(.text.vTimerSetTimerNumber) for [Anonymous Symbol]
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvProcessExpiredTimer) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvProcessExpiredTimer) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.ARM.exidx.text.prvProcessExpiredTimer) refers to timers.o(.text.prvProcessExpiredTimer) for [Anonymous Symbol]
    heap_2.o(.text.pvPortMalloc) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_2.o(.text.pvPortMalloc) refers to heap_2.o(.bss.pvPortMalloc.xHeapHasBeenInitialised) for pvPortMalloc.xHeapHasBeenInitialised
    heap_2.o(.text.pvPortMalloc) refers to heap_2.o(.bss.ucHeap) for ucHeap
    heap_2.o(.text.pvPortMalloc) refers to heap_2.o(.bss.xStart) for xStart
    heap_2.o(.text.pvPortMalloc) refers to heap_2.o(.bss.xEnd) for xEnd
    heap_2.o(.text.pvPortMalloc) refers to heap_2.o(.data.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_2.o(.text.pvPortMalloc) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_2.o(.text.pvPortMalloc) refers to main.o(.text.vApplicationMallocFailedHook) for vApplicationMallocFailedHook
    heap_2.o(.ARM.exidx.text.pvPortMalloc) refers to heap_2.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_2.o(.text.vPortFree) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    heap_2.o(.text.vPortFree) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_2.o(.text.vPortFree) refers to heap_2.o(.bss.xStart) for xStart
    heap_2.o(.text.vPortFree) refers to heap_2.o(.data.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_2.o(.text.vPortFree) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_2.o(.ARM.exidx.text.vPortFree) refers to heap_2.o(.text.vPortFree) for [Anonymous Symbol]
    heap_2.o(.text.xPortGetFreeHeapSize) refers to heap_2.o(.data.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_2.o(.ARM.exidx.text.xPortGetFreeHeapSize) refers to heap_2.o(.text.xPortGetFreeHeapSize) for [Anonymous Symbol]
    heap_2.o(.ARM.exidx.text.vPortInitialiseBlocks) refers to heap_2.o(.text.vPortInitialiseBlocks) for [Anonymous Symbol]
    heap_2.o(.text.pvPortCalloc) refers to heap_2.o(.text.pvPortMalloc) for pvPortMalloc
    heap_2.o(.text.pvPortCalloc) refers to memseta.o(.text) for __aeabi_memclr
    heap_2.o(.ARM.exidx.text.pvPortCalloc) refers to heap_2.o(.text.pvPortCalloc) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericReset) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericReset) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericReset) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortYield) for vPortYield
    queue.o(.ARM.exidx.text.xQueueGenericReset) refers to queue.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreate) refers to heap_2.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueGenericCreate) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericCreate) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericCreate) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericCreate) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    queue.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutex) refers to heap_2.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueCreateMutex) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueCreateMutex) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueCreateMutex) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueCreateMutex) refers to queue.o(.text.xQueueCreateMutex) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueGiveMutexRecursive) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    queue.o(.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGiveMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueGenericSend) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortYield) for vPortYield
    queue.o(.text.xQueueGenericSend) refers to memmovea.o(.text) for __aeabi_memcpy
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGenericSend) refers to queue.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue.o(.text.xQueueTakeMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    queue.o(.text.xQueueTakeMutexRecursive) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueTakeMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueSemaphoreTake) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortYield) for vPortYield
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.text.xQueueCreateCountingSemaphore) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueCreateCountingSemaphore) for [Anonymous Symbol]
    queue.o(.text.prvNotifyQueueSetContainer) refers to memmovea.o(.text) for __aeabi_memcpy
    queue.o(.text.prvNotifyQueueSetContainer) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    queue.o(.text.prvNotifyQueueSetContainer) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.text.prvNotifyQueueSetContainer) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.text.prvNotifyQueueSetContainer) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.prvNotifyQueueSetContainer) refers to queue.o(.text.prvNotifyQueueSetContainer) for [Anonymous Symbol]
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvUnlockQueue) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvUnlockQueue) refers to queue.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSendFromISR) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    queue.o(.text.xQueueGenericSendFromISR) refers to memmovea.o(.text) for __aeabi_memcpy
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSendFromISR) refers to portasm.o(.text.vClearInterruptMask) for vClearInterruptMask
    queue.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveFromISR) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.text.xQueueGiveFromISR) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGiveFromISR) refers to portasm.o(.text.vClearInterruptMask) for vClearInterruptMask
    queue.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueReceive) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueReceive) refers to memmovea.o(.text) for __aeabi_memcpy
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortYield) for vPortYield
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.ARM.exidx.text.xQueueReceive) refers to queue.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueuePeek) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueuePeek) refers to memmovea.o(.text) for __aeabi_memcpy
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortYield) for vPortYield
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.ARM.exidx.text.xQueuePeek) refers to queue.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue.o(.text.xQueueReceiveFromISR) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    queue.o(.text.xQueueReceiveFromISR) refers to memmovea.o(.text) for __aeabi_memcpy
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceiveFromISR) refers to portasm.o(.text.vClearInterruptMask) for vClearInterruptMask
    queue.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueuePeekFromISR) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    queue.o(.text.xQueuePeekFromISR) refers to memmovea.o(.text) for __aeabi_memcpy
    queue.o(.text.xQueuePeekFromISR) refers to portasm.o(.text.vClearInterruptMask) for vClearInterruptMask
    queue.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    queue.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    queue.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaitingFromISR) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueDelete) refers to queue.o(.bss.xQueueRegistry) for xQueueRegistry
    queue.o(.text.vQueueDelete) refers to heap_2.o(.text.vPortFree) for vPortFree
    queue.o(.text.vQueueDelete) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    queue.o(.ARM.exidx.text.vQueueDelete) refers to queue.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue.o(.text.vQueueUnregisterQueue) refers to queue.o(.bss.xQueueRegistry) for xQueueRegistry
    queue.o(.text.vQueueUnregisterQueue) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    queue.o(.ARM.exidx.text.vQueueUnregisterQueue) refers to queue.o(.text.vQueueUnregisterQueue) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueNumber) refers to queue.o(.text.uxQueueGetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.vQueueSetQueueNumber) refers to queue.o(.text.vQueueSetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.ucQueueGetQueueType) refers to queue.o(.text.ucQueueGetQueueType) for [Anonymous Symbol]
    queue.o(.text.xQueueIsQueueEmptyFromISR) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueIsQueueFullFromISR) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueAddToRegistry) refers to queue.o(.bss.xQueueRegistry) for xQueueRegistry
    queue.o(.text.vQueueAddToRegistry) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    queue.o(.ARM.exidx.text.vQueueAddToRegistry) refers to queue.o(.text.vQueueAddToRegistry) for [Anonymous Symbol]
    queue.o(.text.pcQueueGetName) refers to queue.o(.bss.xQueueRegistry) for xQueueRegistry
    queue.o(.text.pcQueueGetName) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    queue.o(.ARM.exidx.text.pcQueueGetName) refers to queue.o(.text.pcQueueGetName) for [Anonymous Symbol]
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for vTaskPlaceOnEventListRestricted
    queue.o(.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.vQueueWaitForMessageRestricted) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateSet) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateSet) refers to queue.o(.text.xQueueCreateSet) for [Anonymous Symbol]
    queue.o(.text.xQueueAddToSet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueAddToSet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueAddToSet) refers to queue.o(.text.xQueueAddToSet) for [Anonymous Symbol]
    queue.o(.text.xQueueRemoveFromSet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueRemoveFromSet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueRemoveFromSet) refers to queue.o(.text.xQueueRemoveFromSet) for [Anonymous Symbol]
    queue.o(.text.xQueueSelectFromSet) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    queue.o(.ARM.exidx.text.xQueueSelectFromSet) refers to queue.o(.text.xQueueSelectFromSet) for [Anonymous Symbol]
    queue.o(.text.xQueueSelectFromSetFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    queue.o(.ARM.exidx.text.xQueueSelectFromSetFromISR) refers to queue.o(.text.xQueueSelectFromSetFromISR) for [Anonymous Symbol]
    GenQTest.o(.text.vStartGenericQueueTasks) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    GenQTest.o(.text.vStartGenericQueueTasks) refers to queue.o(.text.vQueueAddToRegistry) for vQueueAddToRegistry
    GenQTest.o(.text.vStartGenericQueueTasks) refers to GenQTest.o(.text.prvSendFrontAndBackTest) for prvSendFrontAndBackTest
    GenQTest.o(.text.vStartGenericQueueTasks) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    GenQTest.o(.text.vStartGenericQueueTasks) refers to queue.o(.text.xQueueCreateMutex) for xQueueCreateMutex
    GenQTest.o(.text.vStartGenericQueueTasks) refers to GenQTest.o(.text.prvLowPriorityMutexTask) for prvLowPriorityMutexTask
    GenQTest.o(.text.vStartGenericQueueTasks) refers to GenQTest.o(.bss.xMediumPriorityMutexTask) for xMediumPriorityMutexTask
    GenQTest.o(.text.vStartGenericQueueTasks) refers to GenQTest.o(.text.prvMediumPriorityMutexTask) for prvMediumPriorityMutexTask
    GenQTest.o(.text.vStartGenericQueueTasks) refers to GenQTest.o(.bss.xHighPriorityMutexTask) for xHighPriorityMutexTask
    GenQTest.o(.text.vStartGenericQueueTasks) refers to GenQTest.o(.text.prvHighPriorityMutexTask) for prvHighPriorityMutexTask
    GenQTest.o(.ARM.exidx.text.vStartGenericQueueTasks) refers to GenQTest.o(.text.vStartGenericQueueTasks) for [Anonymous Symbol]
    GenQTest.o(.text.prvSendFrontAndBackTest) refers to GenQTest.o(.bss.ulLoopCounter) for ulLoopCounter
    GenQTest.o(.text.prvSendFrontAndBackTest) refers to GenQTest.o(.bss.xErrorDetected) for xErrorDetected
    GenQTest.o(.text.prvSendFrontAndBackTest) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    GenQTest.o(.text.prvSendFrontAndBackTest) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    GenQTest.o(.text.prvSendFrontAndBackTest) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    GenQTest.o(.text.prvSendFrontAndBackTest) refers to queue.o(.text.xQueuePeek) for xQueuePeek
    GenQTest.o(.ARM.exidx.text.prvSendFrontAndBackTest) refers to GenQTest.o(.text.prvSendFrontAndBackTest) for [Anonymous Symbol]
    GenQTest.o(.text.prvLowPriorityMutexTask) refers to queue.o(.text.xQueueCreateMutex) for xQueueCreateMutex
    GenQTest.o(.text.prvLowPriorityMutexTask) refers to GenQTest.o(.bss.ulGuardedVariable) for ulGuardedVariable
    GenQTest.o(.text.prvLowPriorityMutexTask) refers to GenQTest.o(.bss.xHighPriorityMutexTask) for xHighPriorityMutexTask
    GenQTest.o(.text.prvLowPriorityMutexTask) refers to GenQTest.o(.bss.ulLoopCounter2) for ulLoopCounter2
    GenQTest.o(.text.prvLowPriorityMutexTask) refers to GenQTest.o(.bss.xErrorDetected) for xErrorDetected
    GenQTest.o(.text.prvLowPriorityMutexTask) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    GenQTest.o(.text.prvLowPriorityMutexTask) refers to tasks.o(.text.uxTaskPriorityGet) for uxTaskPriorityGet
    GenQTest.o(.text.prvLowPriorityMutexTask) refers to tasks.o(.text.vTaskResume) for vTaskResume
    GenQTest.o(.text.prvLowPriorityMutexTask) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    GenQTest.o(.text.prvLowPriorityMutexTask) refers to tasks.o(.text.vTaskPrioritySet) for vTaskPrioritySet
    GenQTest.o(.text.prvLowPriorityMutexTask) refers to GenQTest.o(.bss.xMediumPriorityMutexTask) for xMediumPriorityMutexTask
    GenQTest.o(.text.prvLowPriorityMutexTask) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    GenQTest.o(.text.prvLowPriorityMutexTask) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    GenQTest.o(.ARM.exidx.text.prvLowPriorityMutexTask) refers to GenQTest.o(.text.prvLowPriorityMutexTask) for [Anonymous Symbol]
    GenQTest.o(.text.prvMediumPriorityMutexTask) refers to GenQTest.o(.bss.ulGuardedVariable) for ulGuardedVariable
    GenQTest.o(.text.prvMediumPriorityMutexTask) refers to tasks.o(.text.vTaskSuspend) for vTaskSuspend
    GenQTest.o(.ARM.exidx.text.prvMediumPriorityMutexTask) refers to GenQTest.o(.text.prvMediumPriorityMutexTask) for [Anonymous Symbol]
    GenQTest.o(.text.prvHighPriorityMutexTask) refers to GenQTest.o(.bss.xErrorDetected) for xErrorDetected
    GenQTest.o(.text.prvHighPriorityMutexTask) refers to GenQTest.o(.bss.xBlockWasAborted) for xBlockWasAborted
    GenQTest.o(.text.prvHighPriorityMutexTask) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    GenQTest.o(.text.prvHighPriorityMutexTask) refers to tasks.o(.text.vTaskSuspend) for vTaskSuspend
    GenQTest.o(.text.prvHighPriorityMutexTask) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    GenQTest.o(.ARM.exidx.text.prvHighPriorityMutexTask) refers to GenQTest.o(.text.prvHighPriorityMutexTask) for [Anonymous Symbol]
    GenQTest.o(.text.xAreGenericQueueTasksStillRunning) refers to GenQTest.o(.bss.xAreGenericQueueTasksStillRunning.ulLastLoopCounter) for xAreGenericQueueTasksStillRunning.ulLastLoopCounter
    GenQTest.o(.text.xAreGenericQueueTasksStillRunning) refers to GenQTest.o(.bss.ulLoopCounter) for ulLoopCounter
    GenQTest.o(.text.xAreGenericQueueTasksStillRunning) refers to GenQTest.o(.bss.xErrorDetected) for xErrorDetected
    GenQTest.o(.text.xAreGenericQueueTasksStillRunning) refers to GenQTest.o(.bss.xAreGenericQueueTasksStillRunning.ulLastLoopCounter2) for xAreGenericQueueTasksStillRunning.ulLastLoopCounter2
    GenQTest.o(.text.xAreGenericQueueTasksStillRunning) refers to GenQTest.o(.bss.ulLoopCounter2) for ulLoopCounter2
    GenQTest.o(.ARM.exidx.text.xAreGenericQueueTasksStillRunning) refers to GenQTest.o(.text.xAreGenericQueueTasksStillRunning) for [Anonymous Symbol]
    PollQ.o(.text.vStartPolledQueueTasks) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    PollQ.o(.text.vStartPolledQueueTasks) refers to PollQ.o(.bss.vStartPolledQueueTasks.xPolledQueue) for vStartPolledQueueTasks.xPolledQueue
    PollQ.o(.text.vStartPolledQueueTasks) refers to queue.o(.text.vQueueAddToRegistry) for vQueueAddToRegistry
    PollQ.o(.text.vStartPolledQueueTasks) refers to PollQ.o(.text.vPolledQueueConsumer) for vPolledQueueConsumer
    PollQ.o(.text.vStartPolledQueueTasks) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    PollQ.o(.text.vStartPolledQueueTasks) refers to PollQ.o(.text.vPolledQueueProducer) for vPolledQueueProducer
    PollQ.o(.ARM.exidx.text.vStartPolledQueueTasks) refers to PollQ.o(.text.vStartPolledQueueTasks) for [Anonymous Symbol]
    PollQ.o(.text.vPolledQueueConsumer) refers to PollQ.o(.bss.xPollingConsumerCount) for xPollingConsumerCount
    PollQ.o(.text.vPolledQueueConsumer) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    PollQ.o(.text.vPolledQueueConsumer) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    PollQ.o(.text.vPolledQueueConsumer) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    PollQ.o(.text.vPolledQueueConsumer) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    PollQ.o(.text.vPolledQueueConsumer) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    PollQ.o(.ARM.exidx.text.vPolledQueueConsumer) refers to PollQ.o(.text.vPolledQueueConsumer) for [Anonymous Symbol]
    PollQ.o(.text.vPolledQueueProducer) refers to PollQ.o(.bss.xPollingProducerCount) for xPollingProducerCount
    PollQ.o(.text.vPolledQueueProducer) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    PollQ.o(.text.vPolledQueueProducer) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    PollQ.o(.text.vPolledQueueProducer) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    PollQ.o(.text.vPolledQueueProducer) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    PollQ.o(.ARM.exidx.text.vPolledQueueProducer) refers to PollQ.o(.text.vPolledQueueProducer) for [Anonymous Symbol]
    PollQ.o(.text.xArePollingQueuesStillRunning) refers to PollQ.o(.bss.xPollingConsumerCount) for xPollingConsumerCount
    PollQ.o(.text.xArePollingQueuesStillRunning) refers to PollQ.o(.bss.xPollingProducerCount) for xPollingProducerCount
    PollQ.o(.ARM.exidx.text.xArePollingQueuesStillRunning) refers to PollQ.o(.text.xArePollingQueuesStillRunning) for [Anonymous Symbol]
    semtest.o(.text.vStartSemaphoreTasks) refers to heap_2.o(.text.pvPortMalloc) for pvPortMalloc
    semtest.o(.text.vStartSemaphoreTasks) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    semtest.o(.text.vStartSemaphoreTasks) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    semtest.o(.text.vStartSemaphoreTasks) refers to semtest.o(.text.prvSemaphoreTest) for prvSemaphoreTest
    semtest.o(.text.vStartSemaphoreTasks) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    semtest.o(.text.vStartSemaphoreTasks) refers to queue.o(.text.vQueueAddToRegistry) for vQueueAddToRegistry
    semtest.o(.ARM.exidx.text.vStartSemaphoreTasks) refers to semtest.o(.text.vStartSemaphoreTasks) for [Anonymous Symbol]
    semtest.o(.text.prvSemaphoreTest) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    semtest.o(.text.prvSemaphoreTest) refers to semtest.o(.bss.sNextCheckVariable) for sNextCheckVariable
    semtest.o(.text.prvSemaphoreTest) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    semtest.o(.text.prvSemaphoreTest) refers to semtest.o(.bss.sCheckVariables) for sCheckVariables
    semtest.o(.text.prvSemaphoreTest) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    semtest.o(.text.prvSemaphoreTest) refers to port.o(.text.vPortYield) for vPortYield
    semtest.o(.text.prvSemaphoreTest) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    semtest.o(.text.prvSemaphoreTest) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    semtest.o(.ARM.exidx.text.prvSemaphoreTest) refers to semtest.o(.text.prvSemaphoreTest) for [Anonymous Symbol]
    semtest.o(.text.xAreSemaphoreTasksStillRunning) refers to semtest.o(.bss.sCheckVariables) for sCheckVariables
    semtest.o(.text.xAreSemaphoreTasksStillRunning) refers to semtest.o(.bss.xAreSemaphoreTasksStillRunning.sLastCheckVariables) for xAreSemaphoreTasksStillRunning.sLastCheckVariables
    semtest.o(.ARM.exidx.text.xAreSemaphoreTasksStillRunning) refers to semtest.o(.text.xAreSemaphoreTasksStillRunning) for [Anonymous Symbol]
    QueueSet.o(.text.vStartQueueSetTasks) refers to QueueSet.o(.bss.xQueueSetSendingTask) for xQueueSetSendingTask
    QueueSet.o(.text.vStartQueueSetTasks) refers to QueueSet.o(.text.prvQueueSetSendingTask) for prvQueueSetSendingTask
    QueueSet.o(.text.vStartQueueSetTasks) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    QueueSet.o(.text.vStartQueueSetTasks) refers to QueueSet.o(.text.prvQueueSetReceivingTask) for prvQueueSetReceivingTask
    QueueSet.o(.text.vStartQueueSetTasks) refers to QueueSet.o(.bss.xQueueSetReceivingTask) for xQueueSetReceivingTask
    QueueSet.o(.text.vStartQueueSetTasks) refers to tasks.o(.text.vTaskSuspend) for vTaskSuspend
    QueueSet.o(.ARM.exidx.text.vStartQueueSetTasks) refers to QueueSet.o(.text.vStartQueueSetTasks) for [Anonymous Symbol]
    QueueSet.o(.text.prvQueueSetSendingTask) refers to QueueSet.o(.bss.uxNextRand) for uxNextRand
    QueueSet.o(.text.prvQueueSetSendingTask) refers to QueueSet.o(.bss.xQueues) for xQueues
    QueueSet.o(.text.prvQueueSetSendingTask) refers to QueueSet.o(.bss.ulQueueUsedCounter) for ulQueueUsedCounter
    QueueSet.o(.text.prvQueueSetSendingTask) refers to QueueSet.o(.bss.prvChangeRelativePriorities.ulLoops) for prvChangeRelativePriorities.ulLoops
    QueueSet.o(.text.prvQueueSetSendingTask) refers to QueueSet.o(.bss.prvChangeRelativePriorities.ePriorities) for prvChangeRelativePriorities.ePriorities
    QueueSet.o(.text.prvQueueSetSendingTask) refers to QueueSet.o(.bss.xQueueSetSendingTask) for xQueueSetSendingTask
    QueueSet.o(.text.prvQueueSetSendingTask) refers to tasks.o(.text.vTaskPrioritySet) for vTaskPrioritySet
    QueueSet.o(.text.prvQueueSetSendingTask) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    QueueSet.o(.text.prvQueueSetSendingTask) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    QueueSet.o(.text.prvQueueSetSendingTask) refers to QueueSet.o(.data.xQueueSetTasksStatus) for xQueueSetTasksStatus
    QueueSet.o(.text.prvQueueSetSendingTask) refers to QueueSet.o(.bss.xQueueSetReceivingTask) for xQueueSetReceivingTask
    QueueSet.o(.ARM.exidx.text.prvQueueSetSendingTask) refers to QueueSet.o(.text.prvQueueSetSendingTask) for [Anonymous Symbol]
    QueueSet.o(.text.prvQueueSetReceivingTask) refers to queue.o(.text.xQueueCreateSet) for xQueueCreateSet
    QueueSet.o(.text.prvQueueSetReceivingTask) refers to QueueSet.o(.bss.xQueues) for xQueues
    QueueSet.o(.text.prvQueueSetReceivingTask) refers to QueueSet.o(.bss.xQueueSet) for xQueueSet
    QueueSet.o(.text.prvQueueSetReceivingTask) refers to QueueSet.o(.data.xQueueSetTasksStatus) for xQueueSetTasksStatus
    QueueSet.o(.text.prvQueueSetReceivingTask) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    QueueSet.o(.text.prvQueueSetReceivingTask) refers to queue.o(.text.xQueueAddToSet) for xQueueAddToSet
    QueueSet.o(.text.prvQueueSetReceivingTask) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    QueueSet.o(.text.prvQueueSetReceivingTask) refers to queue.o(.text.xQueueRemoveFromSet) for xQueueRemoveFromSet
    QueueSet.o(.text.prvQueueSetReceivingTask) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    QueueSet.o(.text.prvQueueSetReceivingTask) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    QueueSet.o(.text.prvQueueSetReceivingTask) refers to queue.o(.text.xQueueSelectFromSet) for xQueueSelectFromSet
    QueueSet.o(.text.prvQueueSetReceivingTask) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    QueueSet.o(.text.prvQueueSetReceivingTask) refers to queue.o(.text.xQueuePeek) for xQueuePeek
    QueueSet.o(.text.prvQueueSetReceivingTask) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    QueueSet.o(.text.prvQueueSetReceivingTask) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    QueueSet.o(.text.prvQueueSetReceivingTask) refers to QueueSet.o(.bss.xQueueSetSendingTask) for xQueueSetSendingTask
    QueueSet.o(.text.prvQueueSetReceivingTask) refers to tasks.o(.text.vTaskResume) for vTaskResume
    QueueSet.o(.text.prvQueueSetReceivingTask) refers to QueueSet.o(.bss.xSetupComplete) for xSetupComplete
    QueueSet.o(.text.prvQueueSetReceivingTask) refers to QueueSet.o(.bss.ulCycleCounter) for ulCycleCounter
    QueueSet.o(.text.prvQueueSetReceivingTask) refers to tasks.o(.text.uxTaskPriorityGet) for uxTaskPriorityGet
    QueueSet.o(.text.prvQueueSetReceivingTask) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    QueueSet.o(.text.prvQueueSetReceivingTask) refers to QueueSet.o(.text.prvCheckReceivedValue) for prvCheckReceivedValue
    QueueSet.o(.text.prvQueueSetReceivingTask) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    QueueSet.o(.ARM.exidx.text.prvQueueSetReceivingTask) refers to QueueSet.o(.text.prvQueueSetReceivingTask) for [Anonymous Symbol]
    QueueSet.o(.text.xAreQueueSetTasksStillRunning) refers to QueueSet.o(.bss.xAreQueueSetTasksStillRunning.ulLastCycleCounter) for xAreQueueSetTasksStillRunning.ulLastCycleCounter
    QueueSet.o(.text.xAreQueueSetTasksStillRunning) refers to QueueSet.o(.bss.ulCycleCounter) for ulCycleCounter
    QueueSet.o(.text.xAreQueueSetTasksStillRunning) refers to QueueSet.o(.bss.ulQueueUsedCounter) for ulQueueUsedCounter
    QueueSet.o(.text.xAreQueueSetTasksStillRunning) refers to QueueSet.o(.bss.xAreQueueSetTasksStillRunning.ulLastQueueUsedCounter) for xAreQueueSetTasksStillRunning.ulLastQueueUsedCounter
    QueueSet.o(.text.xAreQueueSetTasksStillRunning) refers to QueueSet.o(.data.xQueueSetTasksStatus) for xQueueSetTasksStatus
    QueueSet.o(.text.xAreQueueSetTasksStillRunning) refers to QueueSet.o(.data.ulISRTxValue) for ulISRTxValue
    QueueSet.o(.text.xAreQueueSetTasksStillRunning) refers to QueueSet.o(.bss.xAreQueueSetTasksStillRunning.ulLastISRTxValue) for xAreQueueSetTasksStillRunning.ulLastISRTxValue
    QueueSet.o(.ARM.exidx.text.xAreQueueSetTasksStillRunning) refers to QueueSet.o(.text.xAreQueueSetTasksStillRunning) for [Anonymous Symbol]
    QueueSet.o(.text.vQueueSetAccessQueueSetFromISR) refers to QueueSet.o(.bss.xSetupComplete) for xSetupComplete
    QueueSet.o(.text.vQueueSetAccessQueueSetFromISR) refers to QueueSet.o(.bss.vQueueSetAccessQueueSetFromISR.ulCallCount) for vQueueSetAccessQueueSetFromISR.ulCallCount
    QueueSet.o(.text.vQueueSetAccessQueueSetFromISR) refers to QueueSet.o(.bss.xQueueSet) for xQueueSet
    QueueSet.o(.text.vQueueSetAccessQueueSetFromISR) refers to queue.o(.text.xQueueSelectFromSetFromISR) for xQueueSelectFromSetFromISR
    QueueSet.o(.text.vQueueSetAccessQueueSetFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    QueueSet.o(.text.vQueueSetAccessQueueSetFromISR) refers to QueueSet.o(.data.xQueueSetTasksStatus) for xQueueSetTasksStatus
    QueueSet.o(.text.vQueueSetAccessQueueSetFromISR) refers to QueueSet.o(.text.prvCheckReceivedValue) for prvCheckReceivedValue
    QueueSet.o(.text.vQueueSetAccessQueueSetFromISR) refers to QueueSet.o(.data.ulISRTxValue) for ulISRTxValue
    QueueSet.o(.text.vQueueSetAccessQueueSetFromISR) refers to QueueSet.o(.bss.prvSendToQueueInSetFromISR.xQueueToWriteTo) for prvSendToQueueInSetFromISR.xQueueToWriteTo
    QueueSet.o(.text.vQueueSetAccessQueueSetFromISR) refers to QueueSet.o(.bss.xQueues) for xQueues
    QueueSet.o(.text.vQueueSetAccessQueueSetFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    QueueSet.o(.ARM.exidx.text.vQueueSetAccessQueueSetFromISR) refers to QueueSet.o(.text.vQueueSetAccessQueueSetFromISR) for [Anonymous Symbol]
    QueueSet.o(.text.prvCheckReceivedValue) refers to QueueSet.o(.data.xQueueSetTasksStatus) for xQueueSetTasksStatus
    QueueSet.o(.text.prvCheckReceivedValue) refers to QueueSet.o(.data.prvCheckReceivedValue.ulExpectedReceivedFromISR) for prvCheckReceivedValue.ulExpectedReceivedFromISR
    QueueSet.o(.text.prvCheckReceivedValue) refers to QueueSet.o(.bss.prvCheckReceivedValue.ulExpectedReceivedFromTask) for prvCheckReceivedValue.ulExpectedReceivedFromTask
    QueueSet.o(.text.prvCheckReceivedValue) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    QueueSet.o(.ARM.exidx.text.prvCheckReceivedValue) refers to QueueSet.o(.text.prvCheckReceivedValue) for [Anonymous Symbol]
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.xMaximumPossibleSuppressedTicks) for xMaximumPossibleSuppressedTicks
    port.o(.text.vPortSuppressTicksAndSleep) refers to tasks.o(.text.eTaskConfirmSleepModeStatus) for eTaskConfirmSleepModeStatus
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.ulTimerCountsForOneTick) for ulTimerCountsForOneTick
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.ulStoppedTimerCompensation) for ulStoppedTimerCompensation
    port.o(.text.vPortSuppressTicksAndSleep) refers to tasks.o(.text.vTaskStepTick) for vTaskStepTick
    port.o(.ARM.exidx.text.vPortSuppressTicksAndSleep) refers to port.o(.text.vPortSuppressTicksAndSleep) for [Anonymous Symbol]
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.ulTimerCountsForOneTick) for ulTimerCountsForOneTick
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.xMaximumPossibleSuppressedTicks) for xMaximumPossibleSuppressedTicks
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.ulStoppedTimerCompensation) for ulStoppedTimerCompensation
    port.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortYield) refers to port.o(.text.vPortYield) for [Anonymous Symbol]
    port.o(.text.vPortEnterCritical) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    port.o(.text.vPortEnterCritical) refers to port.o(.data.ulCriticalNesting) for ulCriticalNesting
    port.o(.ARM.exidx.text.vPortEnterCritical) refers to port.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port.o(.text.vPortExitCritical) refers to port.o(.data.ulCriticalNesting) for ulCriticalNesting
    port.o(.text.vPortExitCritical) refers to portasm.o(.text.vClearInterruptMask) for vClearInterruptMask
    port.o(.text.vPortExitCritical) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    port.o(.ARM.exidx.text.vPortExitCritical) refers to port.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port.o(.text.SysTick_Handler) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    port.o(.text.SysTick_Handler) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port.o(.text.SysTick_Handler) refers to portasm.o(.text.vClearInterruptMask) for vClearInterruptMask
    port.o(.ARM.exidx.text.SysTick_Handler) refers to port.o(.text.SysTick_Handler) for [Anonymous Symbol]
    port.o(.text.vPortSVCHandler_C) refers to portasm.o(.text.vRestoreContextOfFirstTask) for vRestoreContextOfFirstTask
    port.o(.text.vPortSVCHandler_C) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    port.o(.ARM.exidx.text.vPortSVCHandler_C) refers to port.o(.text.vPortSVCHandler_C) for [Anonymous Symbol]
    port.o(.text.pxPortInitialiseStack) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port.o(.text.prvTaskExitError) refers to port.o(.data.ulCriticalNesting) for ulCriticalNesting
    port.o(.text.prvTaskExitError) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    port.o(.ARM.exidx.text.prvTaskExitError) refers to port.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(.text.xPortStartScheduler) refers to port.o(.data.ulCriticalNesting) for ulCriticalNesting
    port.o(.text.xPortStartScheduler) refers to portasm.o(.text.vStartFirstTask) for vStartFirstTask
    port.o(.text.xPortStartScheduler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.xPortStartScheduler) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    port.o(.ARM.exidx.text.xPortStartScheduler) refers to port.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port.o(.text.vPortEndScheduler) refers to port.o(.data.ulCriticalNesting) for ulCriticalNesting
    port.o(.text.vPortEndScheduler) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    port.o(.ARM.exidx.text.vPortEndScheduler) refers to port.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.xPortIsInsideInterrupt) refers to port.o(.text.xPortIsInsideInterrupt) for [Anonymous Symbol]
    portasm.o(.text.vRestoreContextOfFirstTask) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    portasm.o(.ARM.exidx.text.vRestoreContextOfFirstTask) refers to portasm.o(.text.vRestoreContextOfFirstTask) for [Anonymous Symbol]
    portasm.o(.ARM.exidx.text.xIsPrivileged) refers to portasm.o(.text.xIsPrivileged) for [Anonymous Symbol]
    portasm.o(.ARM.exidx.text.vRaisePrivilege) refers to portasm.o(.text.vRaisePrivilege) for [Anonymous Symbol]
    portasm.o(.ARM.exidx.text.vResetPrivilege) refers to portasm.o(.text.vResetPrivilege) for [Anonymous Symbol]
    portasm.o(.ARM.exidx.text.vStartFirstTask) refers to portasm.o(.text.vStartFirstTask) for [Anonymous Symbol]
    portasm.o(.ARM.exidx.text.ulSetInterruptMask) refers to portasm.o(.text.ulSetInterruptMask) for [Anonymous Symbol]
    portasm.o(.ARM.exidx.text.vClearInterruptMask) refers to portasm.o(.text.vClearInterruptMask) for [Anonymous Symbol]
    portasm.o(.text.PendSV_Handler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    portasm.o(.text.PendSV_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    portasm.o(.ARM.exidx.text.PendSV_Handler) refers to portasm.o(.text.PendSV_Handler) for [Anonymous Symbol]
    portasm.o(.text.SVC_Handler) refers to port.o(.text.vPortSVCHandler_C) for vPortSVCHandler_C
    portasm.o(.ARM.exidx.text.SVC_Handler) refers to portasm.o(.text.SVC_Handler) for [Anonymous Symbol]
    retarget.o(.text.ProcessHardFault) refers to retarget.o(.rodata.str1.1) for .Lstr
    retarget.o(.text.ProcessHardFault) refers to puts.o(i.puts) for puts
    retarget.o(.text.ProcessHardFault) refers to printf8.o(i.__0printf$8) for __2printf
    retarget.o(.ARM.exidx.text.ProcessHardFault) refers to retarget.o(.text.ProcessHardFault) for [Anonymous Symbol]
    retarget.o(.text._sys_open) refers to retarget.o(.rodata.__stdin_name) for __stdin_name
    retarget.o(.text._sys_open) refers to strcmp.o(.text) for strcmp
    retarget.o(.text._sys_open) refers to retarget.o(.rodata.__stdout_name) for __stdout_name
    retarget.o(.text._sys_open) refers to retarget.o(.rodata.__stderr_name) for __stderr_name
    retarget.o(.ARM.exidx.text._sys_open) refers to retarget.o(.text._sys_open) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text._sys_write) refers to retarget.o(.text._sys_write) for [Anonymous Symbol]
    retarget.o(.text._sys_read) refers to memseta.o(.text) for __aeabi_memclr
    retarget.o(.ARM.exidx.text._sys_read) refers to retarget.o(.text._sys_read) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text._sys_istty) refers to retarget.o(.text._sys_istty) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text._sys_close) refers to retarget.o(.text._sys_close) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text._sys_seek) refers to retarget.o(.text._sys_seek) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text._sys_ensure) refers to retarget.o(.text._sys_ensure) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text._sys_flen) refers to retarget.o(.text._sys_flen) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text._sys_tmpnam) refers to retarget.o(.text._sys_tmpnam) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text._sys_command_string) refers to retarget.o(.text._sys_command_string) for [Anonymous Symbol]
    retarget.o(.text._sys_exit) refers to printf8.o(i.__0snprintf$8) for __2snprintf
    retarget.o(.ARM.exidx.text._sys_exit) refers to retarget.o(.text._sys_exit) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text._ttywrch) refers to retarget.o(.text._ttywrch) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text.abort) refers to retarget.o(.text.abort) for [Anonymous Symbol]
    retarget.o(.text.__aeabi_assert) refers to stderr.o(.data) for __stderr
    retarget.o(.text.__aeabi_assert) refers to fwrite.o(i.fwrite) for fwrite
    retarget.o(.text.__aeabi_assert) refers to fputs.o(i.fputs) for fputs
    retarget.o(.text.__aeabi_assert) refers to retarget.o(.text.abort) for abort
    retarget.o(.ARM.exidx.text.__aeabi_assert) refers to retarget.o(.text.__aeabi_assert) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text.fputc) refers to retarget.o(.text.fputc) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text.fgetc) refers to retarget.o(.text.fgetc) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_DisableCKO) refers to clk.o(.text.CLK_DisableCKO) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_EnableCKO) refers to clk.o(.text.CLK_EnableCKO) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_GetHXTFreq) refers to clk.o(.text.CLK_GetHXTFreq) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_GetLXTFreq) refers to clk.o(.text.CLK_GetLXTFreq) for [Anonymous Symbol]
    clk.o(.text.CLK_GetMIRCFreq) refers to clk.o(.rodata.cst16) for .Lswitch.table.CLK_SystemClockUpdate
    clk.o(.ARM.exidx.text.CLK_GetMIRCFreq) refers to clk.o(.text.CLK_GetMIRCFreq) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_DisableMIRC) refers to clk.o(.text.CLK_DisableMIRC) for [Anonymous Symbol]
    clk.o(.text.CLK_EnableMIRC) refers to system_M55M1.o(.data.SystemCoreClock) for SystemCoreClock
    clk.o(.text.CLK_EnableMIRC) refers to clk.o(.rodata.cst16) for .Lswitch.table.CLK_SystemClockUpdate
    clk.o(.ARM.exidx.text.CLK_EnableMIRC) refers to clk.o(.text.CLK_EnableMIRC) for [Anonymous Symbol]
    clk.o(.text.CLK_WaitClockReady) refers to system_M55M1.o(.data.SystemCoreClock) for SystemCoreClock
    clk.o(.ARM.exidx.text.CLK_WaitClockReady) refers to clk.o(.text.CLK_WaitClockReady) for [Anonymous Symbol]
    clk.o(.text.CLK_GetPCLK0Freq) refers to clk.o(.text.CLK_SystemClockUpdate) for CLK_SystemClockUpdate
    clk.o(.ARM.exidx.text.CLK_GetPCLK0Freq) refers to clk.o(.text.CLK_GetPCLK0Freq) for [Anonymous Symbol]
    clk.o(.text.CLK_GetHCLK0Freq) refers to clk.o(.text.CLK_SystemClockUpdate) for CLK_SystemClockUpdate
    clk.o(.ARM.exidx.text.CLK_GetHCLK0Freq) refers to clk.o(.text.CLK_GetHCLK0Freq) for [Anonymous Symbol]
    clk.o(.text.CLK_GetPCLK1Freq) refers to clk.o(.text.CLK_SystemClockUpdate) for CLK_SystemClockUpdate
    clk.o(.ARM.exidx.text.CLK_GetPCLK1Freq) refers to clk.o(.text.CLK_GetPCLK1Freq) for [Anonymous Symbol]
    clk.o(.text.CLK_GetPCLK2Freq) refers to clk.o(.text.CLK_SystemClockUpdate) for CLK_SystemClockUpdate
    clk.o(.ARM.exidx.text.CLK_GetPCLK2Freq) refers to clk.o(.text.CLK_GetPCLK2Freq) for [Anonymous Symbol]
    clk.o(.text.CLK_GetPCLK3Freq) refers to clk.o(.text.CLK_SystemClockUpdate) for CLK_SystemClockUpdate
    clk.o(.ARM.exidx.text.CLK_GetPCLK3Freq) refers to clk.o(.text.CLK_GetPCLK3Freq) for [Anonymous Symbol]
    clk.o(.text.CLK_GetPCLK4Freq) refers to clk.o(.text.CLK_SystemClockUpdate) for CLK_SystemClockUpdate
    clk.o(.ARM.exidx.text.CLK_GetPCLK4Freq) refers to clk.o(.text.CLK_GetPCLK4Freq) for [Anonymous Symbol]
    clk.o(.text.CLK_GetHCLK2Freq) refers to clk.o(.text.CLK_SystemClockUpdate) for CLK_SystemClockUpdate
    clk.o(.ARM.exidx.text.CLK_GetHCLK2Freq) refers to clk.o(.text.CLK_GetHCLK2Freq) for [Anonymous Symbol]
    clk.o(.text.CLK_GetPCLK5Freq) refers to system_M55M1.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    clk.o(.text.CLK_GetPCLK5Freq) refers to system_M55M1.o(.data.SystemCoreClock) for SystemCoreClock
    clk.o(.ARM.exidx.text.CLK_GetPCLK5Freq) refers to clk.o(.text.CLK_GetPCLK5Freq) for [Anonymous Symbol]
    clk.o(.text.CLK_GetACLKFreq) refers to system_M55M1.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    clk.o(.text.CLK_GetACLKFreq) refers to system_M55M1.o(.data.SystemCoreClock) for SystemCoreClock
    clk.o(.ARM.exidx.text.CLK_GetACLKFreq) refers to clk.o(.text.CLK_GetACLKFreq) for [Anonymous Symbol]
    clk.o(.text.CLK_GetSCLKFreq) refers to clk.o(.text.CLK_SystemClockUpdate) for CLK_SystemClockUpdate
    clk.o(.text.CLK_GetSCLKFreq) refers to system_M55M1.o(.data.SystemCoreClock) for SystemCoreClock
    clk.o(.ARM.exidx.text.CLK_GetSCLKFreq) refers to clk.o(.text.CLK_GetSCLKFreq) for [Anonymous Symbol]
    clk.o(.text.CLK_SystemClockUpdate) refers to clk.o(.rodata.cst4) for .L__const.CLK_GetAPLL1ClockFreq.au8NoTbl
    clk.o(.text.CLK_SystemClockUpdate) refers to system_M55M1.o(.data.PllClock) for PllClock
    clk.o(.text.CLK_SystemClockUpdate) refers to clk.o(.rodata.cst16) for .Lswitch.table.CLK_SystemClockUpdate
    clk.o(.ARM.exidx.text.CLK_SystemClockUpdate) refers to clk.o(.text.CLK_SystemClockUpdate) for [Anonymous Symbol]
    clk.o(.text.CLK_GetHCLK1Freq) refers to clk.o(.text.CLK_SystemClockUpdate) for CLK_SystemClockUpdate
    clk.o(.ARM.exidx.text.CLK_GetHCLK1Freq) refers to clk.o(.text.CLK_GetHCLK1Freq) for [Anonymous Symbol]
    clk.o(.text.CLK_SetCoreClock) refers to system_M55M1.o(.data.SystemCoreClock) for SystemCoreClock
    clk.o(.text.CLK_SetCoreClock) refers to clk.o(.text.CLK_EnableAPLL) for CLK_EnableAPLL
    clk.o(.text.CLK_SetCoreClock) refers to clk.o(.text.CLK_SetSCLK) for CLK_SetSCLK
    clk.o(.ARM.exidx.text.CLK_SetCoreClock) refers to clk.o(.text.CLK_SetCoreClock) for [Anonymous Symbol]
    clk.o(.text.CLK_EnableAPLL) refers to system_M55M1.o(.data.SystemCoreClock) for SystemCoreClock
    clk.o(.text.CLK_EnableAPLL) refers to clk.o(.rodata.cst4) for .L__const.CLK_GetAPLL1ClockFreq.au8NoTbl
    clk.o(.ARM.exidx.text.CLK_EnableAPLL) refers to clk.o(.text.CLK_EnableAPLL) for [Anonymous Symbol]
    clk.o(.text.CLK_SetSCLK) refers to system_M55M1.o(.data.SystemCoreClock) for SystemCoreClock
    clk.o(.text.CLK_SetSCLK) refers to clk.o(.rodata.cst4) for .L__const.CLK_GetAPLL1ClockFreq.au8NoTbl
    clk.o(.text.CLK_SetSCLK) refers to system_M55M1.o(.data.PllClock) for PllClock
    clk.o(.text.CLK_SetSCLK) refers to system_M55M1.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    clk.o(.ARM.exidx.text.CLK_SetSCLK) refers to clk.o(.text.CLK_SetSCLK) for [Anonymous Symbol]
    clk.o(.text.CLK_GetAPLL0ClockFreq) refers to clk.o(.rodata.cst4) for .L__const.CLK_GetAPLL1ClockFreq.au8NoTbl
    clk.o(.ARM.exidx.text.CLK_GetAPLL0ClockFreq) refers to clk.o(.text.CLK_GetAPLL0ClockFreq) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_SetModuleClock) refers to clk.o(.text.CLK_SetModuleClock) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_SetSysTickClockSrc) refers to clk.o(.text.CLK_SetSysTickClockSrc) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_EnableXtalRC) refers to clk.o(.text.CLK_EnableXtalRC) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_DisableXtalRC) refers to clk.o(.text.CLK_DisableXtalRC) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_EnableModuleClock) refers to clk.o(.text.CLK_EnableModuleClock) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_DisableModuleClock) refers to clk.o(.text.CLK_DisableModuleClock) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_DisableAPLL) refers to clk.o(.text.CLK_DisableAPLL) for [Anonymous Symbol]
    clk.o(.text.CLK_WaitClockDisable) refers to system_M55M1.o(.data.SystemCoreClock) for SystemCoreClock
    clk.o(.ARM.exidx.text.CLK_WaitClockDisable) refers to clk.o(.text.CLK_WaitClockDisable) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_EnableSysTick) refers to clk.o(.text.CLK_EnableSysTick) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_DisableSysTick) refers to clk.o(.text.CLK_DisableSysTick) for [Anonymous Symbol]
    clk.o(.text.CLK_GetAPLL1ClockFreq) refers to clk.o(.rodata.cst4) for .L__const.CLK_GetAPLL1ClockFreq.au8NoTbl
    clk.o(.ARM.exidx.text.CLK_GetAPLL1ClockFreq) refers to clk.o(.text.CLK_GetAPLL1ClockFreq) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_GetModuleClockSource) refers to clk.o(.text.CLK_GetModuleClockSource) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_GetModuleClockDivider) refers to clk.o(.text.CLK_GetModuleClockDivider) for [Anonymous Symbol]
    clk.o(.text.CLK_SetBusClock) refers to system_M55M1.o(.data.SystemCoreClock) for SystemCoreClock
    clk.o(.text.CLK_SetBusClock) refers to clk.o(.text.CLK_SetSCLK) for CLK_SetSCLK
    clk.o(.text.CLK_SetBusClock) refers to clk.o(.text.CLK_EnableAPLL) for CLK_EnableAPLL
    clk.o(.ARM.exidx.text.CLK_SetBusClock) refers to clk.o(.text.CLK_SetBusClock) for [Anonymous Symbol]
    clk.o(.text.CLK_SysTickDelay) refers to system_M55M1.o(.data.CyclesPerUs) for CyclesPerUs
    clk.o(.ARM.exidx.text.CLK_SysTickDelay) refers to clk.o(.text.CLK_SysTickDelay) for [Anonymous Symbol]
    clk.o(.text.CLK_SysTickLongDelay) refers to system_M55M1.o(.data.CyclesPerUs) for CyclesPerUs
    clk.o(.ARM.exidx.text.CLK_SysTickLongDelay) refers to clk.o(.text.CLK_SysTickLongDelay) for [Anonymous Symbol]
    sys.o(.ARM.exidx.text.SYS_ResetModule) refers to sys.o(.text.SYS_ResetModule) for [Anonymous Symbol]
    sys.o(.text.SYS_EnableBOD) refers to system_M55M1.o(.data.SystemCoreClock) for SystemCoreClock
    sys.o(.ARM.exidx.text.SYS_EnableBOD) refers to sys.o(.text.SYS_EnableBOD) for [Anonymous Symbol]
    sys.o(.text.SYS_DisableBOD) refers to system_M55M1.o(.data.SystemCoreClock) for SystemCoreClock
    sys.o(.ARM.exidx.text.SYS_DisableBOD) refers to sys.o(.text.SYS_DisableBOD) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_ClearIntFlag) refers to uart.o(.text.UART_ClearIntFlag) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_Close) refers to uart.o(.text.UART_Close) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_DisableFlowCtrl) refers to uart.o(.text.UART_DisableFlowCtrl) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_DisableInt) refers to uart.o(.text.UART_DisableInt) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_EnableFlowCtrl) refers to uart.o(.text.UART_EnableFlowCtrl) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_EnableInt) refers to uart.o(.text.UART_EnableInt) for [Anonymous Symbol]
    uart.o(.text.UART_Open) refers to uart.o(.rodata..L__const.UART_SelectIrDAMode.u32ClkTbl) for .L__const.UART_SelectIrDAMode.u32ClkTbl
    uart.o(.text.UART_Open) refers to clk.o(.text.CLK_GetAPLL0ClockFreq) for CLK_GetAPLL0ClockFreq
    uart.o(.ARM.exidx.text.UART_Open) refers to uart.o(.text.UART_Open) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_Read) refers to uart.o(.text.UART_Read) for [Anonymous Symbol]
    uart.o(.text.UART_SetLineConfig) refers to uart.o(.rodata..L__const.UART_SelectIrDAMode.u32ClkTbl) for .L__const.UART_SelectIrDAMode.u32ClkTbl
    uart.o(.text.UART_SetLineConfig) refers to clk.o(.text.CLK_GetAPLL0ClockFreq) for CLK_GetAPLL0ClockFreq
    uart.o(.ARM.exidx.text.UART_SetLineConfig) refers to uart.o(.text.UART_SetLineConfig) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_SetTimeoutCnt) refers to uart.o(.text.UART_SetTimeoutCnt) for [Anonymous Symbol]
    uart.o(.text.UART_SelectIrDAMode) refers to uart.o(.rodata..L__const.UART_SelectIrDAMode.u32ClkTbl) for .L__const.UART_SelectIrDAMode.u32ClkTbl
    uart.o(.text.UART_SelectIrDAMode) refers to clk.o(.text.CLK_GetAPLL0ClockFreq) for CLK_GetAPLL0ClockFreq
    uart.o(.ARM.exidx.text.UART_SelectIrDAMode) refers to uart.o(.text.UART_SelectIrDAMode) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_SelectRS485Mode) refers to uart.o(.text.UART_SelectRS485Mode) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_SelectLINMode) refers to uart.o(.text.UART_SelectLINMode) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_Write) refers to uart.o(.text.UART_Write) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_SelectSingleWireMode) refers to uart.o(.text.UART_SelectSingleWireMode) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_SetBaudRateFrationalDivider) refers to uart.o(.text.UART_SetBaudRateFrationalDivider) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_DisableBaudRateFrationalDivider) refers to uart.o(.text.UART_DisableBaudRateFrationalDivider) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_set_mdc_clk_div) refers to synopGMAC_plat.o(.text.synopGMACReadReg) for synopGMACReadReg
    synopGMAC_Dev.o(.text.synopGMAC_set_mdc_clk_div) refers to synopGMAC_plat.o(.text.synopGMACWriteReg) for synopGMACWriteReg
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_set_mdc_clk_div) refers to synopGMAC_Dev.o(.text.synopGMAC_set_mdc_clk_div) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_get_mdc_clk_div) refers to synopGMAC_plat.o(.text.synopGMACReadReg) for synopGMACReadReg
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_get_mdc_clk_div) refers to synopGMAC_Dev.o(.text.synopGMAC_get_mdc_clk_div) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_read_phy_reg) refers to synopGMAC_plat.o(.text.synopGMACReadReg) for synopGMACReadReg
    synopGMAC_Dev.o(.text.synopGMAC_read_phy_reg) refers to synopGMAC_plat.o(.text.synopGMACWriteReg) for synopGMACWriteReg
    synopGMAC_Dev.o(.text.synopGMAC_read_phy_reg) refers to synopGMAC_plat.o(.text.plat_delay) for plat_delay
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_read_phy_reg) refers to synopGMAC_Dev.o(.text.synopGMAC_read_phy_reg) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_write_phy_reg) refers to synopGMAC_plat.o(.text.synopGMACWriteReg) for synopGMACWriteReg
    synopGMAC_Dev.o(.text.synopGMAC_write_phy_reg) refers to synopGMAC_plat.o(.text.synopGMACReadReg) for synopGMACReadReg
    synopGMAC_Dev.o(.text.synopGMAC_write_phy_reg) refers to synopGMAC_plat.o(.text.plat_delay) for plat_delay
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_write_phy_reg) refers to synopGMAC_Dev.o(.text.synopGMAC_write_phy_reg) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_phy_loopback) refers to synopGMAC_plat.o(.text.synopGMACWriteReg) for synopGMACWriteReg
    synopGMAC_Dev.o(.text.synopGMAC_phy_loopback) refers to synopGMAC_plat.o(.text.synopGMACReadReg) for synopGMACReadReg
    synopGMAC_Dev.o(.text.synopGMAC_phy_loopback) refers to synopGMAC_plat.o(.text.plat_delay) for plat_delay
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_phy_loopback) refers to synopGMAC_Dev.o(.text.synopGMAC_phy_loopback) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_read_version) refers to synopGMAC_plat.o(.text.synopGMACReadReg) for synopGMACReadReg
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_read_version) refers to synopGMAC_Dev.o(.text.synopGMAC_read_version) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_reset) refers to synopGMAC_plat.o(.text.synopGMACWriteReg) for synopGMACWriteReg
    synopGMAC_Dev.o(.text.synopGMAC_reset) refers to synopGMAC_plat.o(.text.plat_delay) for plat_delay
    synopGMAC_Dev.o(.text.synopGMAC_reset) refers to synopGMAC_plat.o(.text.synopGMACReadReg) for synopGMACReadReg
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_reset) refers to synopGMAC_Dev.o(.text.synopGMAC_reset) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_reset_nocheck) refers to synopGMAC_plat.o(.text.synopGMACWriteReg) for synopGMACWriteReg
    synopGMAC_Dev.o(.text.synopGMAC_reset_nocheck) refers to synopGMAC_plat.o(.text.plat_delay) for plat_delay
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_reset_nocheck) refers to synopGMAC_Dev.o(.text.synopGMAC_reset_nocheck) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_dma_bus_mode_init) refers to synopGMAC_plat.o(.text.synopGMACWriteReg) for synopGMACWriteReg
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_dma_bus_mode_init) refers to synopGMAC_Dev.o(.text.synopGMAC_dma_bus_mode_init) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_dma_control_init) refers to synopGMAC_plat.o(.text.synopGMACWriteReg) for synopGMACWriteReg
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_dma_control_init) refers to synopGMAC_Dev.o(.text.synopGMAC_dma_control_init) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_wd_enable) refers to synopGMAC_plat.o(.text.synopGMACClearBits) for synopGMACClearBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_wd_enable) refers to synopGMAC_Dev.o(.text.synopGMAC_wd_enable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_wd_disable) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_wd_disable) refers to synopGMAC_Dev.o(.text.synopGMAC_wd_disable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_jab_enable) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_jab_enable) refers to synopGMAC_Dev.o(.text.synopGMAC_jab_enable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_jab_disable) refers to synopGMAC_plat.o(.text.synopGMACClearBits) for synopGMACClearBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_jab_disable) refers to synopGMAC_Dev.o(.text.synopGMAC_jab_disable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_frame_burst_enable) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_frame_burst_enable) refers to synopGMAC_Dev.o(.text.synopGMAC_frame_burst_enable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_frame_burst_disable) refers to synopGMAC_plat.o(.text.synopGMACClearBits) for synopGMACClearBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_frame_burst_disable) refers to synopGMAC_Dev.o(.text.synopGMAC_frame_burst_disable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_jumbo_frame_enable) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_jumbo_frame_enable) refers to synopGMAC_Dev.o(.text.synopGMAC_jumbo_frame_enable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_jumbo_frame_disable) refers to synopGMAC_plat.o(.text.synopGMACClearBits) for synopGMACClearBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_jumbo_frame_disable) refers to synopGMAC_Dev.o(.text.synopGMAC_jumbo_frame_disable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_disable_crs) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_disable_crs) refers to synopGMAC_Dev.o(.text.synopGMAC_disable_crs) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_select_gmii) refers to synopGMAC_plat.o(.text.synopGMACClearBits) for synopGMACClearBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_select_gmii) refers to synopGMAC_Dev.o(.text.synopGMAC_select_gmii) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_select_mii) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_select_mii) refers to synopGMAC_Dev.o(.text.synopGMAC_select_mii) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_rx_own_enable) refers to synopGMAC_plat.o(.text.synopGMACClearBits) for synopGMACClearBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_rx_own_enable) refers to synopGMAC_Dev.o(.text.synopGMAC_rx_own_enable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_rx_own_disable) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_rx_own_disable) refers to synopGMAC_Dev.o(.text.synopGMAC_rx_own_disable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_loopback_on) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_loopback_on) refers to synopGMAC_Dev.o(.text.synopGMAC_loopback_on) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_loopback_off) refers to synopGMAC_plat.o(.text.synopGMACClearBits) for synopGMACClearBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_loopback_off) refers to synopGMAC_Dev.o(.text.synopGMAC_loopback_off) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_set_full_duplex) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_set_full_duplex) refers to synopGMAC_Dev.o(.text.synopGMAC_set_full_duplex) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_set_half_duplex) refers to synopGMAC_plat.o(.text.synopGMACClearBits) for synopGMACClearBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_set_half_duplex) refers to synopGMAC_Dev.o(.text.synopGMAC_set_half_duplex) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_retry_enable) refers to synopGMAC_plat.o(.text.synopGMACClearBits) for synopGMACClearBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_retry_enable) refers to synopGMAC_Dev.o(.text.synopGMAC_retry_enable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_retry_disable) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_retry_disable) refers to synopGMAC_Dev.o(.text.synopGMAC_retry_disable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_pad_crc_strip_enable) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_pad_crc_strip_enable) refers to synopGMAC_Dev.o(.text.synopGMAC_pad_crc_strip_enable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_pad_crc_strip_disable) refers to synopGMAC_plat.o(.text.synopGMACClearBits) for synopGMACClearBits
    synopGMAC_Dev.o(.text.synopGMAC_pad_crc_strip_disable) refers to synopGMAC_plat.o(.text.synopGMACReadReg) for synopGMACReadReg
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_pad_crc_strip_disable) refers to synopGMAC_Dev.o(.text.synopGMAC_pad_crc_strip_disable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_back_off_limit) refers to synopGMAC_plat.o(.text.synopGMACReadReg) for synopGMACReadReg
    synopGMAC_Dev.o(.text.synopGMAC_back_off_limit) refers to synopGMAC_plat.o(.text.synopGMACWriteReg) for synopGMACWriteReg
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_back_off_limit) refers to synopGMAC_Dev.o(.text.synopGMAC_back_off_limit) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_deferral_check_enable) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_deferral_check_enable) refers to synopGMAC_Dev.o(.text.synopGMAC_deferral_check_enable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_deferral_check_disable) refers to synopGMAC_plat.o(.text.synopGMACClearBits) for synopGMACClearBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_deferral_check_disable) refers to synopGMAC_Dev.o(.text.synopGMAC_deferral_check_disable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_rx_enable) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_rx_enable) refers to synopGMAC_Dev.o(.text.synopGMAC_rx_enable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_rx_disable) refers to synopGMAC_plat.o(.text.synopGMACClearBits) for synopGMACClearBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_rx_disable) refers to synopGMAC_Dev.o(.text.synopGMAC_rx_disable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_tx_enable) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_tx_enable) refers to synopGMAC_Dev.o(.text.synopGMAC_tx_enable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_tx_disable) refers to synopGMAC_plat.o(.text.synopGMACClearBits) for synopGMACClearBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_tx_disable) refers to synopGMAC_Dev.o(.text.synopGMAC_tx_disable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_frame_filter_enable) refers to synopGMAC_plat.o(.text.synopGMACClearBits) for synopGMACClearBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_frame_filter_enable) refers to synopGMAC_Dev.o(.text.synopGMAC_frame_filter_enable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_frame_filter_disable) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_frame_filter_disable) refers to synopGMAC_Dev.o(.text.synopGMAC_frame_filter_disable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_write_hash_table_high) refers to synopGMAC_plat.o(.text.synopGMACWriteReg) for synopGMACWriteReg
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_write_hash_table_high) refers to synopGMAC_Dev.o(.text.synopGMAC_write_hash_table_high) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_write_hash_table_low) refers to synopGMAC_plat.o(.text.synopGMACWriteReg) for synopGMACWriteReg
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_write_hash_table_low) refers to synopGMAC_Dev.o(.text.synopGMAC_write_hash_table_low) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_hash_perfect_filter_enable) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_hash_perfect_filter_enable) refers to synopGMAC_Dev.o(.text.synopGMAC_hash_perfect_filter_enable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_Hash_filter_only_enable) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_Hash_filter_only_enable) refers to synopGMAC_Dev.o(.text.synopGMAC_Hash_filter_only_enable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_src_addr_filter_enable) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_src_addr_filter_enable) refers to synopGMAC_Dev.o(.text.synopGMAC_src_addr_filter_enable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_src_addr_filter_disable) refers to synopGMAC_plat.o(.text.synopGMACClearBits) for synopGMACClearBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_src_addr_filter_disable) refers to synopGMAC_Dev.o(.text.synopGMAC_src_addr_filter_disable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_dst_addr_filter_inverse) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_dst_addr_filter_inverse) refers to synopGMAC_Dev.o(.text.synopGMAC_dst_addr_filter_inverse) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_dst_addr_filter_normal) refers to synopGMAC_plat.o(.text.synopGMACClearBits) for synopGMACClearBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_dst_addr_filter_normal) refers to synopGMAC_Dev.o(.text.synopGMAC_dst_addr_filter_normal) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_set_pass_control) refers to synopGMAC_plat.o(.text.synopGMACReadReg) for synopGMACReadReg
    synopGMAC_Dev.o(.text.synopGMAC_set_pass_control) refers to synopGMAC_plat.o(.text.synopGMACWriteReg) for synopGMACWriteReg
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_set_pass_control) refers to synopGMAC_Dev.o(.text.synopGMAC_set_pass_control) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_broadcast_enable) refers to synopGMAC_plat.o(.text.synopGMACClearBits) for synopGMACClearBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_broadcast_enable) refers to synopGMAC_Dev.o(.text.synopGMAC_broadcast_enable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_broadcast_disable) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_broadcast_disable) refers to synopGMAC_Dev.o(.text.synopGMAC_broadcast_disable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_multicast_enable) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_multicast_enable) refers to synopGMAC_Dev.o(.text.synopGMAC_multicast_enable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_multicast_disable) refers to synopGMAC_plat.o(.text.synopGMACClearBits) for synopGMACClearBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_multicast_disable) refers to synopGMAC_Dev.o(.text.synopGMAC_multicast_disable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_multicast_hash_filter_enable) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_multicast_hash_filter_enable) refers to synopGMAC_Dev.o(.text.synopGMAC_multicast_hash_filter_enable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_multicast_hash_filter_disable) refers to synopGMAC_plat.o(.text.synopGMACClearBits) for synopGMACClearBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_multicast_hash_filter_disable) refers to synopGMAC_Dev.o(.text.synopGMAC_multicast_hash_filter_disable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_promisc_enable) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_promisc_enable) refers to synopGMAC_Dev.o(.text.synopGMAC_promisc_enable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_promisc_disable) refers to synopGMAC_plat.o(.text.synopGMACClearBits) for synopGMACClearBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_promisc_disable) refers to synopGMAC_Dev.o(.text.synopGMAC_promisc_disable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_unicast_hash_filter_enable) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_unicast_hash_filter_enable) refers to synopGMAC_Dev.o(.text.synopGMAC_unicast_hash_filter_enable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_unicast_hash_filter_disable) refers to synopGMAC_plat.o(.text.synopGMACClearBits) for synopGMACClearBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_unicast_hash_filter_disable) refers to synopGMAC_Dev.o(.text.synopGMAC_unicast_hash_filter_disable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_unicast_pause_frame_detect_enable) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_unicast_pause_frame_detect_enable) refers to synopGMAC_Dev.o(.text.synopGMAC_unicast_pause_frame_detect_enable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_unicast_pause_frame_detect_disable) refers to synopGMAC_plat.o(.text.synopGMACClearBits) for synopGMACClearBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_unicast_pause_frame_detect_disable) refers to synopGMAC_Dev.o(.text.synopGMAC_unicast_pause_frame_detect_disable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_rx_flow_control_enable) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_rx_flow_control_enable) refers to synopGMAC_Dev.o(.text.synopGMAC_rx_flow_control_enable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_rx_flow_control_disable) refers to synopGMAC_plat.o(.text.synopGMACClearBits) for synopGMACClearBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_rx_flow_control_disable) refers to synopGMAC_Dev.o(.text.synopGMAC_rx_flow_control_disable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_tx_flow_control_enable) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_tx_flow_control_enable) refers to synopGMAC_Dev.o(.text.synopGMAC_tx_flow_control_enable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_tx_flow_control_disable) refers to synopGMAC_plat.o(.text.synopGMACClearBits) for synopGMACClearBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_tx_flow_control_disable) refers to synopGMAC_Dev.o(.text.synopGMAC_tx_flow_control_disable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_tx_activate_flow_control) refers to synopGMAC_plat.o(.text.synopGMACCheckBits) for synopGMACCheckBits
    synopGMAC_Dev.o(.text.synopGMAC_tx_activate_flow_control) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_tx_activate_flow_control) refers to synopGMAC_Dev.o(.text.synopGMAC_tx_activate_flow_control) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_tx_deactivate_flow_control) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_tx_deactivate_flow_control) refers to synopGMAC_Dev.o(.text.synopGMAC_tx_deactivate_flow_control) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_pause_control) refers to synopGMAC_plat.o(.text.synopGMACReadReg) for synopGMACReadReg
    synopGMAC_Dev.o(.text.synopGMAC_pause_control) refers to synopGMAC_plat.o(.text.synopGMACWriteReg) for synopGMACWriteReg
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_pause_control) refers to synopGMAC_Dev.o(.text.synopGMAC_pause_control) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_mac_init) refers to synopGMAC_plat.o(.text.synopGMACClearBits) for synopGMACClearBits
    synopGMAC_Dev.o(.text.synopGMAC_mac_init) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.text.synopGMAC_mac_init) refers to synopGMAC_plat.o(.text.synopGMACReadReg) for synopGMACReadReg
    synopGMAC_Dev.o(.text.synopGMAC_mac_init) refers to synopGMAC_plat.o(.text.synopGMACWriteReg) for synopGMACWriteReg
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_mac_init) refers to synopGMAC_Dev.o(.text.synopGMAC_mac_init) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_set_mac_addr) refers to synopGMAC_plat.o(.text.synopGMACWriteReg) for synopGMACWriteReg
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_set_mac_addr) refers to synopGMAC_Dev.o(.text.synopGMAC_set_mac_addr) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_get_mac_addr) refers to synopGMAC_plat.o(.text.synopGMACReadReg) for synopGMACReadReg
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_get_mac_addr) refers to synopGMAC_Dev.o(.text.synopGMAC_get_mac_addr) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_attach) refers to memseta.o(.text) for __aeabi_memclr
    synopGMAC_Dev.o(.text.synopGMAC_attach) refers to synopGMAC_plat.o(.text.synopGMACReadReg) for synopGMACReadReg
    synopGMAC_Dev.o(.text.synopGMAC_attach) refers to synopGMAC_plat.o(.text.synopGMACWriteReg) for synopGMACWriteReg
    synopGMAC_Dev.o(.text.synopGMAC_attach) refers to synopGMAC_plat.o(.text.plat_delay) for plat_delay
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_attach) refers to synopGMAC_Dev.o(.text.synopGMAC_attach) for [Anonymous Symbol]
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_rx_desc_init_ring) refers to synopGMAC_Dev.o(.text.synopGMAC_rx_desc_init_ring) for [Anonymous Symbol]
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_tx_desc_init_ring) refers to synopGMAC_Dev.o(.text.synopGMAC_tx_desc_init_ring) for [Anonymous Symbol]
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_init_tx_rx_desc_queue) refers to synopGMAC_Dev.o(.text.synopGMAC_init_tx_rx_desc_queue) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_init_rx_desc_base) refers to synopGMAC_plat.o(.text.synopGMACWriteReg) for synopGMACWriteReg
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_init_rx_desc_base) refers to synopGMAC_Dev.o(.text.synopGMAC_init_rx_desc_base) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_init_tx_desc_base) refers to synopGMAC_plat.o(.text.synopGMACWriteReg) for synopGMACWriteReg
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_init_tx_desc_base) refers to synopGMAC_Dev.o(.text.synopGMAC_init_tx_desc_base) for [Anonymous Symbol]
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_is_desc_owned_by_dma) refers to synopGMAC_Dev.o(.text.synopGMAC_is_desc_owned_by_dma) for [Anonymous Symbol]
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_get_rx_desc_frame_length) refers to synopGMAC_Dev.o(.text.synopGMAC_get_rx_desc_frame_length) for [Anonymous Symbol]
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_is_desc_valid) refers to synopGMAC_Dev.o(.text.synopGMAC_is_desc_valid) for [Anonymous Symbol]
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_is_desc_empty) refers to synopGMAC_Dev.o(.text.synopGMAC_is_desc_empty) for [Anonymous Symbol]
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_is_rx_desc_valid) refers to synopGMAC_Dev.o(.text.synopGMAC_is_rx_desc_valid) for [Anonymous Symbol]
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_is_tx_aborted) refers to synopGMAC_Dev.o(.text.synopGMAC_is_tx_aborted) for [Anonymous Symbol]
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_is_tx_carrier_error) refers to synopGMAC_Dev.o(.text.synopGMAC_is_tx_carrier_error) for [Anonymous Symbol]
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_get_tx_collision_count) refers to synopGMAC_Dev.o(.text.synopGMAC_get_tx_collision_count) for [Anonymous Symbol]
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_is_exc_tx_collisions) refers to synopGMAC_Dev.o(.text.synopGMAC_is_exc_tx_collisions) for [Anonymous Symbol]
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_is_rx_frame_damaged) refers to synopGMAC_Dev.o(.text.synopGMAC_is_rx_frame_damaged) for [Anonymous Symbol]
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_is_rx_frame_collision) refers to synopGMAC_Dev.o(.text.synopGMAC_is_rx_frame_collision) for [Anonymous Symbol]
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_is_rx_crc) refers to synopGMAC_Dev.o(.text.synopGMAC_is_rx_crc) for [Anonymous Symbol]
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_is_frame_dribbling_errors) refers to synopGMAC_Dev.o(.text.synopGMAC_is_frame_dribbling_errors) for [Anonymous Symbol]
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_is_rx_frame_length_errors) refers to synopGMAC_Dev.o(.text.synopGMAC_is_rx_frame_length_errors) for [Anonymous Symbol]
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_is_last_rx_desc) refers to synopGMAC_Dev.o(.text.synopGMAC_is_last_rx_desc) for [Anonymous Symbol]
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_is_last_tx_desc) refers to synopGMAC_Dev.o(.text.synopGMAC_is_last_tx_desc) for [Anonymous Symbol]
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_get_tx_qptr) refers to synopGMAC_Dev.o(.text.synopGMAC_get_tx_qptr) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_set_crc_replacement) refers to synopGMAC_Dev.o(.bss.prevtx) for prevtx
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_set_crc_replacement) refers to synopGMAC_Dev.o(.text.synopGMAC_set_crc_replacement) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_clr_crc_replacement) refers to synopGMAC_Dev.o(.bss.prevtx) for prevtx
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_clr_crc_replacement) refers to synopGMAC_Dev.o(.text.synopGMAC_clr_crc_replacement) for [Anonymous Symbol]
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_set_tx_qptr) refers to synopGMAC_Dev.o(.text.synopGMAC_set_tx_qptr) for [Anonymous Symbol]
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_tx_checksum_offload_ipv4hdr) refers to synopGMAC_Dev.o(.text.synopGMAC_tx_checksum_offload_ipv4hdr) for [Anonymous Symbol]
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_tx_checksum_offload_tcponly) refers to synopGMAC_Dev.o(.text.synopGMAC_tx_checksum_offload_tcponly) for [Anonymous Symbol]
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_tx_checksum_offload_tcp_pseudo) refers to synopGMAC_Dev.o(.text.synopGMAC_tx_checksum_offload_tcp_pseudo) for [Anonymous Symbol]
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_tx_checksum_offload_bypass) refers to synopGMAC_Dev.o(.text.synopGMAC_tx_checksum_offload_bypass) for [Anonymous Symbol]
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_set_rx_qptr) refers to synopGMAC_Dev.o(.text.synopGMAC_set_rx_qptr) for [Anonymous Symbol]
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_get_rx_qptr) refers to synopGMAC_Dev.o(.text.synopGMAC_get_rx_qptr) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_clear_interrupt) refers to synopGMAC_plat.o(.text.synopGMACReadReg) for synopGMACReadReg
    synopGMAC_Dev.o(.text.synopGMAC_clear_interrupt) refers to synopGMAC_plat.o(.text.synopGMACWriteReg) for synopGMACWriteReg
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_clear_interrupt) refers to synopGMAC_Dev.o(.text.synopGMAC_clear_interrupt) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_get_interrupt_type) refers to synopGMAC_plat.o(.text.synopGMACReadReg) for synopGMACReadReg
    synopGMAC_Dev.o(.text.synopGMAC_get_interrupt_type) refers to synopGMAC_plat.o(.text.synopGMACWriteReg) for synopGMACWriteReg
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_get_interrupt_type) refers to synopGMAC_Dev.o(.text.synopGMAC_get_interrupt_type) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_enable_interrupt) refers to synopGMAC_plat.o(.text.synopGMACWriteReg) for synopGMACWriteReg
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_enable_interrupt) refers to synopGMAC_Dev.o(.text.synopGMAC_enable_interrupt) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_get_ie) refers to synopGMAC_plat.o(.text.synopGMACReadReg) for synopGMACReadReg
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_get_ie) refers to synopGMAC_Dev.o(.text.synopGMAC_get_ie) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_disable_interrupt_all) refers to synopGMAC_plat.o(.text.synopGMACWriteReg) for synopGMACWriteReg
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_disable_interrupt_all) refers to synopGMAC_Dev.o(.text.synopGMAC_disable_interrupt_all) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_disable_interrupt) refers to synopGMAC_plat.o(.text.synopGMACClearBits) for synopGMACClearBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_disable_interrupt) refers to synopGMAC_Dev.o(.text.synopGMAC_disable_interrupt) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_enable_dma_rx) refers to synopGMAC_plat.o(.text.synopGMACReadReg) for synopGMACReadReg
    synopGMAC_Dev.o(.text.synopGMAC_enable_dma_rx) refers to synopGMAC_plat.o(.text.synopGMACWriteReg) for synopGMACWriteReg
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_enable_dma_rx) refers to synopGMAC_Dev.o(.text.synopGMAC_enable_dma_rx) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_enable_dma_tx) refers to synopGMAC_plat.o(.text.synopGMACReadReg) for synopGMACReadReg
    synopGMAC_Dev.o(.text.synopGMAC_enable_dma_tx) refers to synopGMAC_plat.o(.text.synopGMACWriteReg) for synopGMACWriteReg
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_enable_dma_tx) refers to synopGMAC_Dev.o(.text.synopGMAC_enable_dma_tx) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_enable_under_size_pkt) refers to synopGMAC_plat.o(.text.synopGMACReadReg) for synopGMACReadReg
    synopGMAC_Dev.o(.text.synopGMAC_enable_under_size_pkt) refers to synopGMAC_plat.o(.text.synopGMACWriteReg) for synopGMACWriteReg
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_enable_under_size_pkt) refers to synopGMAC_Dev.o(.text.synopGMAC_enable_under_size_pkt) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_disable_under_size_pkt) refers to synopGMAC_plat.o(.text.synopGMACReadReg) for synopGMACReadReg
    synopGMAC_Dev.o(.text.synopGMAC_disable_under_size_pkt) refers to synopGMAC_plat.o(.text.synopGMACWriteReg) for synopGMACWriteReg
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_disable_under_size_pkt) refers to synopGMAC_Dev.o(.text.synopGMAC_disable_under_size_pkt) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_enable_crc_err_pkt) refers to synopGMAC_plat.o(.text.synopGMACReadReg) for synopGMACReadReg
    synopGMAC_Dev.o(.text.synopGMAC_enable_crc_err_pkt) refers to synopGMAC_plat.o(.text.synopGMACWriteReg) for synopGMACWriteReg
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_enable_crc_err_pkt) refers to synopGMAC_Dev.o(.text.synopGMAC_enable_crc_err_pkt) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_disable_crc_err_pkt) refers to synopGMAC_plat.o(.text.synopGMACReadReg) for synopGMACReadReg
    synopGMAC_Dev.o(.text.synopGMAC_disable_crc_err_pkt) refers to synopGMAC_plat.o(.text.synopGMACWriteReg) for synopGMACWriteReg
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_disable_crc_err_pkt) refers to synopGMAC_Dev.o(.text.synopGMAC_disable_crc_err_pkt) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_resume_dma_tx) refers to synopGMAC_plat.o(.text.synopGMACWriteReg) for synopGMACWriteReg
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_resume_dma_tx) refers to synopGMAC_Dev.o(.text.synopGMAC_resume_dma_tx) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_resume_dma_rx) refers to synopGMAC_plat.o(.text.synopGMACWriteReg) for synopGMACWriteReg
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_resume_dma_rx) refers to synopGMAC_Dev.o(.text.synopGMAC_resume_dma_rx) for [Anonymous Symbol]
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_take_desc_ownership) refers to synopGMAC_Dev.o(.text.synopGMAC_take_desc_ownership) for [Anonymous Symbol]
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_take_desc_ownership_rx) refers to synopGMAC_Dev.o(.text.synopGMAC_take_desc_ownership_rx) for [Anonymous Symbol]
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_take_desc_ownership_tx) refers to synopGMAC_Dev.o(.text.synopGMAC_take_desc_ownership_tx) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_disable_dma_tx) refers to synopGMAC_plat.o(.text.synopGMACReadReg) for synopGMACReadReg
    synopGMAC_Dev.o(.text.synopGMAC_disable_dma_tx) refers to synopGMAC_plat.o(.text.synopGMACWriteReg) for synopGMACWriteReg
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_disable_dma_tx) refers to synopGMAC_Dev.o(.text.synopGMAC_disable_dma_tx) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_disable_dma_rx) refers to synopGMAC_plat.o(.text.synopGMACReadReg) for synopGMACReadReg
    synopGMAC_Dev.o(.text.synopGMAC_disable_dma_rx) refers to synopGMAC_plat.o(.text.synopGMACWriteReg) for synopGMACWriteReg
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_disable_dma_rx) refers to synopGMAC_Dev.o(.text.synopGMAC_disable_dma_rx) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_pmt_int_enable) refers to synopGMAC_plat.o(.text.synopGMACClearBits) for synopGMACClearBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_pmt_int_enable) refers to synopGMAC_Dev.o(.text.synopGMAC_pmt_int_enable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_pmt_int_disable) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_pmt_int_disable) refers to synopGMAC_Dev.o(.text.synopGMAC_pmt_int_disable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_power_down_enable) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_power_down_enable) refers to synopGMAC_Dev.o(.text.synopGMAC_power_down_enable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_power_down_disable) refers to synopGMAC_plat.o(.text.synopGMACClearBits) for synopGMACClearBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_power_down_disable) refers to synopGMAC_Dev.o(.text.synopGMAC_power_down_disable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_enable_pmt_interrupt) refers to synopGMAC_plat.o(.text.synopGMACClearBits) for synopGMACClearBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_enable_pmt_interrupt) refers to synopGMAC_Dev.o(.text.synopGMAC_enable_pmt_interrupt) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_disable_pmt_interrupt) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_disable_pmt_interrupt) refers to synopGMAC_Dev.o(.text.synopGMAC_disable_pmt_interrupt) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_magic_packet_enable) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_magic_packet_enable) refers to synopGMAC_Dev.o(.text.synopGMAC_magic_packet_enable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_magic_packet_disable) refers to synopGMAC_plat.o(.text.synopGMACClearBits) for synopGMACClearBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_magic_packet_disable) refers to synopGMAC_Dev.o(.text.synopGMAC_magic_packet_disable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_wakeup_frame_enable) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_wakeup_frame_enable) refers to synopGMAC_Dev.o(.text.synopGMAC_wakeup_frame_enable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_pmt_unicast_enable) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_pmt_unicast_enable) refers to synopGMAC_Dev.o(.text.synopGMAC_pmt_unicast_enable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_is_magic_packet_received) refers to synopGMAC_plat.o(.text.synopGMACReadReg) for synopGMACReadReg
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_is_magic_packet_received) refers to synopGMAC_Dev.o(.text.synopGMAC_is_magic_packet_received) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_is_wakeup_frame_received) refers to synopGMAC_plat.o(.text.synopGMACReadReg) for synopGMACReadReg
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_is_wakeup_frame_received) refers to synopGMAC_Dev.o(.text.synopGMAC_is_wakeup_frame_received) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_enable_rx_chksum_offload) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_enable_rx_chksum_offload) refers to synopGMAC_Dev.o(.text.synopGMAC_enable_rx_chksum_offload) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_disable_rx_chksum_offload) refers to synopGMAC_plat.o(.text.synopGMACClearBits) for synopGMACClearBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_disable_rx_chksum_offload) refers to synopGMAC_Dev.o(.text.synopGMAC_disable_rx_chksum_offload) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_rx_tcpip_chksum_drop_enable) refers to synopGMAC_plat.o(.text.synopGMACClearBits) for synopGMACClearBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_rx_tcpip_chksum_drop_enable) refers to synopGMAC_Dev.o(.text.synopGMAC_rx_tcpip_chksum_drop_enable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_rx_tcpip_chksum_drop_disable) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_rx_tcpip_chksum_drop_disable) refers to synopGMAC_Dev.o(.text.synopGMAC_rx_tcpip_chksum_drop_disable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_is_ext_status) refers to synopGMAC_Dev.o(.text.synopGMAC_is_ext_status) for [Anonymous Symbol]
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_ES_is_IP_header_error) refers to synopGMAC_Dev.o(.text.synopGMAC_ES_is_IP_header_error) for [Anonymous Symbol]
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_ES_is_rx_checksum_bypassed) refers to synopGMAC_Dev.o(.text.synopGMAC_ES_is_rx_checksum_bypassed) for [Anonymous Symbol]
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_ES_is_IP_payload_error) refers to synopGMAC_Dev.o(.text.synopGMAC_ES_is_IP_payload_error) for [Anonymous Symbol]
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_is_rx_checksum_error) refers to synopGMAC_Dev.o(.text.synopGMAC_is_rx_checksum_error) for [Anonymous Symbol]
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_is_tx_ipv4header_checksum_error) refers to synopGMAC_Dev.o(.text.synopGMAC_is_tx_ipv4header_checksum_error) for [Anonymous Symbol]
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_is_tx_payload_checksum_error) refers to synopGMAC_Dev.o(.text.synopGMAC_is_tx_payload_checksum_error) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_TS_enable) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_enable) refers to synopGMAC_Dev.o(.text.synopGMAC_TS_enable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_TS_disable) refers to synopGMAC_plat.o(.text.synopGMACClearBits) for synopGMACClearBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_disable) refers to synopGMAC_Dev.o(.text.synopGMAC_TS_disable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_TS_int_enable) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_int_enable) refers to synopGMAC_Dev.o(.text.synopGMAC_TS_int_enable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_TS_int_disable) refers to synopGMAC_plat.o(.text.synopGMACClearBits) for synopGMACClearBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_int_disable) refers to synopGMAC_Dev.o(.text.synopGMAC_TS_int_disable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_TS_mac_addr_filt_enable) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_mac_addr_filt_enable) refers to synopGMAC_Dev.o(.text.synopGMAC_TS_mac_addr_filt_enable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_TS_mac_addr_filt_disable) refers to synopGMAC_plat.o(.text.synopGMACClearBits) for synopGMACClearBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_mac_addr_filt_disable) refers to synopGMAC_Dev.o(.text.synopGMAC_TS_mac_addr_filt_disable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_TS_set_clk_type) refers to synopGMAC_plat.o(.text.synopGMACReadReg) for synopGMACReadReg
    synopGMAC_Dev.o(.text.synopGMAC_TS_set_clk_type) refers to synopGMAC_plat.o(.text.synopGMACWriteReg) for synopGMACWriteReg
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_set_clk_type) refers to synopGMAC_Dev.o(.text.synopGMAC_TS_set_clk_type) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_TS_master_enable) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_master_enable) refers to synopGMAC_Dev.o(.text.synopGMAC_TS_master_enable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_TS_master_disable) refers to synopGMAC_plat.o(.text.synopGMACClearBits) for synopGMACClearBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_master_disable) refers to synopGMAC_Dev.o(.text.synopGMAC_TS_master_disable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_TS_event_enable) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_event_enable) refers to synopGMAC_Dev.o(.text.synopGMAC_TS_event_enable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_TS_event_disable) refers to synopGMAC_plat.o(.text.synopGMACClearBits) for synopGMACClearBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_event_disable) refers to synopGMAC_Dev.o(.text.synopGMAC_TS_event_disable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_TS_IPV4_enable) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_IPV4_enable) refers to synopGMAC_Dev.o(.text.synopGMAC_TS_IPV4_enable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_TS_IPV4_disable) refers to synopGMAC_plat.o(.text.synopGMACClearBits) for synopGMACClearBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_IPV4_disable) refers to synopGMAC_Dev.o(.text.synopGMAC_TS_IPV4_disable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_TS_IPV6_enable) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_IPV6_enable) refers to synopGMAC_Dev.o(.text.synopGMAC_TS_IPV6_enable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_TS_IPV6_disable) refers to synopGMAC_plat.o(.text.synopGMACClearBits) for synopGMACClearBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_IPV6_disable) refers to synopGMAC_Dev.o(.text.synopGMAC_TS_IPV6_disable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_TS_ptp_over_ethernet_enable) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_ptp_over_ethernet_enable) refers to synopGMAC_Dev.o(.text.synopGMAC_TS_ptp_over_ethernet_enable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_TS_ptp_over_ethernet_disable) refers to synopGMAC_plat.o(.text.synopGMACClearBits) for synopGMACClearBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_ptp_over_ethernet_disable) refers to synopGMAC_Dev.o(.text.synopGMAC_TS_ptp_over_ethernet_disable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_TS_pkt_snoop_ver2) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_pkt_snoop_ver2) refers to synopGMAC_Dev.o(.text.synopGMAC_TS_pkt_snoop_ver2) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_TS_pkt_snoop_ver1) refers to synopGMAC_plat.o(.text.synopGMACClearBits) for synopGMACClearBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_pkt_snoop_ver1) refers to synopGMAC_Dev.o(.text.synopGMAC_TS_pkt_snoop_ver1) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_TS_digital_rollover_enable) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_digital_rollover_enable) refers to synopGMAC_Dev.o(.text.synopGMAC_TS_digital_rollover_enable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_TS_binary_rollover_enable) refers to synopGMAC_plat.o(.text.synopGMACClearBits) for synopGMACClearBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_binary_rollover_enable) refers to synopGMAC_Dev.o(.text.synopGMAC_TS_binary_rollover_enable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_TS_all_frames_enable) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_all_frames_enable) refers to synopGMAC_Dev.o(.text.synopGMAC_TS_all_frames_enable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_TS_all_frames_disable) refers to synopGMAC_plat.o(.text.synopGMACClearBits) for synopGMACClearBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_all_frames_disable) refers to synopGMAC_Dev.o(.text.synopGMAC_TS_all_frames_disable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_TS_addend_update) refers to synopGMAC_plat.o(.text.synopGMACWriteReg) for synopGMACWriteReg
    synopGMAC_Dev.o(.text.synopGMAC_TS_addend_update) refers to synopGMAC_plat.o(.text.synopGMACReadReg) for synopGMACReadReg
    synopGMAC_Dev.o(.text.synopGMAC_TS_addend_update) refers to synopGMAC_plat.o(.text.plat_delay) for plat_delay
    synopGMAC_Dev.o(.text.synopGMAC_TS_addend_update) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_addend_update) refers to synopGMAC_Dev.o(.text.synopGMAC_TS_addend_update) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_TS_timestamp_update) refers to synopGMAC_plat.o(.text.synopGMACWriteReg) for synopGMACWriteReg
    synopGMAC_Dev.o(.text.synopGMAC_TS_timestamp_update) refers to synopGMAC_plat.o(.text.synopGMACReadReg) for synopGMACReadReg
    synopGMAC_Dev.o(.text.synopGMAC_TS_timestamp_update) refers to synopGMAC_plat.o(.text.plat_delay) for plat_delay
    synopGMAC_Dev.o(.text.synopGMAC_TS_timestamp_update) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_timestamp_update) refers to synopGMAC_Dev.o(.text.synopGMAC_TS_timestamp_update) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_TS_timestamp_init) refers to synopGMAC_plat.o(.text.synopGMACWriteReg) for synopGMACWriteReg
    synopGMAC_Dev.o(.text.synopGMAC_TS_timestamp_init) refers to synopGMAC_plat.o(.text.synopGMACReadReg) for synopGMACReadReg
    synopGMAC_Dev.o(.text.synopGMAC_TS_timestamp_init) refers to synopGMAC_plat.o(.text.plat_delay) for plat_delay
    synopGMAC_Dev.o(.text.synopGMAC_TS_timestamp_init) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_timestamp_init) refers to synopGMAC_Dev.o(.text.synopGMAC_TS_timestamp_init) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_TS_coarse_update) refers to synopGMAC_plat.o(.text.synopGMACClearBits) for synopGMACClearBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_coarse_update) refers to synopGMAC_Dev.o(.text.synopGMAC_TS_coarse_update) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_TS_fine_update) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_fine_update) refers to synopGMAC_Dev.o(.text.synopGMAC_TS_fine_update) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_TS_subsecond_init) refers to synopGMAC_plat.o(.text.synopGMACWriteReg) for synopGMACWriteReg
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_subsecond_init) refers to synopGMAC_Dev.o(.text.synopGMAC_TS_subsecond_init) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_TS_read_timestamp) refers to synopGMAC_plat.o(.text.synopGMACReadReg) for synopGMACReadReg
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_read_timestamp) refers to synopGMAC_Dev.o(.text.synopGMAC_TS_read_timestamp) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_TS_load_timestamp_higher_val) refers to synopGMAC_plat.o(.text.synopGMACWriteReg) for synopGMACWriteReg
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_load_timestamp_higher_val) refers to synopGMAC_Dev.o(.text.synopGMAC_TS_load_timestamp_higher_val) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_TS_read_timestamp_higher_val) refers to synopGMAC_plat.o(.text.synopGMACReadReg) for synopGMACReadReg
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_read_timestamp_higher_val) refers to synopGMAC_Dev.o(.text.synopGMAC_TS_read_timestamp_higher_val) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_TS_load_target_timestamp) refers to synopGMAC_plat.o(.text.synopGMACWriteReg) for synopGMACWriteReg
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_load_target_timestamp) refers to synopGMAC_Dev.o(.text.synopGMAC_TS_load_target_timestamp) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_TS_read_target_timestamp) refers to synopGMAC_plat.o(.text.synopGMACReadReg) for synopGMACReadReg
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_read_target_timestamp) refers to synopGMAC_Dev.o(.text.synopGMAC_TS_read_target_timestamp) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_src_addr_insert_enable) refers to synopGMAC_plat.o(.text.synopGMACClearBits) for synopGMACClearBits
    synopGMAC_Dev.o(.text.synopGMAC_src_addr_insert_enable) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_src_addr_insert_enable) refers to synopGMAC_Dev.o(.text.synopGMAC_src_addr_insert_enable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_src_addr_insert_disable) refers to synopGMAC_plat.o(.text.synopGMACClearBits) for synopGMACClearBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_src_addr_insert_disable) refers to synopGMAC_Dev.o(.text.synopGMAC_src_addr_insert_disable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_src_addr_replace_enable) refers to synopGMAC_plat.o(.text.synopGMACClearBits) for synopGMACClearBits
    synopGMAC_Dev.o(.text.synopGMAC_src_addr_replace_enable) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_src_addr_replace_enable) refers to synopGMAC_Dev.o(.text.synopGMAC_src_addr_replace_enable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_src_addr_replace_disable) refers to synopGMAC_plat.o(.text.synopGMACClearBits) for synopGMACClearBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_src_addr_replace_disable) refers to synopGMAC_Dev.o(.text.synopGMAC_src_addr_replace_disable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_svlan_insertion_enable) refers to synopGMAC_plat.o(.text.synopGMACWriteReg) for synopGMACWriteReg
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_svlan_insertion_enable) refers to synopGMAC_Dev.o(.text.synopGMAC_svlan_insertion_enable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_cvlan_insertion_enable) refers to synopGMAC_plat.o(.text.synopGMACWriteReg) for synopGMACWriteReg
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_cvlan_insertion_enable) refers to synopGMAC_Dev.o(.text.synopGMAC_cvlan_insertion_enable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_svlan_replace_enable) refers to synopGMAC_plat.o(.text.synopGMACWriteReg) for synopGMACWriteReg
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_svlan_replace_enable) refers to synopGMAC_Dev.o(.text.synopGMAC_svlan_replace_enable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_cvlan_replace_enable) refers to synopGMAC_plat.o(.text.synopGMACWriteReg) for synopGMACWriteReg
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_cvlan_replace_enable) refers to synopGMAC_Dev.o(.text.synopGMAC_cvlan_replace_enable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_vlan_deletion_enable) refers to synopGMAC_plat.o(.text.synopGMACWriteReg) for synopGMACWriteReg
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_vlan_deletion_enable) refers to synopGMAC_Dev.o(.text.synopGMAC_vlan_deletion_enable) for [Anonymous Symbol]
    synopGMAC_Dev.o(.text.synopGMAC_vlan_no_act_enable) refers to synopGMAC_plat.o(.text.synopGMACClearBits) for synopGMACClearBits
    synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_vlan_no_act_enable) refers to synopGMAC_Dev.o(.text.synopGMAC_vlan_no_act_enable) for [Anonymous Symbol]
    synopGMAC_network_interface.o(.text.synopGMAC_powerup_mac) refers to synopGMAC_Dev.o(.text.synopGMAC_is_magic_packet_received) for synopGMAC_is_magic_packet_received
    synopGMAC_network_interface.o(.text.synopGMAC_powerup_mac) refers to synopGMAC_Dev.o(.text.synopGMAC_is_wakeup_frame_received) for synopGMAC_is_wakeup_frame_received
    synopGMAC_network_interface.o(.text.synopGMAC_powerup_mac) refers to synopGMAC_Dev.o(.text.synopGMAC_pmt_int_disable) for synopGMAC_pmt_int_disable
    synopGMAC_network_interface.o(.text.synopGMAC_powerup_mac) refers to synopGMAC_Dev.o(.text.synopGMAC_rx_enable) for synopGMAC_rx_enable
    synopGMAC_network_interface.o(.text.synopGMAC_powerup_mac) refers to synopGMAC_Dev.o(.text.synopGMAC_enable_dma_rx) for synopGMAC_enable_dma_rx
    synopGMAC_network_interface.o(.text.synopGMAC_powerup_mac) refers to synopGMAC_Dev.o(.text.synopGMAC_tx_enable) for synopGMAC_tx_enable
    synopGMAC_network_interface.o(.text.synopGMAC_powerup_mac) refers to synopGMAC_Dev.o(.text.synopGMAC_enable_dma_tx) for synopGMAC_enable_dma_tx
    synopGMAC_network_interface.o(.ARM.exidx.text.synopGMAC_powerup_mac) refers to synopGMAC_network_interface.o(.text.synopGMAC_powerup_mac) for [Anonymous Symbol]
    synopGMAC_network_interface.o(.text.synopGMAC_powerdown_mac) refers to synopGMAC_Dev.o(.text.synopGMAC_disable_dma_tx) for synopGMAC_disable_dma_tx
    synopGMAC_network_interface.o(.text.synopGMAC_powerdown_mac) refers to synopGMAC_plat.o(.text.plat_delay) for plat_delay
    synopGMAC_network_interface.o(.text.synopGMAC_powerdown_mac) refers to synopGMAC_Dev.o(.text.synopGMAC_tx_disable) for synopGMAC_tx_disable
    synopGMAC_network_interface.o(.text.synopGMAC_powerdown_mac) refers to synopGMAC_Dev.o(.text.synopGMAC_rx_disable) for synopGMAC_rx_disable
    synopGMAC_network_interface.o(.text.synopGMAC_powerdown_mac) refers to synopGMAC_Dev.o(.text.synopGMAC_disable_dma_rx) for synopGMAC_disable_dma_rx
    synopGMAC_network_interface.o(.text.synopGMAC_powerdown_mac) refers to synopGMAC_Dev.o(.text.synopGMAC_magic_packet_enable) for synopGMAC_magic_packet_enable
    synopGMAC_network_interface.o(.text.synopGMAC_powerdown_mac) refers to synopGMAC_Dev.o(.text.synopGMAC_rx_enable) for synopGMAC_rx_enable
    synopGMAC_network_interface.o(.text.synopGMAC_powerdown_mac) refers to synopGMAC_Dev.o(.text.synopGMAC_pmt_int_enable) for synopGMAC_pmt_int_enable
    synopGMAC_network_interface.o(.text.synopGMAC_powerdown_mac) refers to synopGMAC_plat.o(.text.synopGMACWriteReg) for synopGMACWriteReg
    synopGMAC_network_interface.o(.text.synopGMAC_powerdown_mac) refers to synopGMAC_plat.o(.text.synopGMACReadReg) for synopGMACReadReg
    synopGMAC_network_interface.o(.text.synopGMAC_powerdown_mac) refers to synopGMAC_Dev.o(.text.synopGMAC_power_down_enable) for synopGMAC_power_down_enable
    synopGMAC_network_interface.o(.ARM.exidx.text.synopGMAC_powerdown_mac) refers to synopGMAC_network_interface.o(.text.synopGMAC_powerdown_mac) for [Anonymous Symbol]
    synopGMAC_network_interface.o(.text.synopGMAC_setup_tx_desc_queue) refers to synopGMAC_Dev.o(.text.synopGMAC_tx_desc_init_ring) for synopGMAC_tx_desc_init_ring
    synopGMAC_network_interface.o(.ARM.exidx.text.synopGMAC_setup_tx_desc_queue) refers to synopGMAC_network_interface.o(.text.synopGMAC_setup_tx_desc_queue) for [Anonymous Symbol]
    synopGMAC_network_interface.o(.text.synopGMAC_setup_rx_desc_queue) refers to synopGMAC_Dev.o(.text.synopGMAC_rx_desc_init_ring) for synopGMAC_rx_desc_init_ring
    synopGMAC_network_interface.o(.ARM.exidx.text.synopGMAC_setup_rx_desc_queue) refers to synopGMAC_network_interface.o(.text.synopGMAC_setup_rx_desc_queue) for [Anonymous Symbol]
    synopGMAC_network_interface.o(.ARM.exidx.text.synopGMAC_giveup_rx_desc_queue) refers to synopGMAC_network_interface.o(.text.synopGMAC_giveup_rx_desc_queue) for [Anonymous Symbol]
    synopGMAC_network_interface.o(.ARM.exidx.text.synopGMAC_giveup_tx_desc_queue) refers to synopGMAC_network_interface.o(.text.synopGMAC_giveup_tx_desc_queue) for [Anonymous Symbol]
    synopGMAC_network_interface.o(.text.synopGMAC_set_speed) refers to synopGMAC_plat.o(.text.synopGMACClearBits) for synopGMACClearBits
    synopGMAC_network_interface.o(.text.synopGMAC_set_speed) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_network_interface.o(.ARM.exidx.text.synopGMAC_set_speed) refers to synopGMAC_network_interface.o(.text.synopGMAC_set_speed) for [Anonymous Symbol]
    synopGMAC_network_interface.o(.text.synopGMAC_xmit_frames) refers to synopGMAC_Dev.o(.text.synopGMAC_set_tx_qptr) for synopGMAC_set_tx_qptr
    synopGMAC_network_interface.o(.text.synopGMAC_xmit_frames) refers to synopGMAC_Dev.o(.text.synopGMAC_resume_dma_tx) for synopGMAC_resume_dma_tx
    synopGMAC_network_interface.o(.text.synopGMAC_xmit_frames) refers to printf8.o(i.__0printf$8) for __2printf
    synopGMAC_network_interface.o(.ARM.exidx.text.synopGMAC_xmit_frames) refers to synopGMAC_network_interface.o(.text.synopGMAC_xmit_frames) for [Anonymous Symbol]
    synopGMAC_network_interface.o(.text.synop_handle_transmit_over) refers to synopGMAC_Dev.o(.text.synopGMAC_get_tx_qptr) for synopGMAC_get_tx_qptr
    synopGMAC_network_interface.o(.text.synop_handle_transmit_over) refers to synopGMAC_Dev.o(.text.synopGMAC_is_tx_aborted) for synopGMAC_is_tx_aborted
    synopGMAC_network_interface.o(.text.synop_handle_transmit_over) refers to synopGMAC_Dev.o(.text.synopGMAC_is_tx_carrier_error) for synopGMAC_is_tx_carrier_error
    synopGMAC_network_interface.o(.text.synop_handle_transmit_over) refers to synopGMAC_Dev.o(.text.synopGMAC_get_tx_collision_count) for synopGMAC_get_tx_collision_count
    synopGMAC_network_interface.o(.text.synop_handle_transmit_over) refers to synopGMAC_Dev.o(.text.synopGMAC_is_tx_ipv4header_checksum_error) for synopGMAC_is_tx_ipv4header_checksum_error
    synopGMAC_network_interface.o(.text.synop_handle_transmit_over) refers to synopGMAC_Dev.o(.text.synopGMAC_is_tx_payload_checksum_error) for synopGMAC_is_tx_payload_checksum_error
    synopGMAC_network_interface.o(.text.synop_handle_transmit_over) refers to synopGMAC_Dev.o(.text.synopGMAC_is_desc_valid) for synopGMAC_is_desc_valid
    synopGMAC_network_interface.o(.ARM.exidx.text.synop_handle_transmit_over) refers to synopGMAC_network_interface.o(.text.synop_handle_transmit_over) for [Anonymous Symbol]
    synopGMAC_network_interface.o(.text.synop_handle_received_data) refers to synopGMAC_Dev.o(.text.synopGMAC_get_rx_qptr) for synopGMAC_get_rx_qptr
    synopGMAC_network_interface.o(.text.synop_handle_received_data) refers to synopGMAC_Dev.o(.text.synopGMAC_is_rx_desc_valid) for synopGMAC_is_rx_desc_valid
    synopGMAC_network_interface.o(.text.synop_handle_received_data) refers to synopGMAC_Dev.o(.text.synopGMAC_get_rx_desc_frame_length) for synopGMAC_get_rx_desc_frame_length
    synopGMAC_network_interface.o(.text.synop_handle_received_data) refers to synopGMAC_Dev.o(.text.synopGMAC_is_ext_status) for synopGMAC_is_ext_status
    synopGMAC_network_interface.o(.text.synop_handle_received_data) refers to synopGMAC_Dev.o(.text.synopGMAC_ES_is_IP_header_error) for synopGMAC_ES_is_IP_header_error
    synopGMAC_network_interface.o(.text.synop_handle_received_data) refers to synopGMAC_Dev.o(.text.synopGMAC_ES_is_rx_checksum_bypassed) for synopGMAC_ES_is_rx_checksum_bypassed
    synopGMAC_network_interface.o(.text.synop_handle_received_data) refers to synopGMAC_Dev.o(.text.synopGMAC_ES_is_IP_payload_error) for synopGMAC_ES_is_IP_payload_error
    synopGMAC_network_interface.o(.text.synop_handle_received_data) refers to synopGMAC_Dev.o(.text.synopGMAC_is_rx_frame_collision) for synopGMAC_is_rx_frame_collision
    synopGMAC_network_interface.o(.text.synop_handle_received_data) refers to synopGMAC_Dev.o(.text.synopGMAC_is_rx_crc) for synopGMAC_is_rx_crc
    synopGMAC_network_interface.o(.text.synop_handle_received_data) refers to synopGMAC_Dev.o(.text.synopGMAC_is_frame_dribbling_errors) for synopGMAC_is_frame_dribbling_errors
    synopGMAC_network_interface.o(.text.synop_handle_received_data) refers to synopGMAC_Dev.o(.text.synopGMAC_is_rx_frame_length_errors) for synopGMAC_is_rx_frame_length_errors
    synopGMAC_network_interface.o(.text.synop_handle_received_data) refers to synopGMAC_Dev.o(.text.synopGMAC_is_rx_checksum_error) for synopGMAC_is_rx_checksum_error
    synopGMAC_network_interface.o(.ARM.exidx.text.synop_handle_received_data) refers to synopGMAC_network_interface.o(.text.synop_handle_received_data) for [Anonymous Symbol]
    synopGMAC_network_interface.o(.text.synopGMAC_set_mode) refers to synopGMAC_Dev.o(.text.synopGMAC_tx_disable) for synopGMAC_tx_disable
    synopGMAC_network_interface.o(.text.synopGMAC_set_mode) refers to synopGMAC_Dev.o(.text.synopGMAC_rx_disable) for synopGMAC_rx_disable
    synopGMAC_network_interface.o(.text.synopGMAC_set_mode) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for synopGMACSetBits
    synopGMAC_network_interface.o(.text.synopGMAC_set_mode) refers to synopGMAC_plat.o(.text.synopGMACClearBits) for synopGMACClearBits
    synopGMAC_network_interface.o(.text.synopGMAC_set_mode) refers to synopGMAC_Dev.o(.text.synopGMAC_tx_enable) for synopGMAC_tx_enable
    synopGMAC_network_interface.o(.text.synopGMAC_set_mode) refers to synopGMAC_Dev.o(.text.synopGMAC_rx_enable) for synopGMAC_rx_enable
    synopGMAC_network_interface.o(.ARM.exidx.text.synopGMAC_set_mode) refers to synopGMAC_network_interface.o(.text.synopGMAC_set_mode) for [Anonymous Symbol]
    synopGMAC_plat.o(.ARM.exidx.text.plat_delay) refers to synopGMAC_plat.o(.text.plat_delay) for [Anonymous Symbol]
    synopGMAC_plat.o(.ARM.exidx.text.synopGMACReadReg) refers to synopGMAC_plat.o(.text.synopGMACReadReg) for [Anonymous Symbol]
    synopGMAC_plat.o(.ARM.exidx.text.synopGMACWriteReg) refers to synopGMAC_plat.o(.text.synopGMACWriteReg) for [Anonymous Symbol]
    synopGMAC_plat.o(.ARM.exidx.text.synopGMACSetBits) refers to synopGMAC_plat.o(.text.synopGMACSetBits) for [Anonymous Symbol]
    synopGMAC_plat.o(.ARM.exidx.text.synopGMACClearBits) refers to synopGMAC_plat.o(.text.synopGMACClearBits) for [Anonymous Symbol]
    synopGMAC_plat.o(.ARM.exidx.text.synopGMACCheckBits) refers to synopGMAC_plat.o(.text.synopGMACCheckBits) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIO_SetMode) refers to gpio.o(.text.GPIO_SetMode) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIO_EnableInt) refers to gpio.o(.text.GPIO_EnableInt) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIO_DisableInt) refers to gpio.o(.text.GPIO_DisableInt) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIO_SetSlewCtl) refers to gpio.o(.text.GPIO_SetSlewCtl) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIO_SetPullCtl) refers to gpio.o(.text.GPIO_SetPullCtl) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIO_EnableEINT) refers to gpio.o(.text.GPIO_EnableEINT) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIO_DisableEINT) refers to gpio.o(.text.GPIO_DisableEINT) for [Anonymous Symbol]
    sys_arch.o(.text.sys_mbox_new) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    sys_arch.o(.ARM.exidx.text.sys_mbox_new) refers to sys_arch.o(.text.sys_mbox_new) for [Anonymous Symbol]
    sys_arch.o(.text.sys_mbox_free) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    sys_arch.o(.text.sys_mbox_free) refers to portasm.o(.text.ulSetInterruptMask) for ulSetInterruptMask
    sys_arch.o(.text.sys_mbox_free) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    sys_arch.o(.ARM.exidx.text.sys_mbox_free) refers to sys_arch.o(.text.sys_mbox_free) for [Anonymous Symbol]
    sys_arch.o(.text.sys_mbox_post) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    sys_arch.o(.ARM.exidx.text.sys_mbox_post) refers to sys_arch.o(.text.sys_mbox_post) for [Anonymous Symbol]
    sys_arch.o(.text.sys_mbox_trypost) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    sys_arch.o(.ARM.exidx.text.sys_mbox_trypost) refers to sys_arch.o(.text.sys_mbox_trypost) for [Anonymous Symbol]
    sys_arch.o(.text.sys_mbox_trypost_fromisr) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    sys_arch.o(.ARM.exidx.text.sys_mbox_trypost_fromisr) refers to sys_arch.o(.text.sys_mbox_trypost_fromisr) for [Anonymous Symbol]
    sys_arch.o(.text.sys_arch_mbox_fetch) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    sys_arch.o(.text.sys_arch_mbox_fetch) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    sys_arch.o(.ARM.exidx.text.sys_arch_mbox_fetch) refers to sys_arch.o(.text.sys_arch_mbox_fetch) for [Anonymous Symbol]
    sys_arch.o(.text.sys_arch_mbox_tryfetch) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    sys_arch.o(.ARM.exidx.text.sys_arch_mbox_tryfetch) refers to sys_arch.o(.text.sys_arch_mbox_tryfetch) for [Anonymous Symbol]
    sys_arch.o(.text.sys_sem_new) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    sys_arch.o(.text.sys_sem_new) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    sys_arch.o(.text.sys_sem_new) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    sys_arch.o(.ARM.exidx.text.sys_sem_new) refers to sys_arch.o(.text.sys_sem_new) for [Anonymous Symbol]
    sys_arch.o(.text.sys_arch_sem_wait) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    sys_arch.o(.text.sys_arch_sem_wait) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    sys_arch.o(.ARM.exidx.text.sys_arch_sem_wait) refers to sys_arch.o(.text.sys_arch_sem_wait) for [Anonymous Symbol]
    sys_arch.o(.text.sys_mutex_new) refers to queue.o(.text.xQueueCreateMutex) for xQueueCreateMutex
    sys_arch.o(.ARM.exidx.text.sys_mutex_new) refers to sys_arch.o(.text.sys_mutex_new) for [Anonymous Symbol]
    sys_arch.o(.text.sys_mutex_lock) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    sys_arch.o(.ARM.exidx.text.sys_mutex_lock) refers to sys_arch.o(.text.sys_mutex_lock) for [Anonymous Symbol]
    sys_arch.o(.text.sys_mutex_unlock) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    sys_arch.o(.ARM.exidx.text.sys_mutex_unlock) refers to sys_arch.o(.text.sys_mutex_unlock) for [Anonymous Symbol]
    sys_arch.o(.text.sys_mutex_free) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    sys_arch.o(.ARM.exidx.text.sys_mutex_free) refers to sys_arch.o(.text.sys_mutex_free) for [Anonymous Symbol]
    sys_arch.o(.text.sys_sem_signal) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    sys_arch.o(.ARM.exidx.text.sys_sem_signal) refers to sys_arch.o(.text.sys_sem_signal) for [Anonymous Symbol]
    sys_arch.o(.text.sys_sem_free) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    sys_arch.o(.ARM.exidx.text.sys_sem_free) refers to sys_arch.o(.text.sys_sem_free) for [Anonymous Symbol]
    sys_arch.o(.ARM.exidx.text.sys_init) refers to sys_arch.o(.text.sys_init) for [Anonymous Symbol]
    sys_arch.o(.text.sys_now) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    sys_arch.o(.ARM.exidx.text.sys_now) refers to sys_arch.o(.text.sys_now) for [Anonymous Symbol]
    sys_arch.o(.text.sys_thread_new) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    sys_arch.o(.ARM.exidx.text.sys_thread_new) refers to sys_arch.o(.text.sys_thread_new) for [Anonymous Symbol]
    sys_arch.o(.text.sys_arch_protect) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    sys_arch.o(.ARM.exidx.text.sys_arch_protect) refers to sys_arch.o(.text.sys_arch_protect) for [Anonymous Symbol]
    sys_arch.o(.text.sys_arch_unprotect) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    sys_arch.o(.ARM.exidx.text.sys_arch_unprotect) refers to sys_arch.o(.text.sys_arch_unprotect) for [Anonymous Symbol]
    sys_arch.o(.ARM.exidx.text.sys_assert) refers to sys_arch.o(.text.sys_assert) for [Anonymous Symbol]
    ethernetif.o(.text.ethernetif_input) refers to pbuf.o(.text.pbuf_alloc) for pbuf_alloc
    ethernetif.o(.text.ethernetif_input) refers to memmovea.o(.text) for __aeabi_memcpy
    ethernetif.o(.text.ethernetif_input) refers to def.o(.text.lwip_htons) for lwip_htons
    ethernetif.o(.text.ethernetif_input) refers to ethernetif.o(.bss._netif) for _netif
    ethernetif.o(.text.ethernetif_input) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    ethernetif.o(.ARM.exidx.text.ethernetif_input) refers to ethernetif.o(.text.ethernetif_input) for [Anonymous Symbol]
    ethernetif.o(.text.ethernetif_init) refers to ethernetif.o(.rodata.str1.1) for .L.str.2
    ethernetif.o(.text.ethernetif_init) refers to printf8.o(i.__0printf$8) for __2printf
    ethernetif.o(.text.ethernetif_init) refers to ethernetif.o(.bss._netif) for _netif
    ethernetif.o(.text.ethernetif_init) refers to mem.o(.text.mem_malloc) for mem_malloc
    ethernetif.o(.text.ethernetif_init) refers to etharp.o(.text.etharp_output) for etharp_output
    ethernetif.o(.text.ethernetif_init) refers to ethernetif.o(.text.low_level_output) for low_level_output
    ethernetif.o(.text.ethernetif_init) refers to main.o(.data.my_mac_addr) for my_mac_addr
    ethernetif.o(.text.ethernetif_init) refers to emac.o(.text.EMAC_Open) for EMAC_Open
    ethernetif.o(.text.ethernetif_init) refers to ethernetif.o(.bss.xRxSemaphore) for xRxSemaphore
    ethernetif.o(.text.ethernetif_init) refers to sys_arch.o(.text.sys_sem_new) for sys_sem_new
    ethernetif.o(.text.ethernetif_init) refers to ethernetif.o(.text.eth_rx_thread_entry) for eth_rx_thread_entry
    ethernetif.o(.text.ethernetif_init) refers to sys_arch.o(.text.sys_thread_new) for sys_thread_new
    ethernetif.o(.text.ethernetif_init) refers to ethernetif.o(.bss.xRxThread) for xRxThread
    ethernetif.o(.text.ethernetif_init) refers to sys_arch.o(.text.sys_arch_sem_wait) for sys_arch_sem_wait
    ethernetif.o(.ARM.exidx.text.ethernetif_init) refers to ethernetif.o(.text.ethernetif_init) for [Anonymous Symbol]
    ethernetif.o(.text.low_level_output) refers to emac.o(.text.EMAC_AllocatePktBuf) for EMAC_AllocatePktBuf
    ethernetif.o(.text.low_level_output) refers to memmovea.o(.text) for __aeabi_memcpy
    ethernetif.o(.text.low_level_output) refers to emac.o(.text.EMAC_TransmitPkt) for EMAC_TransmitPkt
    ethernetif.o(.ARM.exidx.text.low_level_output) refers to ethernetif.o(.text.low_level_output) for [Anonymous Symbol]
    ethernetif.o(.text.eth_rx_thread_entry) refers to ethernetif.o(.bss.xRxSemaphore) for xRxSemaphore
    ethernetif.o(.text.eth_rx_thread_entry) refers to sys_arch.o(.text.sys_sem_signal) for sys_sem_signal
    ethernetif.o(.text.eth_rx_thread_entry) refers to sys_arch.o(.text.sys_arch_sem_wait) for sys_arch_sem_wait
    ethernetif.o(.text.eth_rx_thread_entry) refers to emac.o(.text.EMAC_ReceivePkt) for EMAC_ReceivePkt
    ethernetif.o(.ARM.exidx.text.eth_rx_thread_entry) refers to ethernetif.o(.text.eth_rx_thread_entry) for [Anonymous Symbol]
    def.o(.ARM.exidx.text.lwip_htons) refers to def.o(.text.lwip_htons) for [Anonymous Symbol]
    def.o(.ARM.exidx.text.lwip_htonl) refers to def.o(.text.lwip_htonl) for [Anonymous Symbol]
    def.o(.text.lwip_strnstr) refers to strlen.o(.text) for strlen
    def.o(.text.lwip_strnstr) refers to strncmp.o(.text) for strncmp
    def.o(.ARM.exidx.text.lwip_strnstr) refers to def.o(.text.lwip_strnstr) for [Anonymous Symbol]
    def.o(.ARM.exidx.text.lwip_stricmp) refers to def.o(.text.lwip_stricmp) for [Anonymous Symbol]
    def.o(.ARM.exidx.text.lwip_strnicmp) refers to def.o(.text.lwip_strnicmp) for [Anonymous Symbol]
    def.o(.text.lwip_itoa) refers to memmovea.o(.text) for __aeabi_memmove
    def.o(.ARM.exidx.text.lwip_itoa) refers to def.o(.text.lwip_itoa) for [Anonymous Symbol]
    inet_chksum.o(.ARM.exidx.text.lwip_standard_chksum) refers to inet_chksum.o(.text.lwip_standard_chksum) for [Anonymous Symbol]
    inet_chksum.o(.text.inet_chksum_pseudo) refers to def.o(.text.lwip_htons) for lwip_htons
    inet_chksum.o(.ARM.exidx.text.inet_chksum_pseudo) refers to inet_chksum.o(.text.inet_chksum_pseudo) for [Anonymous Symbol]
    inet_chksum.o(.text.ip_chksum_pseudo) refers to inet_chksum.o(.text.inet_chksum_pseudo) for inet_chksum_pseudo
    inet_chksum.o(.ARM.exidx.text.ip_chksum_pseudo) refers to inet_chksum.o(.text.ip_chksum_pseudo) for [Anonymous Symbol]
    inet_chksum.o(.text.inet_chksum_pseudo_partial) refers to inet_chksum.o(.rodata.str1.1) for .L.str.2
    inet_chksum.o(.text.inet_chksum_pseudo_partial) refers to printf8.o(i.__0printf$8) for __2printf
    inet_chksum.o(.text.inet_chksum_pseudo_partial) refers to def.o(.text.lwip_htons) for lwip_htons
    inet_chksum.o(.ARM.exidx.text.inet_chksum_pseudo_partial) refers to inet_chksum.o(.text.inet_chksum_pseudo_partial) for [Anonymous Symbol]
    inet_chksum.o(.text.ip_chksum_pseudo_partial) refers to inet_chksum.o(.text.inet_chksum_pseudo_partial) for inet_chksum_pseudo_partial
    inet_chksum.o(.ARM.exidx.text.ip_chksum_pseudo_partial) refers to inet_chksum.o(.text.ip_chksum_pseudo_partial) for [Anonymous Symbol]
    inet_chksum.o(.ARM.exidx.text.inet_chksum) refers to inet_chksum.o(.text.inet_chksum) for [Anonymous Symbol]
    inet_chksum.o(.ARM.exidx.text.inet_chksum_pbuf) refers to inet_chksum.o(.text.inet_chksum_pbuf) for [Anonymous Symbol]
    init.o(.text.lwip_init) refers to sys_arch.o(.text.sys_init) for sys_init
    init.o(.text.lwip_init) refers to mem.o(.text.mem_init) for mem_init
    init.o(.text.lwip_init) refers to memp.o(.text.memp_init) for memp_init
    init.o(.text.lwip_init) refers to netif.o(.text.netif_init) for netif_init
    init.o(.text.lwip_init) refers to udp.o(.text.udp_init) for udp_init
    init.o(.text.lwip_init) refers to tcp.o(.text.tcp_init) for tcp_init
    init.o(.text.lwip_init) refers to timeouts.o(.text.sys_timeouts_init) for sys_timeouts_init
    init.o(.ARM.exidx.text.lwip_init) refers to init.o(.text.lwip_init) for [Anonymous Symbol]
    mem.o(.text.mem_init) refers to mem.o(.bss.ram_heap) for ram_heap
    mem.o(.text.mem_init) refers to mem.o(.bss.ram) for ram
    mem.o(.text.mem_init) refers to mem.o(.bss.ram_end) for ram_end
    mem.o(.text.mem_init) refers to mem.o(.bss.lfree) for lfree
    mem.o(.text.mem_init) refers to mem.o(.bss.mem_mutex) for mem_mutex
    mem.o(.text.mem_init) refers to sys_arch.o(.text.sys_mutex_new) for sys_mutex_new
    mem.o(.text.mem_init) refers to mem.o(.rodata.str1.1) for .L.str
    mem.o(.text.mem_init) refers to printf8.o(i.__0printf$8) for __2printf
    mem.o(.ARM.exidx.text.mem_init) refers to mem.o(.text.mem_init) for [Anonymous Symbol]
    mem.o(.text.mem_free) refers to mem.o(.rodata.str1.1) for .L.str
    mem.o(.text.mem_free) refers to mem.o(.bss.ram) for ram
    mem.o(.text.mem_free) refers to mem.o(.bss.ram_end) for ram_end
    mem.o(.text.mem_free) refers to mem.o(.bss.mem_mutex) for mem_mutex
    mem.o(.text.mem_free) refers to sys_arch.o(.text.sys_mutex_lock) for sys_mutex_lock
    mem.o(.text.mem_free) refers to mem.o(.bss.lfree) for lfree
    mem.o(.text.mem_free) refers to printf8.o(i.__0printf$8) for __2printf
    mem.o(.text.mem_free) refers to sys_arch.o(.text.sys_mutex_unlock) for sys_mutex_unlock
    mem.o(.text.mem_free) refers to sys_arch.o(.text.sys_arch_protect) for sys_arch_protect
    mem.o(.text.mem_free) refers to sys_arch.o(.text.sys_arch_unprotect) for sys_arch_unprotect
    mem.o(.ARM.exidx.text.mem_free) refers to mem.o(.text.mem_free) for [Anonymous Symbol]
    mem.o(.text.mem_trim) refers to mem.o(.bss.ram) for ram
    mem.o(.text.mem_trim) refers to mem.o(.bss.ram_end) for ram_end
    mem.o(.text.mem_trim) refers to mem.o(.rodata.str1.1) for .L.str
    mem.o(.text.mem_trim) refers to printf8.o(i.__0printf$8) for __2printf
    mem.o(.text.mem_trim) refers to sys_arch.o(.text.sys_arch_protect) for sys_arch_protect
    mem.o(.text.mem_trim) refers to sys_arch.o(.text.sys_arch_unprotect) for sys_arch_unprotect
    mem.o(.text.mem_trim) refers to mem.o(.bss.mem_mutex) for mem_mutex
    mem.o(.text.mem_trim) refers to sys_arch.o(.text.sys_mutex_lock) for sys_mutex_lock
    mem.o(.text.mem_trim) refers to mem.o(.bss.lfree) for lfree
    mem.o(.text.mem_trim) refers to sys_arch.o(.text.sys_mutex_unlock) for sys_mutex_unlock
    mem.o(.ARM.exidx.text.mem_trim) refers to mem.o(.text.mem_trim) for [Anonymous Symbol]
    mem.o(.text.mem_malloc) refers to mem.o(.bss.mem_mutex) for mem_mutex
    mem.o(.text.mem_malloc) refers to sys_arch.o(.text.sys_mutex_lock) for sys_mutex_lock
    mem.o(.text.mem_malloc) refers to mem.o(.bss.lfree) for lfree
    mem.o(.text.mem_malloc) refers to mem.o(.bss.ram) for ram
    mem.o(.text.mem_malloc) refers to sys_arch.o(.text.sys_mutex_unlock) for sys_mutex_unlock
    mem.o(.text.mem_malloc) refers to mem.o(.rodata.str1.1) for .L.str
    mem.o(.text.mem_malloc) refers to printf8.o(i.__0printf$8) for __2printf
    mem.o(.text.mem_malloc) refers to mem.o(.bss.ram_end) for ram_end
    mem.o(.ARM.exidx.text.mem_malloc) refers to mem.o(.text.mem_malloc) for [Anonymous Symbol]
    mem.o(.text.mem_calloc) refers to mem.o(.text.mem_malloc) for mem_malloc
    mem.o(.text.mem_calloc) refers to memseta.o(.text) for __aeabi_memclr
    mem.o(.ARM.exidx.text.mem_calloc) refers to mem.o(.text.mem_calloc) for [Anonymous Symbol]
    memp.o(.ARM.exidx.text.memp_init_pool) refers to memp.o(.text.memp_init_pool) for [Anonymous Symbol]
    memp.o(.text.memp_init) refers to memp.o(.rodata.memp_pools) for memp_pools
    memp.o(.ARM.exidx.text.memp_init) refers to memp.o(.text.memp_init) for [Anonymous Symbol]
    memp.o(.text.memp_malloc_pool) refers to sys_arch.o(.text.sys_arch_protect) for sys_arch_protect
    memp.o(.text.memp_malloc_pool) refers to memp.o(.rodata.str1.1) for .L.str
    memp.o(.text.memp_malloc_pool) refers to printf8.o(i.__0printf$8) for __2printf
    memp.o(.text.memp_malloc_pool) refers to sys_arch.o(.text.sys_arch_unprotect) for sys_arch_unprotect
    memp.o(.ARM.exidx.text.memp_malloc_pool) refers to memp.o(.text.memp_malloc_pool) for [Anonymous Symbol]
    memp.o(.text.memp_malloc) refers to memp.o(.rodata.memp_pools) for memp_pools
    memp.o(.text.memp_malloc) refers to sys_arch.o(.text.sys_arch_protect) for sys_arch_protect
    memp.o(.text.memp_malloc) refers to memp.o(.rodata.str1.1) for .L.str
    memp.o(.text.memp_malloc) refers to printf8.o(i.__0printf$8) for __2printf
    memp.o(.text.memp_malloc) refers to sys_arch.o(.text.sys_arch_unprotect) for sys_arch_unprotect
    memp.o(.ARM.exidx.text.memp_malloc) refers to memp.o(.text.memp_malloc) for [Anonymous Symbol]
    memp.o(.text.memp_free_pool) refers to memp.o(.rodata.str1.1) for .L.str
    memp.o(.text.memp_free_pool) refers to printf8.o(i.__0printf$8) for __2printf
    memp.o(.text.memp_free_pool) refers to sys_arch.o(.text.sys_arch_protect) for sys_arch_protect
    memp.o(.text.memp_free_pool) refers to sys_arch.o(.text.sys_arch_unprotect) for sys_arch_unprotect
    memp.o(.ARM.exidx.text.memp_free_pool) refers to memp.o(.text.memp_free_pool) for [Anonymous Symbol]
    memp.o(.text.memp_free) refers to memp.o(.rodata.memp_pools) for memp_pools
    memp.o(.text.memp_free) refers to memp.o(.rodata.str1.1) for .L.str
    memp.o(.text.memp_free) refers to printf8.o(i.__0printf$8) for __2printf
    memp.o(.text.memp_free) refers to sys_arch.o(.text.sys_arch_protect) for sys_arch_protect
    memp.o(.text.memp_free) refers to sys_arch.o(.text.sys_arch_unprotect) for sys_arch_unprotect
    memp.o(.ARM.exidx.text.memp_free) refers to memp.o(.text.memp_free) for [Anonymous Symbol]
    memp.o(.rodata.memp_UDP_PCB) refers to memp.o(.bss.memp_memory_UDP_PCB_base) for memp_memory_UDP_PCB_base
    memp.o(.rodata.memp_UDP_PCB) refers to memp.o(.bss.memp_tab_UDP_PCB) for [Anonymous Symbol]
    memp.o(.rodata.memp_TCP_PCB) refers to memp.o(.bss.memp_memory_TCP_PCB_base) for memp_memory_TCP_PCB_base
    memp.o(.rodata.memp_TCP_PCB) refers to memp.o(.bss.memp_tab_TCP_PCB) for [Anonymous Symbol]
    memp.o(.rodata.memp_TCP_PCB_LISTEN) refers to memp.o(.bss.memp_memory_TCP_PCB_LISTEN_base) for memp_memory_TCP_PCB_LISTEN_base
    memp.o(.rodata.memp_TCP_PCB_LISTEN) refers to memp.o(.bss.memp_tab_TCP_PCB_LISTEN) for [Anonymous Symbol]
    memp.o(.rodata.memp_TCP_SEG) refers to memp.o(.bss.memp_memory_TCP_SEG_base) for memp_memory_TCP_SEG_base
    memp.o(.rodata.memp_TCP_SEG) refers to memp.o(.bss.memp_tab_TCP_SEG) for [Anonymous Symbol]
    memp.o(.rodata.memp_REASSDATA) refers to memp.o(.bss.memp_memory_REASSDATA_base) for memp_memory_REASSDATA_base
    memp.o(.rodata.memp_REASSDATA) refers to memp.o(.bss.memp_tab_REASSDATA) for [Anonymous Symbol]
    memp.o(.rodata.memp_FRAG_PBUF) refers to memp.o(.bss.memp_memory_FRAG_PBUF_base) for memp_memory_FRAG_PBUF_base
    memp.o(.rodata.memp_FRAG_PBUF) refers to memp.o(.bss.memp_tab_FRAG_PBUF) for [Anonymous Symbol]
    memp.o(.rodata.memp_NETBUF) refers to memp.o(.bss.memp_memory_NETBUF_base) for memp_memory_NETBUF_base
    memp.o(.rodata.memp_NETBUF) refers to memp.o(.bss.memp_tab_NETBUF) for [Anonymous Symbol]
    memp.o(.rodata.memp_NETCONN) refers to memp.o(.bss.memp_memory_NETCONN_base) for memp_memory_NETCONN_base
    memp.o(.rodata.memp_NETCONN) refers to memp.o(.bss.memp_tab_NETCONN) for [Anonymous Symbol]
    memp.o(.rodata.memp_TCPIP_MSG_API) refers to memp.o(.bss.memp_memory_TCPIP_MSG_API_base) for memp_memory_TCPIP_MSG_API_base
    memp.o(.rodata.memp_TCPIP_MSG_API) refers to memp.o(.bss.memp_tab_TCPIP_MSG_API) for [Anonymous Symbol]
    memp.o(.rodata.memp_TCPIP_MSG_INPKT) refers to memp.o(.bss.memp_memory_TCPIP_MSG_INPKT_base) for memp_memory_TCPIP_MSG_INPKT_base
    memp.o(.rodata.memp_TCPIP_MSG_INPKT) refers to memp.o(.bss.memp_tab_TCPIP_MSG_INPKT) for [Anonymous Symbol]
    memp.o(.rodata.memp_SYS_TIMEOUT) refers to memp.o(.bss.memp_memory_SYS_TIMEOUT_base) for memp_memory_SYS_TIMEOUT_base
    memp.o(.rodata.memp_SYS_TIMEOUT) refers to memp.o(.bss.memp_tab_SYS_TIMEOUT) for [Anonymous Symbol]
    memp.o(.rodata.memp_PBUF) refers to memp.o(.bss.memp_memory_PBUF_base) for memp_memory_PBUF_base
    memp.o(.rodata.memp_PBUF) refers to memp.o(.bss.memp_tab_PBUF) for [Anonymous Symbol]
    memp.o(.rodata.memp_PBUF_POOL) refers to memp.o(.bss.memp_memory_PBUF_POOL_base) for memp_memory_PBUF_POOL_base
    memp.o(.rodata.memp_PBUF_POOL) refers to memp.o(.bss.memp_tab_PBUF_POOL) for [Anonymous Symbol]
    memp.o(.rodata.memp_pools) refers to memp.o(.rodata.memp_UDP_PCB) for memp_UDP_PCB
    memp.o(.rodata.memp_pools) refers to memp.o(.rodata.memp_TCP_PCB) for memp_TCP_PCB
    memp.o(.rodata.memp_pools) refers to memp.o(.rodata.memp_TCP_PCB_LISTEN) for memp_TCP_PCB_LISTEN
    memp.o(.rodata.memp_pools) refers to memp.o(.rodata.memp_TCP_SEG) for memp_TCP_SEG
    memp.o(.rodata.memp_pools) refers to memp.o(.rodata.memp_REASSDATA) for memp_REASSDATA
    memp.o(.rodata.memp_pools) refers to memp.o(.rodata.memp_FRAG_PBUF) for memp_FRAG_PBUF
    memp.o(.rodata.memp_pools) refers to memp.o(.rodata.memp_NETBUF) for memp_NETBUF
    memp.o(.rodata.memp_pools) refers to memp.o(.rodata.memp_NETCONN) for memp_NETCONN
    memp.o(.rodata.memp_pools) refers to memp.o(.rodata.memp_TCPIP_MSG_API) for memp_TCPIP_MSG_API
    memp.o(.rodata.memp_pools) refers to memp.o(.rodata.memp_TCPIP_MSG_INPKT) for memp_TCPIP_MSG_INPKT
    memp.o(.rodata.memp_pools) refers to memp.o(.rodata.memp_SYS_TIMEOUT) for memp_SYS_TIMEOUT
    memp.o(.rodata.memp_pools) refers to memp.o(.rodata.memp_PBUF) for memp_PBUF
    memp.o(.rodata.memp_pools) refers to memp.o(.rodata.memp_PBUF_POOL) for memp_PBUF_POOL
    netif.o(.ARM.exidx.text.netif_init) refers to netif.o(.text.netif_init) for [Anonymous Symbol]
    netif.o(.text.netif_input) refers to ethernet.o(.text.ethernet_input) for ethernet_input
    netif.o(.text.netif_input) refers to netif.o(.rodata.str1.1) for .L.str
    netif.o(.text.netif_input) refers to printf8.o(i.__0printf$8) for __2printf
    netif.o(.text.netif_input) refers to ip4.o(.text.ip4_input) for ip4_input
    netif.o(.ARM.exidx.text.netif_input) refers to netif.o(.text.netif_input) for [Anonymous Symbol]
    netif.o(.text.netif_add_noaddr) refers to netif.o(.text.netif_add) for netif_add
    netif.o(.ARM.exidx.text.netif_add_noaddr) refers to netif.o(.text.netif_add_noaddr) for [Anonymous Symbol]
    netif.o(.text.netif_add) refers to ip4_addr.o(.rodata.ip_addr_any) for ip_addr_any
    netif.o(.text.netif_add) refers to netif.o(.bss.netif_num) for netif_num
    netif.o(.text.netif_add) refers to netif.o(.text.netif_null_output_ip4) for netif_null_output_ip4
    netif.o(.text.netif_add) refers to netif.o(.text.netif_do_set_ipaddr) for netif_do_set_ipaddr
    netif.o(.text.netif_add) refers to netif.o(.rodata.str1.1) for .L.str
    netif.o(.text.netif_add) refers to printf8.o(i.__0printf$8) for __2printf
    netif.o(.text.netif_add) refers to netif.o(.bss.netif_list) for netif_list
    netif.o(.ARM.exidx.text.netif_add) refers to netif.o(.text.netif_add) for [Anonymous Symbol]
    netif.o(.ARM.exidx.text.netif_null_output_ip4) refers to netif.o(.text.netif_null_output_ip4) for [Anonymous Symbol]
    netif.o(.text.netif_set_addr) refers to ip4_addr.o(.rodata.ip_addr_any) for ip_addr_any
    netif.o(.text.netif_set_addr) refers to netif.o(.text.netif_do_set_ipaddr) for netif_do_set_ipaddr
    netif.o(.ARM.exidx.text.netif_set_addr) refers to netif.o(.text.netif_set_addr) for [Anonymous Symbol]
    netif.o(.text.netif_set_ipaddr) refers to ip4_addr.o(.rodata.ip_addr_any) for ip_addr_any
    netif.o(.text.netif_set_ipaddr) refers to tcp.o(.text.tcp_netif_ip_addr_changed) for tcp_netif_ip_addr_changed
    netif.o(.text.netif_set_ipaddr) refers to udp.o(.text.udp_netif_ip_addr_changed) for udp_netif_ip_addr_changed
    netif.o(.text.netif_set_ipaddr) refers to etharp.o(.text.etharp_request) for etharp_request
    netif.o(.text.netif_set_ipaddr) refers to netif.o(.rodata.str1.1) for .L.str
    netif.o(.text.netif_set_ipaddr) refers to printf8.o(i.__0printf$8) for __2printf
    netif.o(.ARM.exidx.text.netif_set_ipaddr) refers to netif.o(.text.netif_set_ipaddr) for [Anonymous Symbol]
    netif.o(.text.netif_do_set_ipaddr) refers to tcp.o(.text.tcp_netif_ip_addr_changed) for tcp_netif_ip_addr_changed
    netif.o(.text.netif_do_set_ipaddr) refers to udp.o(.text.udp_netif_ip_addr_changed) for udp_netif_ip_addr_changed
    netif.o(.text.netif_do_set_ipaddr) refers to netif.o(.rodata.str1.1) for .L.str
    netif.o(.text.netif_do_set_ipaddr) refers to printf8.o(i.__0printf$8) for __2printf
    netif.o(.text.netif_do_set_ipaddr) refers to etharp.o(.text.etharp_request) for etharp_request
    netif.o(.ARM.exidx.text.netif_do_set_ipaddr) refers to netif.o(.text.netif_do_set_ipaddr) for [Anonymous Symbol]
    netif.o(.text.netif_set_netmask) refers to ip4_addr.o(.rodata.ip_addr_any) for ip_addr_any
    netif.o(.text.netif_set_netmask) refers to netif.o(.rodata.str1.1) for .L.str
    netif.o(.text.netif_set_netmask) refers to printf8.o(i.__0printf$8) for __2printf
    netif.o(.ARM.exidx.text.netif_set_netmask) refers to netif.o(.text.netif_set_netmask) for [Anonymous Symbol]
    netif.o(.text.netif_set_gw) refers to ip4_addr.o(.rodata.ip_addr_any) for ip_addr_any
    netif.o(.text.netif_set_gw) refers to netif.o(.rodata.str1.1) for .L.str
    netif.o(.text.netif_set_gw) refers to printf8.o(i.__0printf$8) for __2printf
    netif.o(.ARM.exidx.text.netif_set_gw) refers to netif.o(.text.netif_set_gw) for [Anonymous Symbol]
    netif.o(.text.netif_remove) refers to tcp.o(.text.tcp_netif_ip_addr_changed) for tcp_netif_ip_addr_changed
    netif.o(.text.netif_remove) refers to udp.o(.text.udp_netif_ip_addr_changed) for udp_netif_ip_addr_changed
    netif.o(.text.netif_remove) refers to etharp.o(.text.etharp_cleanup_netif) for etharp_cleanup_netif
    netif.o(.text.netif_remove) refers to netif.o(.bss.netif_default) for netif_default
    netif.o(.text.netif_remove) refers to netif.o(.bss.netif_list) for netif_list
    netif.o(.ARM.exidx.text.netif_remove) refers to netif.o(.text.netif_remove) for [Anonymous Symbol]
    netif.o(.text.netif_set_down) refers to etharp.o(.text.etharp_cleanup_netif) for etharp_cleanup_netif
    netif.o(.text.netif_set_down) refers to netif.o(.rodata.str1.1) for .L.str
    netif.o(.text.netif_set_down) refers to printf8.o(i.__0printf$8) for __2printf
    netif.o(.ARM.exidx.text.netif_set_down) refers to netif.o(.text.netif_set_down) for [Anonymous Symbol]
    netif.o(.text.netif_set_default) refers to netif.o(.bss.netif_default) for netif_default
    netif.o(.ARM.exidx.text.netif_set_default) refers to netif.o(.text.netif_set_default) for [Anonymous Symbol]
    netif.o(.text.netif_set_up) refers to etharp.o(.text.etharp_request) for etharp_request
    netif.o(.text.netif_set_up) refers to netif.o(.rodata.str1.1) for .L.str
    netif.o(.text.netif_set_up) refers to printf8.o(i.__0printf$8) for __2printf
    netif.o(.ARM.exidx.text.netif_set_up) refers to netif.o(.text.netif_set_up) for [Anonymous Symbol]
    netif.o(.text.netif_set_link_up) refers to etharp.o(.text.etharp_request) for etharp_request
    netif.o(.text.netif_set_link_up) refers to netif.o(.rodata.str1.1) for .L.str
    netif.o(.text.netif_set_link_up) refers to printf8.o(i.__0printf$8) for __2printf
    netif.o(.ARM.exidx.text.netif_set_link_up) refers to netif.o(.text.netif_set_link_up) for [Anonymous Symbol]
    netif.o(.text.netif_set_link_down) refers to netif.o(.rodata.str1.1) for .L.str
    netif.o(.text.netif_set_link_down) refers to printf8.o(i.__0printf$8) for __2printf
    netif.o(.ARM.exidx.text.netif_set_link_down) refers to netif.o(.text.netif_set_link_down) for [Anonymous Symbol]
    netif.o(.text.netif_name_to_index) refers to netif.o(.bss.netif_list) for netif_list
    netif.o(.text.netif_name_to_index) refers to atoi.o(.text) for atoi
    netif.o(.ARM.exidx.text.netif_name_to_index) refers to netif.o(.text.netif_name_to_index) for [Anonymous Symbol]
    netif.o(.text.netif_find) refers to netif.o(.bss.netif_list) for netif_list
    netif.o(.text.netif_find) refers to atoi.o(.text) for atoi
    netif.o(.ARM.exidx.text.netif_find) refers to netif.o(.text.netif_find) for [Anonymous Symbol]
    netif.o(.text.netif_index_to_name) refers to netif.o(.bss.netif_list) for netif_list
    netif.o(.text.netif_index_to_name) refers to def.o(.text.lwip_itoa) for lwip_itoa
    netif.o(.ARM.exidx.text.netif_index_to_name) refers to netif.o(.text.netif_index_to_name) for [Anonymous Symbol]
    netif.o(.text.netif_get_by_index) refers to netif.o(.bss.netif_list) for netif_list
    netif.o(.ARM.exidx.text.netif_get_by_index) refers to netif.o(.text.netif_get_by_index) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_alloc) refers to pbuf.o(.rodata.str1.1) for .L.str
    pbuf.o(.text.pbuf_alloc) refers to printf8.o(i.__0printf$8) for __2printf
    pbuf.o(.text.pbuf_alloc) refers to memp.o(.text.memp_malloc) for memp_malloc
    pbuf.o(.text.pbuf_alloc) refers to mem.o(.text.mem_malloc) for mem_malloc
    pbuf.o(.text.pbuf_alloc) refers to sys_arch.o(.text.sys_arch_protect) for sys_arch_protect
    pbuf.o(.text.pbuf_alloc) refers to pbuf.o(.bss.pbuf_free_ooseq_pending) for pbuf_free_ooseq_pending
    pbuf.o(.text.pbuf_alloc) refers to sys_arch.o(.text.sys_arch_unprotect) for sys_arch_unprotect
    pbuf.o(.text.pbuf_alloc) refers to pbuf.o(.text.pbuf_free_ooseq_callback) for pbuf_free_ooseq_callback
    pbuf.o(.text.pbuf_alloc) refers to tcpip.o(.text.tcpip_try_callback) for tcpip_try_callback
    pbuf.o(.text.pbuf_alloc) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    pbuf.o(.ARM.exidx.text.pbuf_alloc) refers to pbuf.o(.text.pbuf_alloc) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_alloc_reference) refers to pbuf.o(.rodata.str1.1) for .L.str
    pbuf.o(.text.pbuf_alloc_reference) refers to printf8.o(i.__0printf$8) for __2printf
    pbuf.o(.text.pbuf_alloc_reference) refers to memp.o(.text.memp_malloc) for memp_malloc
    pbuf.o(.ARM.exidx.text.pbuf_alloc_reference) refers to pbuf.o(.text.pbuf_alloc_reference) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_free) refers to pbuf.o(.rodata.str1.1) for .L.str
    pbuf.o(.text.pbuf_free) refers to sys_arch.o(.text.sys_arch_protect) for sys_arch_protect
    pbuf.o(.text.pbuf_free) refers to printf8.o(i.__0printf$8) for __2printf
    pbuf.o(.text.pbuf_free) refers to sys_arch.o(.text.sys_arch_unprotect) for sys_arch_unprotect
    pbuf.o(.text.pbuf_free) refers to memp.o(.text.memp_free) for memp_free
    pbuf.o(.text.pbuf_free) refers to mem.o(.text.mem_free) for mem_free
    pbuf.o(.ARM.exidx.text.pbuf_free) refers to pbuf.o(.text.pbuf_free) for [Anonymous Symbol]
    pbuf.o(.ARM.exidx.text.pbuf_alloced_custom) refers to pbuf.o(.text.pbuf_alloced_custom) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_realloc) refers to pbuf.o(.rodata.str1.1) for .L.str
    pbuf.o(.text.pbuf_realloc) refers to printf8.o(i.__0printf$8) for __2printf
    pbuf.o(.text.pbuf_realloc) refers to mem.o(.text.mem_trim) for mem_trim
    pbuf.o(.text.pbuf_realloc) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    pbuf.o(.ARM.exidx.text.pbuf_realloc) refers to pbuf.o(.text.pbuf_realloc) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_add_header) refers to pbuf.o(.rodata.str1.1) for .L.str
    pbuf.o(.text.pbuf_add_header) refers to printf8.o(i.__0printf$8) for __2printf
    pbuf.o(.ARM.exidx.text.pbuf_add_header) refers to pbuf.o(.text.pbuf_add_header) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_add_header_force) refers to pbuf.o(.rodata.str1.1) for .L.str
    pbuf.o(.text.pbuf_add_header_force) refers to printf8.o(i.__0printf$8) for __2printf
    pbuf.o(.ARM.exidx.text.pbuf_add_header_force) refers to pbuf.o(.text.pbuf_add_header_force) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_remove_header) refers to pbuf.o(.rodata.str1.1) for .L.str
    pbuf.o(.text.pbuf_remove_header) refers to printf8.o(i.__0printf$8) for __2printf
    pbuf.o(.ARM.exidx.text.pbuf_remove_header) refers to pbuf.o(.text.pbuf_remove_header) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_header) refers to pbuf.o(.text.pbuf_header_impl) for pbuf_header_impl
    pbuf.o(.ARM.exidx.text.pbuf_header) refers to pbuf.o(.text.pbuf_header) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_header_impl) refers to pbuf.o(.rodata.str1.1) for .L.str.10
    pbuf.o(.text.pbuf_header_impl) refers to printf8.o(i.__0printf$8) for __2printf
    pbuf.o(.ARM.exidx.text.pbuf_header_impl) refers to pbuf.o(.text.pbuf_header_impl) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_header_force) refers to pbuf.o(.text.pbuf_header_impl) for pbuf_header_impl
    pbuf.o(.ARM.exidx.text.pbuf_header_force) refers to pbuf.o(.text.pbuf_header_force) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_free_header) refers to pbuf.o(.rodata.str1.1) for .L.str
    pbuf.o(.text.pbuf_free_header) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    pbuf.o(.text.pbuf_free_header) refers to printf8.o(i.__0printf$8) for __2printf
    pbuf.o(.ARM.exidx.text.pbuf_free_header) refers to pbuf.o(.text.pbuf_free_header) for [Anonymous Symbol]
    pbuf.o(.ARM.exidx.text.pbuf_clen) refers to pbuf.o(.text.pbuf_clen) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_ref) refers to sys_arch.o(.text.sys_arch_protect) for sys_arch_protect
    pbuf.o(.text.pbuf_ref) refers to sys_arch.o(.text.sys_arch_unprotect) for sys_arch_unprotect
    pbuf.o(.text.pbuf_ref) refers to pbuf.o(.rodata.str1.1) for .L.str
    pbuf.o(.text.pbuf_ref) refers to printf8.o(i.__0printf$8) for __2printf
    pbuf.o(.ARM.exidx.text.pbuf_ref) refers to pbuf.o(.text.pbuf_ref) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_cat) refers to pbuf.o(.rodata.str1.1) for .L.str
    pbuf.o(.text.pbuf_cat) refers to printf8.o(i.__0printf$8) for __2printf
    pbuf.o(.ARM.exidx.text.pbuf_cat) refers to pbuf.o(.text.pbuf_cat) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_chain) refers to pbuf.o(.text.pbuf_cat) for pbuf_cat
    pbuf.o(.text.pbuf_chain) refers to sys_arch.o(.text.sys_arch_protect) for sys_arch_protect
    pbuf.o(.text.pbuf_chain) refers to sys_arch.o(.text.sys_arch_unprotect) for sys_arch_unprotect
    pbuf.o(.text.pbuf_chain) refers to pbuf.o(.rodata.str1.1) for .L.str
    pbuf.o(.text.pbuf_chain) refers to printf8.o(i.__0printf$8) for __2printf
    pbuf.o(.ARM.exidx.text.pbuf_chain) refers to pbuf.o(.text.pbuf_chain) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_dechain) refers to pbuf.o(.rodata.str1.1) for .L.str
    pbuf.o(.text.pbuf_dechain) refers to printf8.o(i.__0printf$8) for __2printf
    pbuf.o(.text.pbuf_dechain) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    pbuf.o(.ARM.exidx.text.pbuf_dechain) refers to pbuf.o(.text.pbuf_dechain) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_copy) refers to pbuf.o(.rodata.str1.1) for .L.str
    pbuf.o(.text.pbuf_copy) refers to printf8.o(i.__0printf$8) for __2printf
    pbuf.o(.text.pbuf_copy) refers to memmovea.o(.text) for __aeabi_memcpy
    pbuf.o(.ARM.exidx.text.pbuf_copy) refers to pbuf.o(.text.pbuf_copy) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_copy_partial) refers to memmovea.o(.text) for __aeabi_memcpy
    pbuf.o(.text.pbuf_copy_partial) refers to pbuf.o(.rodata.str1.1) for .L.str
    pbuf.o(.text.pbuf_copy_partial) refers to printf8.o(i.__0printf$8) for __2printf
    pbuf.o(.ARM.exidx.text.pbuf_copy_partial) refers to pbuf.o(.text.pbuf_copy_partial) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_get_contiguous) refers to pbuf.o(.rodata.str1.1) for .L.str
    pbuf.o(.text.pbuf_get_contiguous) refers to printf8.o(i.__0printf$8) for __2printf
    pbuf.o(.text.pbuf_get_contiguous) refers to memmovea.o(.text) for __aeabi_memcpy
    pbuf.o(.ARM.exidx.text.pbuf_get_contiguous) refers to pbuf.o(.text.pbuf_get_contiguous) for [Anonymous Symbol]
    pbuf.o(.ARM.exidx.text.pbuf_skip) refers to pbuf.o(.text.pbuf_skip) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_take) refers to pbuf.o(.rodata.str1.1) for .L.str
    pbuf.o(.text.pbuf_take) refers to printf8.o(i.__0printf$8) for __2printf
    pbuf.o(.text.pbuf_take) refers to memmovea.o(.text) for __aeabi_memcpy
    pbuf.o(.ARM.exidx.text.pbuf_take) refers to pbuf.o(.text.pbuf_take) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_take_at) refers to pbuf.o(.rodata.str1.1) for .L.str.2
    pbuf.o(.text.pbuf_take_at) refers to printf8.o(i.__0printf$8) for __2printf
    pbuf.o(.text.pbuf_take_at) refers to memmovea.o(.text) for __aeabi_memcpy
    pbuf.o(.text.pbuf_take_at) refers to pbuf.o(.text.pbuf_take) for pbuf_take
    pbuf.o(.ARM.exidx.text.pbuf_take_at) refers to pbuf.o(.text.pbuf_take_at) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_coalesce) refers to mem.o(.text.mem_malloc) for mem_malloc
    pbuf.o(.text.pbuf_coalesce) refers to pbuf.o(.text.pbuf_copy) for pbuf_copy
    pbuf.o(.text.pbuf_coalesce) refers to pbuf.o(.rodata.str1.1) for .L.str
    pbuf.o(.text.pbuf_coalesce) refers to printf8.o(i.__0printf$8) for __2printf
    pbuf.o(.text.pbuf_coalesce) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    pbuf.o(.ARM.exidx.text.pbuf_coalesce) refers to pbuf.o(.text.pbuf_coalesce) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_clone) refers to pbuf.o(.text.pbuf_alloc) for pbuf_alloc
    pbuf.o(.text.pbuf_clone) refers to pbuf.o(.text.pbuf_copy) for pbuf_copy
    pbuf.o(.text.pbuf_clone) refers to pbuf.o(.rodata.str1.1) for .L.str
    pbuf.o(.text.pbuf_clone) refers to printf8.o(i.__0printf$8) for __2printf
    pbuf.o(.ARM.exidx.text.pbuf_clone) refers to pbuf.o(.text.pbuf_clone) for [Anonymous Symbol]
    pbuf.o(.ARM.exidx.text.pbuf_get_at) refers to pbuf.o(.text.pbuf_get_at) for [Anonymous Symbol]
    pbuf.o(.ARM.exidx.text.pbuf_try_get_at) refers to pbuf.o(.text.pbuf_try_get_at) for [Anonymous Symbol]
    pbuf.o(.ARM.exidx.text.pbuf_put_at) refers to pbuf.o(.text.pbuf_put_at) for [Anonymous Symbol]
    pbuf.o(.ARM.exidx.text.pbuf_memcmp) refers to pbuf.o(.text.pbuf_memcmp) for [Anonymous Symbol]
    pbuf.o(.ARM.exidx.text.pbuf_memfind) refers to pbuf.o(.text.pbuf_memfind) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_strstr) refers to strlen.o(.text) for strlen
    pbuf.o(.text.pbuf_strstr) refers to pbuf.o(.text.pbuf_memfind) for pbuf_memfind
    pbuf.o(.ARM.exidx.text.pbuf_strstr) refers to pbuf.o(.text.pbuf_strstr) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_free_ooseq_callback) refers to sys_arch.o(.text.sys_arch_protect) for sys_arch_protect
    pbuf.o(.text.pbuf_free_ooseq_callback) refers to pbuf.o(.bss.pbuf_free_ooseq_pending) for pbuf_free_ooseq_pending
    pbuf.o(.text.pbuf_free_ooseq_callback) refers to sys_arch.o(.text.sys_arch_unprotect) for sys_arch_unprotect
    pbuf.o(.text.pbuf_free_ooseq_callback) refers to tcp.o(.bss.tcp_active_pcbs) for tcp_active_pcbs
    pbuf.o(.text.pbuf_free_ooseq_callback) refers to tcp.o(.text.tcp_free_ooseq) for tcp_free_ooseq
    pbuf.o(.ARM.exidx.text.pbuf_free_ooseq_callback) refers to pbuf.o(.text.pbuf_free_ooseq_callback) for [Anonymous Symbol]
    sys_lwip.o(.text.sys_msleep) refers to sys_arch.o(.text.sys_sem_new) for sys_sem_new
    sys_lwip.o(.text.sys_msleep) refers to sys_arch.o(.text.sys_arch_sem_wait) for sys_arch_sem_wait
    sys_lwip.o(.text.sys_msleep) refers to sys_arch.o(.text.sys_sem_free) for sys_sem_free
    sys_lwip.o(.ARM.exidx.text.sys_msleep) refers to sys_lwip.o(.text.sys_msleep) for [Anonymous Symbol]
    tcp.o(.text.tcp_init) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    tcp.o(.text.tcp_init) refers to tcp.o(.data.tcp_port) for tcp_port
    tcp.o(.ARM.exidx.text.tcp_init) refers to tcp.o(.text.tcp_init) for [Anonymous Symbol]
    tcp.o(.text.tcp_free) refers to tcp.o(.rodata.str1.1) for .L.str
    tcp.o(.text.tcp_free) refers to printf8.o(i.__0printf$8) for __2printf
    tcp.o(.text.tcp_free) refers to memp.o(.text.memp_free) for memp_free
    tcp.o(.ARM.exidx.text.tcp_free) refers to tcp.o(.text.tcp_free) for [Anonymous Symbol]
    tcp.o(.text.tcp_tmr) refers to tcp.o(.text.tcp_fasttmr) for tcp_fasttmr
    tcp.o(.text.tcp_tmr) refers to tcp.o(.bss.tcp_timer) for tcp_timer
    tcp.o(.text.tcp_tmr) refers to tcp.o(.text.tcp_slowtmr) for tcp_slowtmr
    tcp.o(.ARM.exidx.text.tcp_tmr) refers to tcp.o(.text.tcp_tmr) for [Anonymous Symbol]
    tcp.o(.text.tcp_fasttmr) refers to tcp.o(.bss.tcp_timer_ctr) for tcp_timer_ctr
    tcp.o(.text.tcp_fasttmr) refers to tcp.o(.bss.tcp_active_pcbs) for tcp_active_pcbs
    tcp.o(.text.tcp_fasttmr) refers to tcp.o(.bss.tcp_active_pcbs_changed) for tcp_active_pcbs_changed
    tcp.o(.text.tcp_fasttmr) refers to tcp_out.o(.text.tcp_output) for tcp_output
    tcp.o(.text.tcp_fasttmr) refers to tcp.o(.text.tcp_close_shutdown_fin) for tcp_close_shutdown_fin
    tcp.o(.text.tcp_fasttmr) refers to tcp.o(.text.tcp_process_refused_data) for tcp_process_refused_data
    tcp.o(.ARM.exidx.text.tcp_fasttmr) refers to tcp.o(.text.tcp_fasttmr) for [Anonymous Symbol]
    tcp.o(.text.tcp_slowtmr) refers to tcp.o(.bss.tcp_ticks) for tcp_ticks
    tcp.o(.text.tcp_slowtmr) refers to tcp.o(.bss.tcp_timer_ctr) for tcp_timer_ctr
    tcp.o(.text.tcp_slowtmr) refers to tcp.o(.bss.tcp_active_pcbs) for tcp_active_pcbs
    tcp.o(.text.tcp_slowtmr) refers to tcp.o(.rodata.str1.1) for .L.str
    tcp.o(.text.tcp_slowtmr) refers to printf8.o(i.__0printf$8) for __2printf
    tcp.o(.text.tcp_slowtmr) refers to tcp_out.o(.text.tcp_keepalive) for tcp_keepalive
    tcp.o(.text.tcp_slowtmr) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    tcp.o(.text.tcp_slowtmr) refers to memp.o(.text.memp_free) for memp_free
    tcp.o(.text.tcp_slowtmr) refers to tcp.o(.text.tcp_pcb_purge) for tcp_pcb_purge
    tcp.o(.text.tcp_slowtmr) refers to tcp_out.o(.text.tcp_rst) for tcp_rst
    tcp.o(.text.tcp_slowtmr) refers to tcp.o(.bss.tcp_active_pcbs_changed) for tcp_active_pcbs_changed
    tcp.o(.text.tcp_slowtmr) refers to tcp_out.o(.text.tcp_rexmit_rto_prepare) for tcp_rexmit_rto_prepare
    tcp.o(.text.tcp_slowtmr) refers to tcp.o(.rodata.tcp_backoff) for tcp_backoff
    tcp.o(.text.tcp_slowtmr) refers to tcp_out.o(.text.tcp_rexmit_rto_commit) for tcp_rexmit_rto_commit
    tcp.o(.text.tcp_slowtmr) refers to tcp.o(.rodata.tcp_persist_backoff) for tcp_persist_backoff
    tcp.o(.text.tcp_slowtmr) refers to tcp_out.o(.text.tcp_output) for tcp_output
    tcp.o(.text.tcp_slowtmr) refers to tcp_out.o(.text.tcp_split_unsent_seg) for tcp_split_unsent_seg
    tcp.o(.text.tcp_slowtmr) refers to tcp_out.o(.text.tcp_zero_window_probe) for tcp_zero_window_probe
    tcp.o(.text.tcp_slowtmr) refers to tcp.o(.bss.tcp_tw_pcbs) for tcp_tw_pcbs
    tcp.o(.ARM.exidx.text.tcp_slowtmr) refers to tcp.o(.text.tcp_slowtmr) for [Anonymous Symbol]
    tcp.o(.text.tcp_close) refers to tcp.o(.text.tcp_close_shutdown) for tcp_close_shutdown
    tcp.o(.text.tcp_close) refers to tcp.o(.rodata.str1.1) for .L.str
    tcp.o(.text.tcp_close) refers to printf8.o(i.__0printf$8) for __2printf
    tcp.o(.ARM.exidx.text.tcp_close) refers to tcp.o(.text.tcp_close) for [Anonymous Symbol]
    tcp.o(.text.tcp_close_shutdown) refers to tcp.o(.rodata.tcp_pcb_lists) for tcp_pcb_lists
    tcp.o(.text.tcp_close_shutdown) refers to tcp.o(.rodata.str1.1) for .L.str
    tcp.o(.text.tcp_close_shutdown) refers to printf8.o(i.__0printf$8) for __2printf
    tcp.o(.text.tcp_close_shutdown) refers to tcp_out.o(.text.tcp_rst) for tcp_rst
    tcp.o(.text.tcp_close_shutdown) refers to tcp.o(.text.tcp_pcb_purge) for tcp_pcb_purge
    tcp.o(.text.tcp_close_shutdown) refers to tcp.o(.bss.tcp_active_pcbs) for tcp_active_pcbs
    tcp.o(.text.tcp_close_shutdown) refers to tcp_in.o(.bss.tcp_input_pcb) for tcp_input_pcb
    tcp.o(.text.tcp_close_shutdown) refers to tcp.o(.bss.tcp_active_pcbs_changed) for tcp_active_pcbs_changed
    tcp.o(.text.tcp_close_shutdown) refers to tcp.o(.text.tcp_pcb_remove) for tcp_pcb_remove
    tcp.o(.text.tcp_close_shutdown) refers to tcp.o(.bss.tcp_bound_pcbs) for tcp_bound_pcbs
    tcp.o(.text.tcp_close_shutdown) refers to tcp.o(.text.tcp_close_shutdown_fin) for tcp_close_shutdown_fin
    tcp.o(.text.tcp_close_shutdown) refers to tcp.o(.bss.tcp_listen_pcbs) for tcp_listen_pcbs
    tcp.o(.text.tcp_close_shutdown) refers to memp.o(.text.memp_free) for memp_free
    tcp.o(.text.tcp_close_shutdown) refers to tcp_in.o(.text.tcp_trigger_input_pcb_close) for tcp_trigger_input_pcb_close
    tcp.o(.ARM.exidx.text.tcp_close_shutdown) refers to tcp.o(.text.tcp_close_shutdown) for [Anonymous Symbol]
    tcp.o(.text.tcp_shutdown) refers to tcp.o(.text.tcp_close_shutdown) for tcp_close_shutdown
    tcp.o(.text.tcp_shutdown) refers to tcp.o(.rodata.str1.1) for .L.str
    tcp.o(.text.tcp_shutdown) refers to printf8.o(i.__0printf$8) for __2printf
    tcp.o(.text.tcp_shutdown) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    tcp.o(.ARM.exidx.text.tcp_shutdown) refers to tcp.o(.text.tcp_shutdown) for [Anonymous Symbol]
    tcp.o(.text.tcp_abandon) refers to tcp.o(.rodata.str1.1) for .L.str
    tcp.o(.text.tcp_abandon) refers to printf8.o(i.__0printf$8) for __2printf
    tcp.o(.text.tcp_abandon) refers to tcp.o(.bss.tcp_tw_pcbs) for tcp_tw_pcbs
    tcp.o(.text.tcp_abandon) refers to tcp.o(.text.tcp_pcb_remove) for tcp_pcb_remove
    tcp.o(.text.tcp_abandon) refers to memp.o(.text.memp_free) for memp_free
    tcp.o(.text.tcp_abandon) refers to tcp.o(.bss.tcp_active_pcbs) for tcp_active_pcbs
    tcp.o(.text.tcp_abandon) refers to tcp.o(.bss.tcp_active_pcbs_changed) for tcp_active_pcbs_changed
    tcp.o(.text.tcp_abandon) refers to tcp.o(.bss.tcp_bound_pcbs) for tcp_bound_pcbs
    tcp.o(.text.tcp_abandon) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    tcp.o(.text.tcp_abandon) refers to tcp_out.o(.text.tcp_rst) for tcp_rst
    tcp.o(.ARM.exidx.text.tcp_abandon) refers to tcp.o(.text.tcp_abandon) for [Anonymous Symbol]
    tcp.o(.text.tcp_pcb_remove) refers to tcp.o(.text.tcp_pcb_purge) for tcp_pcb_purge
    tcp.o(.text.tcp_pcb_remove) refers to tcp.o(.rodata.str1.1) for .L.str
    tcp.o(.text.tcp_pcb_remove) refers to printf8.o(i.__0printf$8) for __2printf
    tcp.o(.text.tcp_pcb_remove) refers to tcp_out.o(.text.tcp_output) for tcp_output
    tcp.o(.ARM.exidx.text.tcp_pcb_remove) refers to tcp.o(.text.tcp_pcb_remove) for [Anonymous Symbol]
    tcp.o(.text.tcp_segs_free) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    tcp.o(.text.tcp_segs_free) refers to memp.o(.text.memp_free) for memp_free
    tcp.o(.ARM.exidx.text.tcp_segs_free) refers to tcp.o(.text.tcp_segs_free) for [Anonymous Symbol]
    tcp.o(.text.tcp_abort) refers to tcp.o(.text.tcp_abandon) for tcp_abandon
    tcp.o(.ARM.exidx.text.tcp_abort) refers to tcp.o(.text.tcp_abort) for [Anonymous Symbol]
    tcp.o(.text.tcp_bind) refers to ip4_addr.o(.rodata.ip_addr_any) for ip_addr_any
    tcp.o(.text.tcp_bind) refers to tcp.o(.rodata.str1.1) for .L.str
    tcp.o(.text.tcp_bind) refers to printf8.o(i.__0printf$8) for __2printf
    tcp.o(.text.tcp_bind) refers to tcp.o(.rodata.tcp_pcb_lists) for tcp_pcb_lists
    tcp.o(.text.tcp_bind) refers to tcp.o(.data.tcp_port) for tcp_port
    tcp.o(.text.tcp_bind) refers to tcp.o(.bss.tcp_bound_pcbs) for tcp_bound_pcbs
    tcp.o(.text.tcp_bind) refers to timeouts.o(.text.tcp_timer_needed) for tcp_timer_needed
    tcp.o(.ARM.exidx.text.tcp_bind) refers to tcp.o(.text.tcp_bind) for [Anonymous Symbol]
    tcp.o(.ARM.exidx.text.tcp_bind_netif) refers to tcp.o(.text.tcp_bind_netif) for [Anonymous Symbol]
    tcp.o(.text.tcp_listen_with_backlog) refers to tcp.o(.text.tcp_listen_with_backlog_and_err) for tcp_listen_with_backlog_and_err
    tcp.o(.ARM.exidx.text.tcp_listen_with_backlog) refers to tcp.o(.text.tcp_listen_with_backlog) for [Anonymous Symbol]
    tcp.o(.text.tcp_listen_with_backlog_and_err) refers to tcp.o(.rodata.str1.1) for .L.str
    tcp.o(.text.tcp_listen_with_backlog_and_err) refers to printf8.o(i.__0printf$8) for __2printf
    tcp.o(.text.tcp_listen_with_backlog_and_err) refers to tcp.o(.bss.tcp_listen_pcbs) for tcp_listen_pcbs
    tcp.o(.text.tcp_listen_with_backlog_and_err) refers to memp.o(.text.memp_malloc) for memp_malloc
    tcp.o(.text.tcp_listen_with_backlog_and_err) refers to tcp.o(.bss.tcp_bound_pcbs) for tcp_bound_pcbs
    tcp.o(.text.tcp_listen_with_backlog_and_err) refers to memp.o(.text.memp_free) for memp_free
    tcp.o(.text.tcp_listen_with_backlog_and_err) refers to tcp.o(.text.tcp_accept_null) for tcp_accept_null
    tcp.o(.text.tcp_listen_with_backlog_and_err) refers to timeouts.o(.text.tcp_timer_needed) for tcp_timer_needed
    tcp.o(.ARM.exidx.text.tcp_listen_with_backlog_and_err) refers to tcp.o(.text.tcp_listen_with_backlog_and_err) for [Anonymous Symbol]
    tcp.o(.text.tcp_accept_null) refers to tcp.o(.rodata.str1.1) for .L.str
    tcp.o(.text.tcp_accept_null) refers to printf8.o(i.__0printf$8) for __2printf
    tcp.o(.text.tcp_accept_null) refers to tcp.o(.text.tcp_abandon) for tcp_abandon
    tcp.o(.ARM.exidx.text.tcp_accept_null) refers to tcp.o(.text.tcp_accept_null) for [Anonymous Symbol]
    tcp.o(.text.tcp_update_rcv_ann_wnd) refers to tcp.o(.rodata.str1.1) for .L.str
    tcp.o(.text.tcp_update_rcv_ann_wnd) refers to printf8.o(i.__0printf$8) for __2printf
    tcp.o(.ARM.exidx.text.tcp_update_rcv_ann_wnd) refers to tcp.o(.text.tcp_update_rcv_ann_wnd) for [Anonymous Symbol]
    tcp.o(.text.tcp_recved) refers to tcp.o(.rodata.str1.1) for .L.str
    tcp.o(.text.tcp_recved) refers to printf8.o(i.__0printf$8) for __2printf
    tcp.o(.text.tcp_recved) refers to tcp_out.o(.text.tcp_output) for tcp_output
    tcp.o(.ARM.exidx.text.tcp_recved) refers to tcp.o(.text.tcp_recved) for [Anonymous Symbol]
    tcp.o(.text.tcp_connect) refers to tcp.o(.rodata.str1.1) for .L.str
    tcp.o(.text.tcp_connect) refers to printf8.o(i.__0printf$8) for __2printf
    tcp.o(.text.tcp_connect) refers to netif.o(.text.netif_get_by_index) for netif_get_by_index
    tcp.o(.text.tcp_connect) refers to ip4.o(.text.ip4_route) for ip4_route
    tcp.o(.text.tcp_connect) refers to tcp.o(.rodata.tcp_pcb_lists) for tcp_pcb_lists
    tcp.o(.text.tcp_connect) refers to tcp.o(.data.tcp_port) for tcp_port
    tcp.o(.text.tcp_connect) refers to tcp.o(.bss.tcp_ticks) for tcp_ticks
    tcp.o(.text.tcp_connect) refers to tcp.o(.data.tcp_next_iss.iss) for tcp_next_iss.iss
    tcp.o(.text.tcp_connect) refers to tcp_out.o(.text.tcp_enqueue_flags) for tcp_enqueue_flags
    tcp.o(.text.tcp_connect) refers to tcp.o(.bss.tcp_bound_pcbs) for tcp_bound_pcbs
    tcp.o(.text.tcp_connect) refers to tcp.o(.bss.tcp_active_pcbs) for tcp_active_pcbs
    tcp.o(.text.tcp_connect) refers to timeouts.o(.text.tcp_timer_needed) for tcp_timer_needed
    tcp.o(.text.tcp_connect) refers to tcp.o(.bss.tcp_active_pcbs_changed) for tcp_active_pcbs_changed
    tcp.o(.text.tcp_connect) refers to tcp_out.o(.text.tcp_output) for tcp_output
    tcp.o(.ARM.exidx.text.tcp_connect) refers to tcp.o(.text.tcp_connect) for [Anonymous Symbol]
    tcp.o(.text.tcp_next_iss) refers to tcp.o(.rodata.str1.1) for .L.str
    tcp.o(.text.tcp_next_iss) refers to printf8.o(i.__0printf$8) for __2printf
    tcp.o(.text.tcp_next_iss) refers to tcp.o(.bss.tcp_ticks) for tcp_ticks
    tcp.o(.text.tcp_next_iss) refers to tcp.o(.data.tcp_next_iss.iss) for tcp_next_iss.iss
    tcp.o(.ARM.exidx.text.tcp_next_iss) refers to tcp.o(.text.tcp_next_iss) for [Anonymous Symbol]
    tcp.o(.text.tcp_eff_send_mss_netif) refers to tcp.o(.rodata.str1.1) for .L.str
    tcp.o(.text.tcp_eff_send_mss_netif) refers to printf8.o(i.__0printf$8) for __2printf
    tcp.o(.ARM.exidx.text.tcp_eff_send_mss_netif) refers to tcp.o(.text.tcp_eff_send_mss_netif) for [Anonymous Symbol]
    tcp.o(.text.tcp_free_ooseq) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    tcp.o(.text.tcp_free_ooseq) refers to memp.o(.text.memp_free) for memp_free
    tcp.o(.ARM.exidx.text.tcp_free_ooseq) refers to tcp.o(.text.tcp_free_ooseq) for [Anonymous Symbol]
    tcp.o(.text.tcp_pcb_purge) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    tcp.o(.text.tcp_pcb_purge) refers to memp.o(.text.memp_free) for memp_free
    tcp.o(.text.tcp_pcb_purge) refers to tcp.o(.rodata.str1.1) for .L.str
    tcp.o(.text.tcp_pcb_purge) refers to printf8.o(i.__0printf$8) for __2printf
    tcp.o(.ARM.exidx.text.tcp_pcb_purge) refers to tcp.o(.text.tcp_pcb_purge) for [Anonymous Symbol]
    tcp.o(.text.tcp_close_shutdown_fin) refers to tcp_out.o(.text.tcp_send_fin) for tcp_send_fin
    tcp.o(.text.tcp_close_shutdown_fin) refers to tcp_out.o(.text.tcp_output) for tcp_output
    tcp.o(.ARM.exidx.text.tcp_close_shutdown_fin) refers to tcp.o(.text.tcp_close_shutdown_fin) for [Anonymous Symbol]
    tcp.o(.text.tcp_process_refused_data) refers to tcp.o(.rodata.str1.1) for .L.str
    tcp.o(.text.tcp_process_refused_data) refers to printf8.o(i.__0printf$8) for __2printf
    tcp.o(.text.tcp_process_refused_data) refers to tcp.o(.text.tcp_recved) for tcp_recved
    tcp.o(.text.tcp_process_refused_data) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    tcp.o(.text.tcp_process_refused_data) refers to tcp.o(.text.tcp_close_shutdown) for tcp_close_shutdown
    tcp.o(.ARM.exidx.text.tcp_process_refused_data) refers to tcp.o(.text.tcp_process_refused_data) for [Anonymous Symbol]
    tcp.o(.text.tcp_txnow) refers to tcp.o(.bss.tcp_active_pcbs) for tcp_active_pcbs
    tcp.o(.text.tcp_txnow) refers to tcp_out.o(.text.tcp_output) for tcp_output
    tcp.o(.ARM.exidx.text.tcp_txnow) refers to tcp.o(.text.tcp_txnow) for [Anonymous Symbol]
    tcp.o(.text.tcp_recv_null) refers to tcp.o(.text.tcp_recved) for tcp_recved
    tcp.o(.text.tcp_recv_null) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    tcp.o(.text.tcp_recv_null) refers to tcp.o(.rodata.str1.1) for .L.str
    tcp.o(.text.tcp_recv_null) refers to printf8.o(i.__0printf$8) for __2printf
    tcp.o(.text.tcp_recv_null) refers to tcp.o(.text.tcp_close_shutdown) for tcp_close_shutdown
    tcp.o(.ARM.exidx.text.tcp_recv_null) refers to tcp.o(.text.tcp_recv_null) for [Anonymous Symbol]
    tcp.o(.text.tcp_seg_free) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    tcp.o(.text.tcp_seg_free) refers to memp.o(.text.memp_free) for memp_free
    tcp.o(.ARM.exidx.text.tcp_seg_free) refers to tcp.o(.text.tcp_seg_free) for [Anonymous Symbol]
    tcp.o(.text.tcp_setprio) refers to tcp.o(.rodata.str1.1) for .L.str
    tcp.o(.text.tcp_setprio) refers to printf8.o(i.__0printf$8) for __2printf
    tcp.o(.ARM.exidx.text.tcp_setprio) refers to tcp.o(.text.tcp_setprio) for [Anonymous Symbol]
    tcp.o(.text.tcp_seg_copy) refers to tcp.o(.rodata.str1.1) for .L.str
    tcp.o(.text.tcp_seg_copy) refers to printf8.o(i.__0printf$8) for __2printf
    tcp.o(.text.tcp_seg_copy) refers to memp.o(.text.memp_malloc) for memp_malloc
    tcp.o(.text.tcp_seg_copy) refers to pbuf.o(.text.pbuf_ref) for pbuf_ref
    tcp.o(.ARM.exidx.text.tcp_seg_copy) refers to tcp.o(.text.tcp_seg_copy) for [Anonymous Symbol]
    tcp.o(.text.tcp_alloc) refers to memp.o(.text.memp_malloc) for memp_malloc
    tcp.o(.text.tcp_alloc) refers to tcp.o(.bss.tcp_active_pcbs) for tcp_active_pcbs
    tcp.o(.text.tcp_alloc) refers to tcp.o(.bss.tcp_tw_pcbs) for tcp_tw_pcbs
    tcp.o(.text.tcp_alloc) refers to tcp.o(.bss.tcp_ticks) for tcp_ticks
    tcp.o(.text.tcp_alloc) refers to tcp.o(.text.tcp_close_shutdown_fin) for tcp_close_shutdown_fin
    tcp.o(.text.tcp_alloc) refers to tcp.o(.text.tcp_abandon) for tcp_abandon
    tcp.o(.text.tcp_alloc) refers to tcp.o(.text.tcp_kill_prio) for tcp_kill_prio
    tcp.o(.text.tcp_alloc) refers to memseta.o(.text) for __aeabi_memclr4
    tcp.o(.text.tcp_alloc) refers to tcp.o(.bss.tcp_timer_ctr) for tcp_timer_ctr
    tcp.o(.text.tcp_alloc) refers to tcp.o(.text.tcp_recv_null) for tcp_recv_null
    tcp.o(.ARM.exidx.text.tcp_alloc) refers to tcp.o(.text.tcp_alloc) for [Anonymous Symbol]
    tcp.o(.text.tcp_kill_prio) refers to tcp.o(.bss.tcp_active_pcbs) for tcp_active_pcbs
    tcp.o(.text.tcp_kill_prio) refers to tcp.o(.bss.tcp_ticks) for tcp_ticks
    tcp.o(.text.tcp_kill_prio) refers to tcp.o(.text.tcp_abandon) for tcp_abandon
    tcp.o(.ARM.exidx.text.tcp_kill_prio) refers to tcp.o(.text.tcp_kill_prio) for [Anonymous Symbol]
    tcp.o(.text.tcp_new) refers to tcp.o(.text.tcp_alloc) for tcp_alloc
    tcp.o(.ARM.exidx.text.tcp_new) refers to tcp.o(.text.tcp_new) for [Anonymous Symbol]
    tcp.o(.text.tcp_new_ip_type) refers to tcp.o(.text.tcp_alloc) for tcp_alloc
    tcp.o(.ARM.exidx.text.tcp_new_ip_type) refers to tcp.o(.text.tcp_new_ip_type) for [Anonymous Symbol]
    tcp.o(.ARM.exidx.text.tcp_arg) refers to tcp.o(.text.tcp_arg) for [Anonymous Symbol]
    tcp.o(.text.tcp_recv) refers to tcp.o(.rodata.str1.1) for .L.str
    tcp.o(.text.tcp_recv) refers to printf8.o(i.__0printf$8) for __2printf
    tcp.o(.ARM.exidx.text.tcp_recv) refers to tcp.o(.text.tcp_recv) for [Anonymous Symbol]
    tcp.o(.text.tcp_sent) refers to tcp.o(.rodata.str1.1) for .L.str
    tcp.o(.text.tcp_sent) refers to printf8.o(i.__0printf$8) for __2printf
    tcp.o(.ARM.exidx.text.tcp_sent) refers to tcp.o(.text.tcp_sent) for [Anonymous Symbol]
    tcp.o(.text.tcp_err) refers to tcp.o(.rodata.str1.1) for .L.str
    tcp.o(.text.tcp_err) refers to printf8.o(i.__0printf$8) for __2printf
    tcp.o(.ARM.exidx.text.tcp_err) refers to tcp.o(.text.tcp_err) for [Anonymous Symbol]
    tcp.o(.ARM.exidx.text.tcp_accept) refers to tcp.o(.text.tcp_accept) for [Anonymous Symbol]
    tcp.o(.text.tcp_poll) refers to tcp.o(.rodata.str1.1) for .L.str
    tcp.o(.text.tcp_poll) refers to printf8.o(i.__0printf$8) for __2printf
    tcp.o(.ARM.exidx.text.tcp_poll) refers to tcp.o(.text.tcp_poll) for [Anonymous Symbol]
    tcp.o(.text.tcp_netif_ip_addr_changed) refers to tcp.o(.bss.tcp_active_pcbs) for tcp_active_pcbs
    tcp.o(.text.tcp_netif_ip_addr_changed) refers to tcp.o(.text.tcp_abandon) for tcp_abandon
    tcp.o(.text.tcp_netif_ip_addr_changed) refers to tcp.o(.bss.tcp_bound_pcbs) for tcp_bound_pcbs
    tcp.o(.text.tcp_netif_ip_addr_changed) refers to tcp.o(.bss.tcp_listen_pcbs) for tcp_listen_pcbs
    tcp.o(.ARM.exidx.text.tcp_netif_ip_addr_changed) refers to tcp.o(.text.tcp_netif_ip_addr_changed) for [Anonymous Symbol]
    tcp.o(.text.tcp_debug_state_str) refers to tcp.o(.rodata.str1.1) for [Anonymous Symbol]
    tcp.o(.ARM.exidx.text.tcp_debug_state_str) refers to tcp.o(.text.tcp_debug_state_str) for [Anonymous Symbol]
    tcp.o(.ARM.exidx.text.tcp_tcp_get_tcp_addrinfo) refers to tcp.o(.text.tcp_tcp_get_tcp_addrinfo) for [Anonymous Symbol]
    tcp.o(.rodata.tcp_pcb_lists) refers to tcp.o(.bss.tcp_listen_pcbs) for tcp_listen_pcbs
    tcp.o(.rodata.tcp_pcb_lists) refers to tcp.o(.bss.tcp_bound_pcbs) for tcp_bound_pcbs
    tcp.o(.rodata.tcp_pcb_lists) refers to tcp.o(.bss.tcp_active_pcbs) for tcp_active_pcbs
    tcp.o(.rodata.tcp_pcb_lists) refers to tcp.o(.bss.tcp_tw_pcbs) for tcp_tw_pcbs
    tcp_in.o(.text.tcp_input) refers to tcp_in.o(.rodata.str1.1) for .L.str
    tcp_in.o(.text.tcp_input) refers to printf8.o(i.__0printf$8) for __2printf
    tcp_in.o(.text.tcp_input) refers to tcp_in.o(.bss.tcphdr) for tcphdr
    tcp_in.o(.text.tcp_input) refers to ip.o(.bss.ip_data) for ip_data
    tcp_in.o(.text.tcp_input) refers to ip4_addr.o(.text.ip4_addr_isbroadcast_u32) for ip4_addr_isbroadcast_u32
    tcp_in.o(.text.tcp_input) refers to inet_chksum.o(.text.ip_chksum_pseudo) for ip_chksum_pseudo
    tcp_in.o(.text.tcp_input) refers to def.o(.text.lwip_htons) for lwip_htons
    tcp_in.o(.text.tcp_input) refers to tcp_in.o(.bss.tcphdr_optlen) for tcphdr_optlen
    tcp_in.o(.text.tcp_input) refers to tcp_in.o(.bss.tcphdr_opt2) for tcphdr_opt2
    tcp_in.o(.text.tcp_input) refers to tcp_in.o(.bss.tcphdr_opt1len) for tcphdr_opt1len
    tcp_in.o(.text.tcp_input) refers to pbuf.o(.text.pbuf_remove_header) for pbuf_remove_header
    tcp_in.o(.text.tcp_input) refers to def.o(.text.lwip_htonl) for lwip_htonl
    tcp_in.o(.text.tcp_input) refers to tcp_in.o(.bss.seqno) for seqno
    tcp_in.o(.text.tcp_input) refers to tcp_in.o(.bss.ackno) for ackno
    tcp_in.o(.text.tcp_input) refers to tcp_in.o(.bss.flags) for flags
    tcp_in.o(.text.tcp_input) refers to tcp_in.o(.bss.tcplen) for tcplen
    tcp_in.o(.text.tcp_input) refers to tcp.o(.bss.tcp_active_pcbs) for tcp_active_pcbs
    tcp_in.o(.text.tcp_input) refers to tcp.o(.bss.tcp_tw_pcbs) for tcp_tw_pcbs
    tcp_in.o(.text.tcp_input) refers to tcp_in.o(.text.tcp_timewait_input) for tcp_timewait_input
    tcp_in.o(.text.tcp_input) refers to tcp.o(.bss.tcp_listen_pcbs) for tcp_listen_pcbs
    tcp_in.o(.text.tcp_input) refers to tcp_in.o(.text.tcp_listen_input) for tcp_listen_input
    tcp_in.o(.text.tcp_input) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    tcp_in.o(.text.tcp_input) refers to tcp_in.o(.bss.inseg) for inseg
    tcp_in.o(.text.tcp_input) refers to tcp_in.o(.bss.recv_data) for recv_data
    tcp_in.o(.text.tcp_input) refers to tcp_in.o(.bss.recv_flags) for recv_flags
    tcp_in.o(.text.tcp_input) refers to tcp_in.o(.bss.recv_acked) for recv_acked
    tcp_in.o(.text.tcp_input) refers to tcp_in.o(.bss.tcp_input_pcb) for tcp_input_pcb
    tcp_in.o(.text.tcp_input) refers to tcp.o(.text.tcp_process_refused_data) for tcp_process_refused_data
    tcp_in.o(.text.tcp_input) refers to tcp_out.o(.text.tcp_send_empty_ack) for tcp_send_empty_ack
    tcp_in.o(.text.tcp_input) refers to tcp_out.o(.text.tcp_rst) for tcp_rst
    tcp_in.o(.text.tcp_input) refers to tcp_in.o(.text.tcp_process) for tcp_process
    tcp_in.o(.text.tcp_input) refers to tcp.o(.text.tcp_pcb_remove) for tcp_pcb_remove
    tcp_in.o(.text.tcp_input) refers to tcp.o(.text.tcp_free) for tcp_free
    tcp_in.o(.text.tcp_input) refers to tcp_in.o(.text.tcp_input_delayed_close) for tcp_input_delayed_close
    tcp_in.o(.text.tcp_input) refers to tcp.o(.text.tcp_abort) for tcp_abort
    tcp_in.o(.text.tcp_input) refers to tcp.o(.text.tcp_recv_null) for tcp_recv_null
    tcp_in.o(.text.tcp_input) refers to tcp_out.o(.text.tcp_output) for tcp_output
    tcp_in.o(.ARM.exidx.text.tcp_input) refers to tcp_in.o(.text.tcp_input) for [Anonymous Symbol]
    tcp_in.o(.text.tcp_timewait_input) refers to tcp_in.o(.bss.flags) for flags
    tcp_in.o(.text.tcp_timewait_input) refers to tcp.o(.bss.tcp_ticks) for tcp_ticks
    tcp_in.o(.text.tcp_timewait_input) refers to tcp_in.o(.bss.seqno) for seqno
    tcp_in.o(.text.tcp_timewait_input) refers to tcp_in.o(.bss.tcplen) for tcplen
    tcp_in.o(.text.tcp_timewait_input) refers to tcp_out.o(.text.tcp_output) for tcp_output
    tcp_in.o(.text.tcp_timewait_input) refers to tcp_in.o(.bss.tcphdr) for tcphdr
    tcp_in.o(.text.tcp_timewait_input) refers to tcp_in.o(.bss.ackno) for ackno
    tcp_in.o(.text.tcp_timewait_input) refers to ip.o(.bss.ip_data) for ip_data
    tcp_in.o(.text.tcp_timewait_input) refers to tcp_out.o(.text.tcp_rst) for tcp_rst
    tcp_in.o(.ARM.exidx.text.tcp_timewait_input) refers to tcp_in.o(.text.tcp_timewait_input) for [Anonymous Symbol]
    tcp_in.o(.text.tcp_listen_input) refers to tcp_in.o(.bss.flags) for flags
    tcp_in.o(.text.tcp_listen_input) refers to tcp_in.o(.bss.tcphdr) for tcphdr
    tcp_in.o(.text.tcp_listen_input) refers to tcp_in.o(.bss.seqno) for seqno
    tcp_in.o(.text.tcp_listen_input) refers to tcp_in.o(.bss.tcplen) for tcplen
    tcp_in.o(.text.tcp_listen_input) refers to tcp_in.o(.bss.ackno) for ackno
    tcp_in.o(.text.tcp_listen_input) refers to ip.o(.bss.ip_data) for ip_data
    tcp_in.o(.text.tcp_listen_input) refers to tcp_out.o(.text.tcp_rst) for tcp_rst
    tcp_in.o(.text.tcp_listen_input) refers to tcp.o(.text.tcp_alloc) for tcp_alloc
    tcp_in.o(.text.tcp_listen_input) refers to tcp.o(.text.tcp_next_iss) for tcp_next_iss
    tcp_in.o(.text.tcp_listen_input) refers to tcp.o(.bss.tcp_active_pcbs) for tcp_active_pcbs
    tcp_in.o(.text.tcp_listen_input) refers to timeouts.o(.text.tcp_timer_needed) for tcp_timer_needed
    tcp_in.o(.text.tcp_listen_input) refers to tcp.o(.bss.tcp_active_pcbs_changed) for tcp_active_pcbs_changed
    tcp_in.o(.text.tcp_listen_input) refers to tcp_in.o(.text.tcp_parseopt) for tcp_parseopt
    tcp_in.o(.text.tcp_listen_input) refers to ip4.o(.text.ip4_route) for ip4_route
    tcp_in.o(.text.tcp_listen_input) refers to tcp.o(.text.tcp_eff_send_mss_netif) for tcp_eff_send_mss_netif
    tcp_in.o(.text.tcp_listen_input) refers to tcp_out.o(.text.tcp_enqueue_flags) for tcp_enqueue_flags
    tcp_in.o(.text.tcp_listen_input) refers to tcp.o(.text.tcp_abandon) for tcp_abandon
    tcp_in.o(.text.tcp_listen_input) refers to tcp_out.o(.text.tcp_output) for tcp_output
    tcp_in.o(.ARM.exidx.text.tcp_listen_input) refers to tcp_in.o(.text.tcp_listen_input) for [Anonymous Symbol]
    tcp_in.o(.text.tcp_process) refers to tcp_in.o(.bss.flags) for flags
    tcp_in.o(.text.tcp_process) refers to tcp.o(.bss.tcp_ticks) for tcp_ticks
    tcp_in.o(.text.tcp_process) refers to tcp_in.o(.text.tcp_parseopt) for tcp_parseopt
    tcp_in.o(.text.tcp_process) refers to tcp_in.o(.text.tcp_receive) for tcp_receive
    tcp_in.o(.text.tcp_process) refers to tcp_in.o(.bss.recv_flags) for recv_flags
    tcp_in.o(.text.tcp_process) refers to tcp_in.o(.bss.ackno) for ackno
    tcp_in.o(.text.tcp_process) refers to tcp_in.o(.bss.seqno) for seqno
    tcp_in.o(.text.tcp_process) refers to tcp_in.o(.rodata.str1.1) for .L.str
    tcp_in.o(.text.tcp_process) refers to printf8.o(i.__0printf$8) for __2printf
    tcp_in.o(.text.tcp_process) refers to tcp_in.o(.bss.tcphdr) for tcphdr
    tcp_in.o(.text.tcp_process) refers to ip4.o(.text.ip4_route) for ip4_route
    tcp_in.o(.text.tcp_process) refers to tcp.o(.text.tcp_eff_send_mss_netif) for tcp_eff_send_mss_netif
    tcp_in.o(.text.tcp_process) refers to tcp.o(.text.tcp_seg_free) for tcp_seg_free
    tcp_in.o(.text.tcp_process) refers to tcp_out.o(.text.tcp_rexmit) for tcp_rexmit
    tcp_in.o(.text.tcp_process) refers to tcp.o(.text.tcp_pcb_purge) for tcp_pcb_purge
    tcp_in.o(.text.tcp_process) refers to tcp.o(.bss.tcp_active_pcbs) for tcp_active_pcbs
    tcp_in.o(.text.tcp_process) refers to tcp.o(.bss.tcp_active_pcbs_changed) for tcp_active_pcbs_changed
    tcp_in.o(.text.tcp_process) refers to tcp.o(.bss.tcp_tw_pcbs) for tcp_tw_pcbs
    tcp_in.o(.text.tcp_process) refers to timeouts.o(.text.tcp_timer_needed) for tcp_timer_needed
    tcp_in.o(.text.tcp_process) refers to tcp_in.o(.bss.tcplen) for tcplen
    tcp_in.o(.text.tcp_process) refers to ip.o(.bss.ip_data) for ip_data
    tcp_in.o(.text.tcp_process) refers to tcp_out.o(.text.tcp_rst) for tcp_rst
    tcp_in.o(.text.tcp_process) refers to tcp_out.o(.text.tcp_rexmit_rto) for tcp_rexmit_rto
    tcp_in.o(.text.tcp_process) refers to tcp_in.o(.bss.recv_acked) for recv_acked
    tcp_in.o(.text.tcp_process) refers to tcp.o(.text.tcp_abort) for tcp_abort
    tcp_in.o(.ARM.exidx.text.tcp_process) refers to tcp_in.o(.text.tcp_process) for [Anonymous Symbol]
    tcp_in.o(.text.tcp_input_delayed_close) refers to tcp_in.o(.bss.recv_flags) for recv_flags
    tcp_in.o(.text.tcp_input_delayed_close) refers to tcp.o(.bss.tcp_active_pcbs) for tcp_active_pcbs
    tcp_in.o(.text.tcp_input_delayed_close) refers to tcp.o(.text.tcp_pcb_remove) for tcp_pcb_remove
    tcp_in.o(.text.tcp_input_delayed_close) refers to tcp.o(.text.tcp_free) for tcp_free
    tcp_in.o(.ARM.exidx.text.tcp_input_delayed_close) refers to tcp_in.o(.text.tcp_input_delayed_close) for [Anonymous Symbol]
    tcp_in.o(.text.tcp_trigger_input_pcb_close) refers to tcp_in.o(.bss.recv_flags) for recv_flags
    tcp_in.o(.ARM.exidx.text.tcp_trigger_input_pcb_close) refers to tcp_in.o(.text.tcp_trigger_input_pcb_close) for [Anonymous Symbol]
    tcp_in.o(.text.tcp_parseopt) refers to tcp_in.o(.bss.tcphdr_optlen) for tcphdr_optlen
    tcp_in.o(.text.tcp_parseopt) refers to tcp_in.o(.bss.tcphdr) for tcphdr
    tcp_in.o(.text.tcp_parseopt) refers to tcp_in.o(.bss.tcphdr_opt2) for tcphdr_opt2
    tcp_in.o(.text.tcp_parseopt) refers to tcp_in.o(.bss.tcphdr_opt1len) for tcphdr_opt1len
    tcp_in.o(.ARM.exidx.text.tcp_parseopt) refers to tcp_in.o(.text.tcp_parseopt) for [Anonymous Symbol]
    tcp_in.o(.text.tcp_receive) refers to tcp_in.o(.rodata.str1.1) for .L.str
    tcp_in.o(.text.tcp_receive) refers to printf8.o(i.__0printf$8) for __2printf
    tcp_in.o(.text.tcp_receive) refers to tcp_in.o(.bss.flags) for flags
    tcp_in.o(.text.tcp_receive) refers to tcp_in.o(.bss.tcplen) for tcplen
    tcp_in.o(.text.tcp_receive) refers to tcp_in.o(.bss.seqno) for seqno
    tcp_in.o(.text.tcp_receive) refers to tcp_in.o(.bss.ackno) for ackno
    tcp_in.o(.text.tcp_receive) refers to tcp_in.o(.bss.tcphdr) for tcphdr
    tcp_in.o(.text.tcp_receive) refers to tcp_out.o(.text.tcp_send_empty_ack) for tcp_send_empty_ack
    tcp_in.o(.text.tcp_receive) refers to tcp.o(.bss.tcp_ticks) for tcp_ticks
    tcp_in.o(.text.tcp_receive) refers to tcp_in.o(.bss.inseg) for inseg
    tcp_in.o(.text.tcp_receive) refers to pbuf.o(.text.pbuf_remove_header) for pbuf_remove_header
    tcp_in.o(.text.tcp_receive) refers to def.o(.text.lwip_htons) for lwip_htons
    tcp_in.o(.text.tcp_receive) refers to pbuf.o(.text.pbuf_realloc) for pbuf_realloc
    tcp_in.o(.text.tcp_receive) refers to tcp.o(.text.tcp_seg_free) for tcp_seg_free
    tcp_in.o(.text.tcp_receive) refers to tcp.o(.text.tcp_seg_copy) for tcp_seg_copy
    tcp_in.o(.text.tcp_receive) refers to tcp_out.o(.text.tcp_rexmit_fast) for tcp_rexmit_fast
    tcp_in.o(.text.tcp_receive) refers to tcp_in.o(.text.tcp_free_acked_segments) for tcp_free_acked_segments
    tcp_in.o(.text.tcp_receive) refers to tcp_in.o(.bss.recv_acked) for recv_acked
    tcp_in.o(.text.tcp_receive) refers to def.o(.text.lwip_htonl) for lwip_htonl
    tcp_in.o(.text.tcp_receive) refers to tcp.o(.text.tcp_update_rcv_ann_wnd) for tcp_update_rcv_ann_wnd
    tcp_in.o(.text.tcp_receive) refers to tcp_in.o(.bss.recv_data) for recv_data
    tcp_in.o(.text.tcp_receive) refers to tcp_in.o(.bss.recv_flags) for recv_flags
    tcp_in.o(.text.tcp_receive) refers to pbuf.o(.text.pbuf_cat) for pbuf_cat
    tcp_in.o(.text.tcp_receive) refers to tcp_in.o(.text.tcp_oos_insert_segment) for tcp_oos_insert_segment
    tcp_in.o(.ARM.exidx.text.tcp_receive) refers to tcp_in.o(.text.tcp_receive) for [Anonymous Symbol]
    tcp_in.o(.text.tcp_free_acked_segments) refers to tcp_in.o(.rodata.str1.1) for .L.str.2
    tcp_in.o(.text.tcp_free_acked_segments) refers to tcp_in.o(.bss.recv_acked) for recv_acked
    tcp_in.o(.text.tcp_free_acked_segments) refers to def.o(.text.lwip_htonl) for lwip_htonl
    tcp_in.o(.text.tcp_free_acked_segments) refers to def.o(.text.lwip_htons) for lwip_htons
    tcp_in.o(.text.tcp_free_acked_segments) refers to tcp_in.o(.bss.ackno) for ackno
    tcp_in.o(.text.tcp_free_acked_segments) refers to pbuf.o(.text.pbuf_clen) for pbuf_clen
    tcp_in.o(.text.tcp_free_acked_segments) refers to printf8.o(i.__0printf$8) for __2printf
    tcp_in.o(.text.tcp_free_acked_segments) refers to tcp.o(.text.tcp_seg_free) for tcp_seg_free
    tcp_in.o(.ARM.exidx.text.tcp_free_acked_segments) refers to tcp_in.o(.text.tcp_free_acked_segments) for [Anonymous Symbol]
    tcp_in.o(.text.tcp_oos_insert_segment) refers to def.o(.text.lwip_htons) for lwip_htons
    tcp_in.o(.text.tcp_oos_insert_segment) refers to tcp_in.o(.bss.seqno) for seqno
    tcp_in.o(.text.tcp_oos_insert_segment) refers to tcp.o(.text.tcp_seg_free) for tcp_seg_free
    tcp_in.o(.text.tcp_oos_insert_segment) refers to tcp.o(.text.tcp_segs_free) for tcp_segs_free
    tcp_in.o(.text.tcp_oos_insert_segment) refers to pbuf.o(.text.pbuf_realloc) for pbuf_realloc
    tcp_in.o(.ARM.exidx.text.tcp_oos_insert_segment) refers to tcp_in.o(.text.tcp_oos_insert_segment) for [Anonymous Symbol]
    tcp_out.o(.text.tcp_write) refers to tcp_out.o(.rodata.str1.1) for .L.str
    tcp_out.o(.text.tcp_write) refers to printf8.o(i.__0printf$8) for __2printf
    tcp_out.o(.text.tcp_write) refers to pbuf.o(.text.pbuf_alloc) for pbuf_alloc
    tcp_out.o(.text.tcp_write) refers to pbuf.o(.text.pbuf_clen) for pbuf_clen
    tcp_out.o(.text.tcp_write) refers to pbuf.o(.text.pbuf_cat) for pbuf_cat
    tcp_out.o(.text.tcp_write) refers to memmovea.o(.text) for __aeabi_memcpy
    tcp_out.o(.text.tcp_write) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    tcp_out.o(.text.tcp_write) refers to tcp_out.o(.text.tcp_create_segment) for tcp_create_segment
    tcp_out.o(.text.tcp_write) refers to tcp.o(.text.tcp_segs_free) for tcp_segs_free
    tcp_out.o(.text.tcp_write) refers to tcp_out.o(.text.tcp_pbuf_prealloc) for tcp_pbuf_prealloc
    tcp_out.o(.text.tcp_write) refers to def.o(.text.lwip_htons) for lwip_htons
    tcp_out.o(.ARM.exidx.text.tcp_write) refers to tcp_out.o(.text.tcp_write) for [Anonymous Symbol]
    tcp_out.o(.text.tcp_pbuf_prealloc) refers to tcp_out.o(.rodata.str1.1) for .L.str
    tcp_out.o(.text.tcp_pbuf_prealloc) refers to printf8.o(i.__0printf$8) for __2printf
    tcp_out.o(.text.tcp_pbuf_prealloc) refers to pbuf.o(.text.pbuf_alloc) for pbuf_alloc
    tcp_out.o(.ARM.exidx.text.tcp_pbuf_prealloc) refers to tcp_out.o(.text.tcp_pbuf_prealloc) for [Anonymous Symbol]
    tcp_out.o(.text.tcp_create_segment) refers to memp.o(.text.memp_malloc) for memp_malloc
    tcp_out.o(.text.tcp_create_segment) refers to tcp_out.o(.rodata.str1.1) for .L.str
    tcp_out.o(.text.tcp_create_segment) refers to printf8.o(i.__0printf$8) for __2printf
    tcp_out.o(.text.tcp_create_segment) refers to pbuf.o(.text.pbuf_add_header) for pbuf_add_header
    tcp_out.o(.text.tcp_create_segment) refers to tcp.o(.text.tcp_seg_free) for tcp_seg_free
    tcp_out.o(.text.tcp_create_segment) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    tcp_out.o(.text.tcp_create_segment) refers to def.o(.text.lwip_htons) for lwip_htons
    tcp_out.o(.text.tcp_create_segment) refers to def.o(.text.lwip_htonl) for lwip_htonl
    tcp_out.o(.ARM.exidx.text.tcp_create_segment) refers to tcp_out.o(.text.tcp_create_segment) for [Anonymous Symbol]
    tcp_out.o(.text.tcp_split_unsent_seg) refers to tcp_out.o(.rodata.str1.1) for .L.str
    tcp_out.o(.text.tcp_split_unsent_seg) refers to printf8.o(i.__0printf$8) for __2printf
    tcp_out.o(.text.tcp_split_unsent_seg) refers to pbuf.o(.text.pbuf_alloc) for pbuf_alloc
    tcp_out.o(.text.tcp_split_unsent_seg) refers to pbuf.o(.text.pbuf_copy_partial) for pbuf_copy_partial
    tcp_out.o(.text.tcp_split_unsent_seg) refers to def.o(.text.lwip_htons) for lwip_htons
    tcp_out.o(.text.tcp_split_unsent_seg) refers to def.o(.text.lwip_htonl) for lwip_htonl
    tcp_out.o(.text.tcp_split_unsent_seg) refers to tcp_out.o(.text.tcp_create_segment) for tcp_create_segment
    tcp_out.o(.text.tcp_split_unsent_seg) refers to pbuf.o(.text.pbuf_clen) for pbuf_clen
    tcp_out.o(.text.tcp_split_unsent_seg) refers to pbuf.o(.text.pbuf_realloc) for pbuf_realloc
    tcp_out.o(.text.tcp_split_unsent_seg) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    tcp_out.o(.ARM.exidx.text.tcp_split_unsent_seg) refers to tcp_out.o(.text.tcp_split_unsent_seg) for [Anonymous Symbol]
    tcp_out.o(.text.tcp_send_fin) refers to tcp_out.o(.rodata.str1.1) for .L.str
    tcp_out.o(.text.tcp_send_fin) refers to printf8.o(i.__0printf$8) for __2printf
    tcp_out.o(.text.tcp_send_fin) refers to def.o(.text.lwip_htons) for lwip_htons
    tcp_out.o(.text.tcp_send_fin) refers to tcp_out.o(.text.tcp_enqueue_flags) for tcp_enqueue_flags
    tcp_out.o(.ARM.exidx.text.tcp_send_fin) refers to tcp_out.o(.text.tcp_send_fin) for [Anonymous Symbol]
    tcp_out.o(.text.tcp_enqueue_flags) refers to pbuf.o(.text.pbuf_alloc) for pbuf_alloc
    tcp_out.o(.text.tcp_enqueue_flags) refers to tcp_out.o(.rodata.str1.1) for .L.str
    tcp_out.o(.text.tcp_enqueue_flags) refers to printf8.o(i.__0printf$8) for __2printf
    tcp_out.o(.text.tcp_enqueue_flags) refers to tcp_out.o(.text.tcp_create_segment) for tcp_create_segment
    tcp_out.o(.text.tcp_enqueue_flags) refers to pbuf.o(.text.pbuf_clen) for pbuf_clen
    tcp_out.o(.ARM.exidx.text.tcp_enqueue_flags) refers to tcp_out.o(.text.tcp_enqueue_flags) for [Anonymous Symbol]
    tcp_out.o(.text.tcp_output) refers to tcp_out.o(.rodata.str1.1) for .L.str
    tcp_out.o(.text.tcp_output) refers to printf8.o(i.__0printf$8) for __2printf
    tcp_out.o(.text.tcp_output) refers to tcp_in.o(.bss.tcp_input_pcb) for tcp_input_pcb
    tcp_out.o(.text.tcp_output) refers to netif.o(.text.netif_get_by_index) for netif_get_by_index
    tcp_out.o(.text.tcp_output) refers to ip4.o(.text.ip4_route) for ip4_route
    tcp_out.o(.text.tcp_output) refers to def.o(.text.lwip_htonl) for lwip_htonl
    tcp_out.o(.text.tcp_output) refers to tcp_out.o(.text.tcp_send_empty_ack) for tcp_send_empty_ack
    tcp_out.o(.text.tcp_output) refers to tcp.o(.text.tcp_seg_free) for tcp_seg_free
    tcp_out.o(.text.tcp_output) refers to def.o(.text.lwip_htons) for lwip_htons
    tcp_out.o(.text.tcp_output) refers to tcp.o(.text.tcp_eff_send_mss_netif) for tcp_eff_send_mss_netif
    tcp_out.o(.text.tcp_output) refers to tcp.o(.bss.tcp_ticks) for tcp_ticks
    tcp_out.o(.text.tcp_output) refers to inet_chksum.o(.text.ip_chksum_pseudo) for ip_chksum_pseudo
    tcp_out.o(.text.tcp_output) refers to ip4.o(.text.ip4_output_if) for ip4_output_if
    tcp_out.o(.ARM.exidx.text.tcp_output) refers to tcp_out.o(.text.tcp_output) for [Anonymous Symbol]
    tcp_out.o(.text.tcp_send_empty_ack) refers to tcp_out.o(.rodata.str1.1) for .L.str
    tcp_out.o(.text.tcp_send_empty_ack) refers to printf8.o(i.__0printf$8) for __2printf
    tcp_out.o(.text.tcp_send_empty_ack) refers to def.o(.text.lwip_htonl) for lwip_htonl
    tcp_out.o(.text.tcp_send_empty_ack) refers to tcp_out.o(.text.tcp_output_alloc_header_common) for tcp_output_alloc_header_common
    tcp_out.o(.text.tcp_send_empty_ack) refers to tcp_out.o(.text.tcp_output_control_segment) for tcp_output_control_segment
    tcp_out.o(.ARM.exidx.text.tcp_send_empty_ack) refers to tcp_out.o(.text.tcp_send_empty_ack) for [Anonymous Symbol]
    tcp_out.o(.text.tcp_rexmit_rto_prepare) refers to tcp_out.o(.rodata.str1.1) for .L.str
    tcp_out.o(.text.tcp_rexmit_rto_prepare) refers to printf8.o(i.__0printf$8) for __2printf
    tcp_out.o(.text.tcp_rexmit_rto_prepare) refers to def.o(.text.lwip_htonl) for lwip_htonl
    tcp_out.o(.text.tcp_rexmit_rto_prepare) refers to def.o(.text.lwip_htons) for lwip_htons
    tcp_out.o(.ARM.exidx.text.tcp_rexmit_rto_prepare) refers to tcp_out.o(.text.tcp_rexmit_rto_prepare) for [Anonymous Symbol]
    tcp_out.o(.text.tcp_rexmit_rto_commit) refers to tcp_out.o(.rodata.str1.1) for .L.str
    tcp_out.o(.text.tcp_rexmit_rto_commit) refers to printf8.o(i.__0printf$8) for __2printf
    tcp_out.o(.text.tcp_rexmit_rto_commit) refers to tcp_out.o(.text.tcp_output) for tcp_output
    tcp_out.o(.ARM.exidx.text.tcp_rexmit_rto_commit) refers to tcp_out.o(.text.tcp_rexmit_rto_commit) for [Anonymous Symbol]
    tcp_out.o(.text.tcp_rexmit_rto) refers to tcp_out.o(.rodata.str1.1) for .L.str
    tcp_out.o(.text.tcp_rexmit_rto) refers to printf8.o(i.__0printf$8) for __2printf
    tcp_out.o(.text.tcp_rexmit_rto) refers to tcp_out.o(.text.tcp_rexmit_rto_prepare) for tcp_rexmit_rto_prepare
    tcp_out.o(.text.tcp_rexmit_rto) refers to tcp_out.o(.text.tcp_output) for tcp_output
    tcp_out.o(.ARM.exidx.text.tcp_rexmit_rto) refers to tcp_out.o(.text.tcp_rexmit_rto) for [Anonymous Symbol]
    tcp_out.o(.text.tcp_rexmit) refers to tcp_out.o(.rodata.str1.1) for .L.str
    tcp_out.o(.text.tcp_rexmit) refers to printf8.o(i.__0printf$8) for __2printf
    tcp_out.o(.text.tcp_rexmit) refers to def.o(.text.lwip_htonl) for lwip_htonl
    tcp_out.o(.ARM.exidx.text.tcp_rexmit) refers to tcp_out.o(.text.tcp_rexmit) for [Anonymous Symbol]
    tcp_out.o(.text.tcp_rexmit_fast) refers to tcp_out.o(.rodata.str1.1) for .L.str
    tcp_out.o(.text.tcp_rexmit_fast) refers to printf8.o(i.__0printf$8) for __2printf
    tcp_out.o(.text.tcp_rexmit_fast) refers to tcp_out.o(.text.tcp_rexmit) for tcp_rexmit
    tcp_out.o(.ARM.exidx.text.tcp_rexmit_fast) refers to tcp_out.o(.text.tcp_rexmit_fast) for [Anonymous Symbol]
    tcp_out.o(.text.tcp_rst) refers to def.o(.text.lwip_htonl) for lwip_htonl
    tcp_out.o(.text.tcp_rst) refers to tcp_out.o(.text.tcp_output_alloc_header_common) for tcp_output_alloc_header_common
    tcp_out.o(.text.tcp_rst) refers to tcp_out.o(.text.tcp_output_control_segment) for tcp_output_control_segment
    tcp_out.o(.text.tcp_rst) refers to tcp_out.o(.rodata.str1.1) for .L.str
    tcp_out.o(.text.tcp_rst) refers to printf8.o(i.__0printf$8) for __2printf
    tcp_out.o(.ARM.exidx.text.tcp_rst) refers to tcp_out.o(.text.tcp_rst) for [Anonymous Symbol]
    tcp_out.o(.text.tcp_output_alloc_header_common) refers to pbuf.o(.text.pbuf_alloc) for pbuf_alloc
    tcp_out.o(.text.tcp_output_alloc_header_common) refers to tcp_out.o(.rodata.str1.1) for .L.str
    tcp_out.o(.text.tcp_output_alloc_header_common) refers to printf8.o(i.__0printf$8) for __2printf
    tcp_out.o(.text.tcp_output_alloc_header_common) refers to def.o(.text.lwip_htons) for lwip_htons
    tcp_out.o(.text.tcp_output_alloc_header_common) refers to def.o(.text.lwip_htonl) for lwip_htonl
    tcp_out.o(.ARM.exidx.text.tcp_output_alloc_header_common) refers to tcp_out.o(.text.tcp_output_alloc_header_common) for [Anonymous Symbol]
    tcp_out.o(.text.tcp_output_control_segment) refers to netif.o(.text.netif_get_by_index) for netif_get_by_index
    tcp_out.o(.text.tcp_output_control_segment) refers to ip4.o(.text.ip4_route) for ip4_route
    tcp_out.o(.text.tcp_output_control_segment) refers to inet_chksum.o(.text.ip_chksum_pseudo) for ip_chksum_pseudo
    tcp_out.o(.text.tcp_output_control_segment) refers to ip4.o(.text.ip4_output_if) for ip4_output_if
    tcp_out.o(.text.tcp_output_control_segment) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    tcp_out.o(.ARM.exidx.text.tcp_output_control_segment) refers to tcp_out.o(.text.tcp_output_control_segment) for [Anonymous Symbol]
    tcp_out.o(.text.tcp_keepalive) refers to tcp_out.o(.rodata.str1.1) for .L.str
    tcp_out.o(.text.tcp_keepalive) refers to printf8.o(i.__0printf$8) for __2printf
    tcp_out.o(.text.tcp_keepalive) refers to def.o(.text.lwip_htonl) for lwip_htonl
    tcp_out.o(.text.tcp_keepalive) refers to tcp_out.o(.text.tcp_output_alloc_header_common) for tcp_output_alloc_header_common
    tcp_out.o(.text.tcp_keepalive) refers to tcp_out.o(.text.tcp_output_control_segment) for tcp_output_control_segment
    tcp_out.o(.ARM.exidx.text.tcp_keepalive) refers to tcp_out.o(.text.tcp_keepalive) for [Anonymous Symbol]
    tcp_out.o(.text.tcp_zero_window_probe) refers to tcp_out.o(.rodata.str1.1) for .L.str
    tcp_out.o(.text.tcp_zero_window_probe) refers to printf8.o(i.__0printf$8) for __2printf
    tcp_out.o(.text.tcp_zero_window_probe) refers to def.o(.text.lwip_htons) for lwip_htons
    tcp_out.o(.text.tcp_zero_window_probe) refers to tcp_out.o(.text.tcp_output_alloc_header_common) for tcp_output_alloc_header_common
    tcp_out.o(.text.tcp_zero_window_probe) refers to pbuf.o(.text.pbuf_copy_partial) for pbuf_copy_partial
    tcp_out.o(.text.tcp_zero_window_probe) refers to def.o(.text.lwip_htonl) for lwip_htonl
    tcp_out.o(.text.tcp_zero_window_probe) refers to tcp_out.o(.text.tcp_output_control_segment) for tcp_output_control_segment
    tcp_out.o(.ARM.exidx.text.tcp_zero_window_probe) refers to tcp_out.o(.text.tcp_zero_window_probe) for [Anonymous Symbol]
    timeouts.o(.text.tcp_timer_needed) refers to timeouts.o(.bss.tcpip_tcp_timer_active) for tcpip_tcp_timer_active
    timeouts.o(.text.tcp_timer_needed) refers to tcp.o(.bss.tcp_active_pcbs) for tcp_active_pcbs
    timeouts.o(.text.tcp_timer_needed) refers to tcp.o(.bss.tcp_tw_pcbs) for tcp_tw_pcbs
    timeouts.o(.text.tcp_timer_needed) refers to sys_arch.o(.text.sys_now) for sys_now
    timeouts.o(.text.tcp_timer_needed) refers to memp.o(.text.memp_malloc) for memp_malloc
    timeouts.o(.text.tcp_timer_needed) refers to timeouts.o(.text.tcpip_tcp_timer) for tcpip_tcp_timer
    timeouts.o(.text.tcp_timer_needed) refers to timeouts.o(.bss.next_timeout) for next_timeout
    timeouts.o(.text.tcp_timer_needed) refers to timeouts.o(.rodata.str1.1) for .L.str
    timeouts.o(.text.tcp_timer_needed) refers to printf8.o(i.__0printf$8) for __2printf
    timeouts.o(.ARM.exidx.text.tcp_timer_needed) refers to timeouts.o(.text.tcp_timer_needed) for [Anonymous Symbol]
    timeouts.o(.text.sys_timeout) refers to timeouts.o(.rodata.str1.1) for .L.str
    timeouts.o(.text.sys_timeout) refers to printf8.o(i.__0printf$8) for __2printf
    timeouts.o(.text.sys_timeout) refers to sys_arch.o(.text.sys_now) for sys_now
    timeouts.o(.text.sys_timeout) refers to memp.o(.text.memp_malloc) for memp_malloc
    timeouts.o(.text.sys_timeout) refers to timeouts.o(.bss.next_timeout) for next_timeout
    timeouts.o(.ARM.exidx.text.sys_timeout) refers to timeouts.o(.text.sys_timeout) for [Anonymous Symbol]
    timeouts.o(.text.tcpip_tcp_timer) refers to tcp.o(.text.tcp_tmr) for tcp_tmr
    timeouts.o(.text.tcpip_tcp_timer) refers to tcp.o(.bss.tcp_active_pcbs) for tcp_active_pcbs
    timeouts.o(.text.tcpip_tcp_timer) refers to tcp.o(.bss.tcp_tw_pcbs) for tcp_tw_pcbs
    timeouts.o(.text.tcpip_tcp_timer) refers to sys_arch.o(.text.sys_now) for sys_now
    timeouts.o(.text.tcpip_tcp_timer) refers to memp.o(.text.memp_malloc) for memp_malloc
    timeouts.o(.text.tcpip_tcp_timer) refers to timeouts.o(.bss.next_timeout) for next_timeout
    timeouts.o(.text.tcpip_tcp_timer) refers to timeouts.o(.bss.tcpip_tcp_timer_active) for tcpip_tcp_timer_active
    timeouts.o(.text.tcpip_tcp_timer) refers to timeouts.o(.rodata.str1.1) for .L.str
    timeouts.o(.text.tcpip_tcp_timer) refers to printf8.o(i.__0printf$8) for __2printf
    timeouts.o(.ARM.exidx.text.tcpip_tcp_timer) refers to timeouts.o(.text.tcpip_tcp_timer) for [Anonymous Symbol]
    timeouts.o(.text.sys_timeouts_init) refers to timeouts.o(.rodata.lwip_cyclic_timers) for lwip_cyclic_timers
    timeouts.o(.text.sys_timeouts_init) refers to timeouts.o(.text.lwip_cyclic_timer) for lwip_cyclic_timer
    timeouts.o(.text.sys_timeouts_init) refers to timeouts.o(.text.sys_timeout) for sys_timeout
    timeouts.o(.ARM.exidx.text.sys_timeouts_init) refers to timeouts.o(.text.sys_timeouts_init) for [Anonymous Symbol]
    timeouts.o(.text.lwip_cyclic_timer) refers to sys_arch.o(.text.sys_now) for sys_now
    timeouts.o(.text.lwip_cyclic_timer) refers to timeouts.o(.bss.current_timeout_due_time) for current_timeout_due_time
    timeouts.o(.text.lwip_cyclic_timer) refers to memp.o(.text.memp_malloc) for memp_malloc
    timeouts.o(.text.lwip_cyclic_timer) refers to timeouts.o(.bss.next_timeout) for next_timeout
    timeouts.o(.text.lwip_cyclic_timer) refers to timeouts.o(.rodata.str1.1) for .L.str
    timeouts.o(.text.lwip_cyclic_timer) refers to printf8.o(i.__0printf$8) for __2printf
    timeouts.o(.ARM.exidx.text.lwip_cyclic_timer) refers to timeouts.o(.text.lwip_cyclic_timer) for [Anonymous Symbol]
    timeouts.o(.text.sys_untimeout) refers to timeouts.o(.bss.next_timeout) for next_timeout
    timeouts.o(.text.sys_untimeout) refers to memp.o(.text.memp_free) for memp_free
    timeouts.o(.ARM.exidx.text.sys_untimeout) refers to timeouts.o(.text.sys_untimeout) for [Anonymous Symbol]
    timeouts.o(.text.sys_check_timeouts) refers to sys_arch.o(.text.sys_now) for sys_now
    timeouts.o(.text.sys_check_timeouts) refers to timeouts.o(.bss.next_timeout) for next_timeout
    timeouts.o(.text.sys_check_timeouts) refers to timeouts.o(.bss.current_timeout_due_time) for current_timeout_due_time
    timeouts.o(.text.sys_check_timeouts) refers to memp.o(.text.memp_free) for memp_free
    timeouts.o(.ARM.exidx.text.sys_check_timeouts) refers to timeouts.o(.text.sys_check_timeouts) for [Anonymous Symbol]
    timeouts.o(.text.sys_restart_timeouts) refers to timeouts.o(.bss.next_timeout) for next_timeout
    timeouts.o(.text.sys_restart_timeouts) refers to sys_arch.o(.text.sys_now) for sys_now
    timeouts.o(.ARM.exidx.text.sys_restart_timeouts) refers to timeouts.o(.text.sys_restart_timeouts) for [Anonymous Symbol]
    timeouts.o(.text.sys_timeouts_sleeptime) refers to timeouts.o(.bss.next_timeout) for next_timeout
    timeouts.o(.text.sys_timeouts_sleeptime) refers to sys_arch.o(.text.sys_now) for sys_now
    timeouts.o(.ARM.exidx.text.sys_timeouts_sleeptime) refers to timeouts.o(.text.sys_timeouts_sleeptime) for [Anonymous Symbol]
    timeouts.o(.rodata.lwip_cyclic_timers) refers to tcp.o(.text.tcp_tmr) for tcp_tmr
    timeouts.o(.rodata.lwip_cyclic_timers) refers to ip4_frag.o(.text.ip_reass_tmr) for ip_reass_tmr
    timeouts.o(.rodata.lwip_cyclic_timers) refers to etharp.o(.text.etharp_tmr) for etharp_tmr
    udp.o(.text.udp_init) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    udp.o(.text.udp_init) refers to udp.o(.data.udp_port) for udp_port
    udp.o(.ARM.exidx.text.udp_init) refers to udp.o(.text.udp_init) for [Anonymous Symbol]
    udp.o(.text.udp_input) refers to ip.o(.bss.ip_data) for ip_data
    udp.o(.text.udp_input) refers to ip4_addr.o(.text.ip4_addr_isbroadcast_u32) for ip4_addr_isbroadcast_u32
    udp.o(.text.udp_input) refers to def.o(.text.lwip_htons) for lwip_htons
    udp.o(.text.udp_input) refers to udp.o(.bss.udp_pcbs) for udp_pcbs
    udp.o(.text.udp_input) refers to udp.o(.rodata.str1.1) for .L.str
    udp.o(.text.udp_input) refers to printf8.o(i.__0printf$8) for __2printf
    udp.o(.text.udp_input) refers to inet_chksum.o(.text.ip_chksum_pseudo) for ip_chksum_pseudo
    udp.o(.text.udp_input) refers to pbuf.o(.text.pbuf_remove_header) for pbuf_remove_header
    udp.o(.text.udp_input) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    udp.o(.text.udp_input) refers to pbuf.o(.text.pbuf_header_force) for pbuf_header_force
    udp.o(.text.udp_input) refers to icmp.o(.text.icmp_dest_unreach) for icmp_dest_unreach
    udp.o(.ARM.exidx.text.udp_input) refers to udp.o(.text.udp_input) for [Anonymous Symbol]
    udp.o(.text.udp_send) refers to netif.o(.text.netif_get_by_index) for netif_get_by_index
    udp.o(.text.udp_send) refers to udp.o(.rodata.str1.1) for .L.str
    udp.o(.text.udp_send) refers to printf8.o(i.__0printf$8) for __2printf
    udp.o(.text.udp_send) refers to ip4.o(.text.ip4_route) for ip4_route
    udp.o(.text.udp_send) refers to udp.o(.text.udp_sendto_if_src) for udp_sendto_if_src
    udp.o(.ARM.exidx.text.udp_send) refers to udp.o(.text.udp_send) for [Anonymous Symbol]
    udp.o(.text.udp_sendto) refers to netif.o(.text.netif_get_by_index) for netif_get_by_index
    udp.o(.text.udp_sendto) refers to udp.o(.rodata.str1.1) for .L.str
    udp.o(.text.udp_sendto) refers to printf8.o(i.__0printf$8) for __2printf
    udp.o(.text.udp_sendto) refers to ip4.o(.text.ip4_route) for ip4_route
    udp.o(.text.udp_sendto) refers to udp.o(.text.udp_sendto_if_src) for udp_sendto_if_src
    udp.o(.ARM.exidx.text.udp_sendto) refers to udp.o(.text.udp_sendto) for [Anonymous Symbol]
    udp.o(.text.udp_sendto_if) refers to udp.o(.text.udp_sendto_if_src) for udp_sendto_if_src
    udp.o(.text.udp_sendto_if) refers to udp.o(.rodata.str1.1) for .L.str
    udp.o(.text.udp_sendto_if) refers to printf8.o(i.__0printf$8) for __2printf
    udp.o(.ARM.exidx.text.udp_sendto_if) refers to udp.o(.text.udp_sendto_if) for [Anonymous Symbol]
    udp.o(.text.udp_sendto_if_src) refers to udp.o(.rodata.str1.1) for .L.str
    udp.o(.text.udp_sendto_if_src) refers to printf8.o(i.__0printf$8) for __2printf
    udp.o(.text.udp_sendto_if_src) refers to pbuf.o(.text.pbuf_add_header) for pbuf_add_header
    udp.o(.text.udp_sendto_if_src) refers to pbuf.o(.text.pbuf_alloc) for pbuf_alloc
    udp.o(.text.udp_sendto_if_src) refers to pbuf.o(.text.pbuf_chain) for pbuf_chain
    udp.o(.text.udp_sendto_if_src) refers to def.o(.text.lwip_htons) for lwip_htons
    udp.o(.text.udp_sendto_if_src) refers to inet_chksum.o(.text.ip_chksum_pseudo) for ip_chksum_pseudo
    udp.o(.text.udp_sendto_if_src) refers to ip4.o(.text.ip4_output_if_src) for ip4_output_if_src
    udp.o(.text.udp_sendto_if_src) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    udp.o(.text.udp_sendto_if_src) refers to udp.o(.text.udp_bind) for udp_bind
    udp.o(.ARM.exidx.text.udp_sendto_if_src) refers to udp.o(.text.udp_sendto_if_src) for [Anonymous Symbol]
    udp.o(.text.udp_bind) refers to ip4_addr.o(.rodata.ip_addr_any) for ip_addr_any
    udp.o(.text.udp_bind) refers to udp.o(.bss.udp_pcbs) for udp_pcbs
    udp.o(.text.udp_bind) refers to udp.o(.rodata.str1.1) for .L.str
    udp.o(.text.udp_bind) refers to printf8.o(i.__0printf$8) for __2printf
    udp.o(.text.udp_bind) refers to udp.o(.data.udp_port) for udp_port
    udp.o(.ARM.exidx.text.udp_bind) refers to udp.o(.text.udp_bind) for [Anonymous Symbol]
    udp.o(.ARM.exidx.text.udp_bind_netif) refers to udp.o(.text.udp_bind_netif) for [Anonymous Symbol]
    udp.o(.text.udp_connect) refers to udp.o(.bss.udp_pcbs) for udp_pcbs
    udp.o(.text.udp_connect) refers to udp.o(.rodata.str1.1) for .L.str
    udp.o(.text.udp_connect) refers to printf8.o(i.__0printf$8) for __2printf
    udp.o(.text.udp_connect) refers to udp.o(.text.udp_bind) for udp_bind
    udp.o(.ARM.exidx.text.udp_connect) refers to udp.o(.text.udp_connect) for [Anonymous Symbol]
    udp.o(.text.udp_disconnect) refers to udp.o(.rodata.str1.1) for .L.str
    udp.o(.text.udp_disconnect) refers to printf8.o(i.__0printf$8) for __2printf
    udp.o(.ARM.exidx.text.udp_disconnect) refers to udp.o(.text.udp_disconnect) for [Anonymous Symbol]
    udp.o(.text.udp_recv) refers to udp.o(.rodata.str1.1) for .L.str
    udp.o(.text.udp_recv) refers to printf8.o(i.__0printf$8) for __2printf
    udp.o(.ARM.exidx.text.udp_recv) refers to udp.o(.text.udp_recv) for [Anonymous Symbol]
    udp.o(.text.udp_remove) refers to udp.o(.bss.udp_pcbs) for udp_pcbs
    udp.o(.text.udp_remove) refers to memp.o(.text.memp_free) for memp_free
    udp.o(.text.udp_remove) refers to udp.o(.rodata.str1.1) for .L.str
    udp.o(.text.udp_remove) refers to printf8.o(i.__0printf$8) for __2printf
    udp.o(.ARM.exidx.text.udp_remove) refers to udp.o(.text.udp_remove) for [Anonymous Symbol]
    udp.o(.text.udp_new) refers to memp.o(.text.memp_malloc) for memp_malloc
    udp.o(.ARM.exidx.text.udp_new) refers to udp.o(.text.udp_new) for [Anonymous Symbol]
    udp.o(.text.udp_new_ip_type) refers to memp.o(.text.memp_malloc) for memp_malloc
    udp.o(.ARM.exidx.text.udp_new_ip_type) refers to udp.o(.text.udp_new_ip_type) for [Anonymous Symbol]
    udp.o(.text.udp_netif_ip_addr_changed) refers to udp.o(.bss.udp_pcbs) for udp_pcbs
    udp.o(.ARM.exidx.text.udp_netif_ip_addr_changed) refers to udp.o(.text.udp_netif_ip_addr_changed) for [Anonymous Symbol]
    etharp.o(.text.etharp_tmr) refers to etharp.o(.bss.arp_table) for arp_table
    etharp.o(.text.etharp_tmr) refers to ethernet.o(.rodata.ethzero) for ethzero
    etharp.o(.text.etharp_tmr) refers to ethernet.o(.rodata.ethbroadcast) for ethbroadcast
    etharp.o(.text.etharp_tmr) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    etharp.o(.text.etharp_tmr) refers to etharp.o(.text.etharp_raw) for etharp_raw
    etharp.o(.ARM.exidx.text.etharp_tmr) refers to etharp.o(.text.etharp_tmr) for [Anonymous Symbol]
    etharp.o(.text.etharp_request) refers to ethernet.o(.rodata.ethzero) for ethzero
    etharp.o(.text.etharp_request) refers to ethernet.o(.rodata.ethbroadcast) for ethbroadcast
    etharp.o(.text.etharp_request) refers to etharp.o(.text.etharp_raw) for etharp_raw
    etharp.o(.ARM.exidx.text.etharp_request) refers to etharp.o(.text.etharp_request) for [Anonymous Symbol]
    etharp.o(.text.etharp_cleanup_netif) refers to etharp.o(.bss.arp_table) for arp_table
    etharp.o(.text.etharp_cleanup_netif) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    etharp.o(.ARM.exidx.text.etharp_cleanup_netif) refers to etharp.o(.text.etharp_cleanup_netif) for [Anonymous Symbol]
    etharp.o(.text.etharp_find_addr) refers to etharp.o(.rodata.str1.1) for .L.str
    etharp.o(.text.etharp_find_addr) refers to printf8.o(i.__0printf$8) for __2printf
    etharp.o(.text.etharp_find_addr) refers to etharp.o(.bss.arp_table) for arp_table
    etharp.o(.ARM.exidx.text.etharp_find_addr) refers to etharp.o(.text.etharp_find_addr) for [Anonymous Symbol]
    etharp.o(.text.etharp_find_entry) refers to etharp.o(.bss.arp_table) for arp_table
    etharp.o(.text.etharp_find_entry) refers to etharp.o(.rodata.str1.1) for .L.str
    etharp.o(.text.etharp_find_entry) refers to printf8.o(i.__0printf$8) for __2printf
    etharp.o(.text.etharp_find_entry) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    etharp.o(.ARM.exidx.text.etharp_find_entry) refers to etharp.o(.text.etharp_find_entry) for [Anonymous Symbol]
    etharp.o(.text.etharp_get_entry) refers to etharp.o(.rodata.str1.1) for .L.str
    etharp.o(.text.etharp_get_entry) refers to printf8.o(i.__0printf$8) for __2printf
    etharp.o(.text.etharp_get_entry) refers to etharp.o(.bss.arp_table) for arp_table
    etharp.o(.ARM.exidx.text.etharp_get_entry) refers to etharp.o(.text.etharp_get_entry) for [Anonymous Symbol]
    etharp.o(.text.etharp_input) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    etharp.o(.text.etharp_input) refers to etharp.o(.rodata.str1.1) for .L.str
    etharp.o(.text.etharp_input) refers to printf8.o(i.__0printf$8) for __2printf
    etharp.o(.text.etharp_input) refers to ip4_addr.o(.text.ip4_addr_isbroadcast_u32) for ip4_addr_isbroadcast_u32
    etharp.o(.text.etharp_input) refers to etharp.o(.text.etharp_find_entry) for etharp_find_entry
    etharp.o(.text.etharp_input) refers to etharp.o(.bss.arp_table) for arp_table
    etharp.o(.text.etharp_input) refers to ethernet.o(.text.ethernet_output) for ethernet_output
    etharp.o(.text.etharp_input) refers to etharp.o(.text.etharp_raw) for etharp_raw
    etharp.o(.ARM.exidx.text.etharp_input) refers to etharp.o(.text.etharp_input) for [Anonymous Symbol]
    etharp.o(.text.etharp_raw) refers to etharp.o(.rodata.str1.1) for .L.str
    etharp.o(.text.etharp_raw) refers to printf8.o(i.__0printf$8) for __2printf
    etharp.o(.text.etharp_raw) refers to pbuf.o(.text.pbuf_alloc) for pbuf_alloc
    etharp.o(.text.etharp_raw) refers to def.o(.text.lwip_htons) for lwip_htons
    etharp.o(.text.etharp_raw) refers to ethernet.o(.text.ethernet_output) for ethernet_output
    etharp.o(.text.etharp_raw) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    etharp.o(.ARM.exidx.text.etharp_raw) refers to etharp.o(.text.etharp_raw) for [Anonymous Symbol]
    etharp.o(.text.etharp_output) refers to ip4_addr.o(.text.ip4_addr_isbroadcast_u32) for ip4_addr_isbroadcast_u32
    etharp.o(.text.etharp_output) refers to ethernet.o(.rodata.ethbroadcast) for ethbroadcast
    etharp.o(.text.etharp_output) refers to etharp.o(.rodata.str1.1) for .L.str
    etharp.o(.text.etharp_output) refers to printf8.o(i.__0printf$8) for __2printf
    etharp.o(.text.etharp_output) refers to ethernet.o(.text.ethernet_output) for ethernet_output
    etharp.o(.text.etharp_output) refers to etharp.o(.bss.etharp_cached_entry) for etharp_cached_entry
    etharp.o(.text.etharp_output) refers to etharp.o(.bss.arp_table) for arp_table
    etharp.o(.text.etharp_output) refers to etharp.o(.text.etharp_output_to_arp_index) for etharp_output_to_arp_index
    etharp.o(.text.etharp_output) refers to etharp.o(.text.etharp_query) for etharp_query
    etharp.o(.ARM.exidx.text.etharp_output) refers to etharp.o(.text.etharp_output) for [Anonymous Symbol]
    etharp.o(.text.etharp_output_to_arp_index) refers to etharp.o(.bss.arp_table) for arp_table
    etharp.o(.text.etharp_output_to_arp_index) refers to etharp.o(.rodata.str1.1) for .L.str
    etharp.o(.text.etharp_output_to_arp_index) refers to printf8.o(i.__0printf$8) for __2printf
    etharp.o(.text.etharp_output_to_arp_index) refers to ethernet.o(.rodata.ethzero) for ethzero
    etharp.o(.text.etharp_output_to_arp_index) refers to ethernet.o(.rodata.ethbroadcast) for ethbroadcast
    etharp.o(.text.etharp_output_to_arp_index) refers to etharp.o(.text.etharp_raw) for etharp_raw
    etharp.o(.text.etharp_output_to_arp_index) refers to ethernet.o(.text.ethernet_output) for ethernet_output
    etharp.o(.ARM.exidx.text.etharp_output_to_arp_index) refers to etharp.o(.text.etharp_output_to_arp_index) for [Anonymous Symbol]
    etharp.o(.text.etharp_query) refers to ip4_addr.o(.text.ip4_addr_isbroadcast_u32) for ip4_addr_isbroadcast_u32
    etharp.o(.text.etharp_query) refers to etharp.o(.text.etharp_find_entry) for etharp_find_entry
    etharp.o(.text.etharp_query) refers to etharp.o(.rodata.str1.1) for .L.str
    etharp.o(.text.etharp_query) refers to printf8.o(i.__0printf$8) for __2printf
    etharp.o(.text.etharp_query) refers to etharp.o(.bss.arp_table) for arp_table
    etharp.o(.text.etharp_query) refers to ethernet.o(.rodata.ethzero) for ethzero
    etharp.o(.text.etharp_query) refers to ethernet.o(.rodata.ethbroadcast) for ethbroadcast
    etharp.o(.text.etharp_query) refers to etharp.o(.text.etharp_raw) for etharp_raw
    etharp.o(.text.etharp_query) refers to etharp.o(.bss.etharp_cached_entry) for etharp_cached_entry
    etharp.o(.text.etharp_query) refers to ethernet.o(.text.ethernet_output) for ethernet_output
    etharp.o(.text.etharp_query) refers to pbuf.o(.text.pbuf_ref) for pbuf_ref
    etharp.o(.text.etharp_query) refers to pbuf.o(.text.pbuf_clone) for pbuf_clone
    etharp.o(.text.etharp_query) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    etharp.o(.ARM.exidx.text.etharp_query) refers to etharp.o(.text.etharp_query) for [Anonymous Symbol]
    icmp.o(.text.icmp_input) refers to ip.o(.bss.ip_data) for ip_data
    icmp.o(.text.icmp_input) refers to ip4_addr.o(.text.ip4_addr_isbroadcast_u32) for ip4_addr_isbroadcast_u32
    icmp.o(.text.icmp_input) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    icmp.o(.text.icmp_input) refers to inet_chksum.o(.text.inet_chksum_pbuf) for inet_chksum_pbuf
    icmp.o(.text.icmp_input) refers to pbuf.o(.text.pbuf_add_header) for pbuf_add_header
    icmp.o(.text.icmp_input) refers to pbuf.o(.text.pbuf_remove_header) for pbuf_remove_header
    icmp.o(.text.icmp_input) refers to icmp.o(.rodata.str1.1) for .L.str
    icmp.o(.text.icmp_input) refers to printf8.o(i.__0printf$8) for __2printf
    icmp.o(.text.icmp_input) refers to pbuf.o(.text.pbuf_alloc) for pbuf_alloc
    icmp.o(.text.icmp_input) refers to memmovea.o(.text) for __aeabi_memcpy
    icmp.o(.text.icmp_input) refers to pbuf.o(.text.pbuf_copy) for pbuf_copy
    icmp.o(.text.icmp_input) refers to inet_chksum.o(.text.inet_chksum) for inet_chksum
    icmp.o(.text.icmp_input) refers to ip4.o(.text.ip4_output_if) for ip4_output_if
    icmp.o(.ARM.exidx.text.icmp_input) refers to icmp.o(.text.icmp_input) for [Anonymous Symbol]
    icmp.o(.text.icmp_dest_unreach) refers to icmp.o(.text.icmp_send_response) for icmp_send_response
    icmp.o(.ARM.exidx.text.icmp_dest_unreach) refers to icmp.o(.text.icmp_dest_unreach) for [Anonymous Symbol]
    icmp.o(.text.icmp_send_response) refers to pbuf.o(.text.pbuf_alloc) for pbuf_alloc
    icmp.o(.text.icmp_send_response) refers to icmp.o(.rodata.str1.1) for .L.str
    icmp.o(.text.icmp_send_response) refers to printf8.o(i.__0printf$8) for __2printf
    icmp.o(.text.icmp_send_response) refers to memmovea.o(.text) for __aeabi_memcpy
    icmp.o(.text.icmp_send_response) refers to ip4.o(.text.ip4_route) for ip4_route
    icmp.o(.text.icmp_send_response) refers to inet_chksum.o(.text.inet_chksum) for inet_chksum
    icmp.o(.text.icmp_send_response) refers to ip4.o(.text.ip4_output_if) for ip4_output_if
    icmp.o(.text.icmp_send_response) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    icmp.o(.ARM.exidx.text.icmp_send_response) refers to icmp.o(.text.icmp_send_response) for [Anonymous Symbol]
    icmp.o(.text.icmp_time_exceeded) refers to icmp.o(.text.icmp_send_response) for icmp_send_response
    icmp.o(.ARM.exidx.text.icmp_time_exceeded) refers to icmp.o(.text.icmp_time_exceeded) for [Anonymous Symbol]
    ip4.o(.text.ip4_route) refers to netif.o(.bss.netif_list) for netif_list
    ip4.o(.text.ip4_route) refers to netif.o(.bss.netif_default) for netif_default
    ip4.o(.ARM.exidx.text.ip4_route) refers to ip4.o(.text.ip4_route) for [Anonymous Symbol]
    ip4.o(.text.ip4_input) refers to def.o(.text.lwip_htons) for lwip_htons
    ip4.o(.text.ip4_input) refers to pbuf.o(.text.pbuf_realloc) for pbuf_realloc
    ip4.o(.text.ip4_input) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    ip4.o(.text.ip4_input) refers to inet_chksum.o(.text.inet_chksum) for inet_chksum
    ip4.o(.text.ip4_input) refers to ip.o(.bss.ip_data) for ip_data
    ip4.o(.text.ip4_input) refers to ip4_addr.o(.text.ip4_addr_isbroadcast_u32) for ip4_addr_isbroadcast_u32
    ip4.o(.text.ip4_input) refers to netif.o(.bss.netif_list) for netif_list
    ip4.o(.text.ip4_input) refers to ip4_frag.o(.text.ip4_reass) for ip4_reass
    ip4.o(.text.ip4_input) refers to pbuf.o(.text.pbuf_remove_header) for pbuf_remove_header
    ip4.o(.text.ip4_input) refers to udp.o(.text.udp_input) for udp_input
    ip4.o(.text.ip4_input) refers to tcp_in.o(.text.tcp_input) for tcp_input
    ip4.o(.text.ip4_input) refers to icmp.o(.text.icmp_input) for icmp_input
    ip4.o(.text.ip4_input) refers to pbuf.o(.text.pbuf_header_force) for pbuf_header_force
    ip4.o(.text.ip4_input) refers to icmp.o(.text.icmp_dest_unreach) for icmp_dest_unreach
    ip4.o(.ARM.exidx.text.ip4_input) refers to ip4.o(.text.ip4_input) for [Anonymous Symbol]
    ip4.o(.text.ip4_output_if) refers to ip4.o(.text.ip4_output_if_src) for ip4_output_if_src
    ip4.o(.ARM.exidx.text.ip4_output_if) refers to ip4.o(.text.ip4_output_if) for [Anonymous Symbol]
    ip4.o(.text.ip4_output_if_src) refers to ip4.o(.rodata.str1.1) for .L.str
    ip4.o(.text.ip4_output_if_src) refers to printf8.o(i.__0printf$8) for __2printf
    ip4.o(.text.ip4_output_if_src) refers to pbuf.o(.text.pbuf_add_header) for pbuf_add_header
    ip4.o(.text.ip4_output_if_src) refers to def.o(.text.lwip_htons) for lwip_htons
    ip4.o(.text.ip4_output_if_src) refers to ip4.o(.bss.ip_id) for ip_id
    ip4.o(.text.ip4_output_if_src) refers to ip4_addr.o(.rodata.ip_addr_any) for ip_addr_any
    ip4.o(.text.ip4_output_if_src) refers to ip4_frag.o(.text.ip4_frag) for ip4_frag
    ip4.o(.ARM.exidx.text.ip4_output_if_src) refers to ip4.o(.text.ip4_output_if_src) for [Anonymous Symbol]
    ip4.o(.text.ip4_output) refers to ip4.o(.rodata.str1.1) for .L.str
    ip4.o(.text.ip4_output) refers to printf8.o(i.__0printf$8) for __2printf
    ip4.o(.text.ip4_output) refers to netif.o(.bss.netif_list) for netif_list
    ip4.o(.text.ip4_output) refers to netif.o(.bss.netif_default) for netif_default
    ip4.o(.text.ip4_output) refers to ip4.o(.text.ip4_output_if_src) for ip4_output_if_src
    ip4.o(.ARM.exidx.text.ip4_output) refers to ip4.o(.text.ip4_output) for [Anonymous Symbol]
    ip4_addr.o(.ARM.exidx.text.ip4_addr_isbroadcast_u32) refers to ip4_addr.o(.text.ip4_addr_isbroadcast_u32) for [Anonymous Symbol]
    ip4_addr.o(.text.ip4_addr_netmask_valid) refers to def.o(.text.lwip_htonl) for lwip_htonl
    ip4_addr.o(.ARM.exidx.text.ip4_addr_netmask_valid) refers to ip4_addr.o(.text.ip4_addr_netmask_valid) for [Anonymous Symbol]
    ip4_addr.o(.text.ipaddr_addr) refers to ip4_addr.o(.text.ip4addr_aton) for ip4addr_aton
    ip4_addr.o(.ARM.exidx.text.ipaddr_addr) refers to ip4_addr.o(.text.ipaddr_addr) for [Anonymous Symbol]
    ip4_addr.o(.text.ip4addr_aton) refers to ctype_o.o(.text) for __rt_ctype_table
    ip4_addr.o(.text.ip4addr_aton) refers to ip4_addr.o(.rodata.str1.1) for .L.str.2
    ip4_addr.o(.text.ip4addr_aton) refers to printf8.o(i.__0printf$8) for __2printf
    ip4_addr.o(.text.ip4addr_aton) refers to def.o(.text.lwip_htonl) for lwip_htonl
    ip4_addr.o(.ARM.exidx.text.ip4addr_aton) refers to ip4_addr.o(.text.ip4addr_aton) for [Anonymous Symbol]
    ip4_addr.o(.text.ip4addr_ntoa) refers to ip4_addr.o(.bss.ip4addr_ntoa.str) for ip4addr_ntoa.str
    ip4_addr.o(.ARM.exidx.text.ip4addr_ntoa) refers to ip4_addr.o(.text.ip4addr_ntoa) for [Anonymous Symbol]
    ip4_addr.o(.ARM.exidx.text.ip4addr_ntoa_r) refers to ip4_addr.o(.text.ip4addr_ntoa_r) for [Anonymous Symbol]
    ip4_frag.o(.text.ip_reass_tmr) refers to ip4_frag.o(.bss.reassdatagrams) for reassdatagrams
    ip4_frag.o(.text.ip_reass_tmr) refers to ip4_frag.o(.text.ip_reass_free_complete_datagram) for ip_reass_free_complete_datagram
    ip4_frag.o(.ARM.exidx.text.ip_reass_tmr) refers to ip4_frag.o(.text.ip_reass_tmr) for [Anonymous Symbol]
    ip4_frag.o(.text.ip_reass_free_complete_datagram) refers to ip4_frag.o(.rodata.str1.1) for .L.str
    ip4_frag.o(.text.ip_reass_free_complete_datagram) refers to printf8.o(i.__0printf$8) for __2printf
    ip4_frag.o(.text.ip_reass_free_complete_datagram) refers to memmovea.o(.text) for __aeabi_memcpy
    ip4_frag.o(.text.ip_reass_free_complete_datagram) refers to icmp.o(.text.icmp_time_exceeded) for icmp_time_exceeded
    ip4_frag.o(.text.ip_reass_free_complete_datagram) refers to pbuf.o(.text.pbuf_clen) for pbuf_clen
    ip4_frag.o(.text.ip_reass_free_complete_datagram) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    ip4_frag.o(.text.ip_reass_free_complete_datagram) refers to ip4_frag.o(.bss.reassdatagrams) for reassdatagrams
    ip4_frag.o(.text.ip_reass_free_complete_datagram) refers to memp.o(.text.memp_free) for memp_free
    ip4_frag.o(.text.ip_reass_free_complete_datagram) refers to ip4_frag.o(.bss.ip_reass_pbufcount) for ip_reass_pbufcount
    ip4_frag.o(.ARM.exidx.text.ip_reass_free_complete_datagram) refers to ip4_frag.o(.text.ip_reass_free_complete_datagram) for [Anonymous Symbol]
    ip4_frag.o(.text.ip4_reass) refers to def.o(.text.lwip_htons) for lwip_htons
    ip4_frag.o(.text.ip4_reass) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    ip4_frag.o(.text.ip4_reass) refers to pbuf.o(.text.pbuf_clen) for pbuf_clen
    ip4_frag.o(.text.ip4_reass) refers to ip4_frag.o(.bss.ip_reass_pbufcount) for ip_reass_pbufcount
    ip4_frag.o(.text.ip4_reass) refers to ip4_frag.o(.bss.reassdatagrams) for reassdatagrams
    ip4_frag.o(.text.ip4_reass) refers to ip4_frag.o(.text.ip_reass_free_complete_datagram) for ip_reass_free_complete_datagram
    ip4_frag.o(.text.ip4_reass) refers to memmovea.o(.text) for __aeabi_memcpy
    ip4_frag.o(.text.ip4_reass) refers to memp.o(.text.memp_malloc) for memp_malloc
    ip4_frag.o(.text.ip4_reass) refers to ip4_frag.o(.rodata.str1.1) for .L.str
    ip4_frag.o(.text.ip4_reass) refers to printf8.o(i.__0printf$8) for __2printf
    ip4_frag.o(.text.ip4_reass) refers to memp.o(.text.memp_free) for memp_free
    ip4_frag.o(.text.ip4_reass) refers to inet_chksum.o(.text.inet_chksum) for inet_chksum
    ip4_frag.o(.text.ip4_reass) refers to pbuf.o(.text.pbuf_remove_header) for pbuf_remove_header
    ip4_frag.o(.text.ip4_reass) refers to pbuf.o(.text.pbuf_cat) for pbuf_cat
    ip4_frag.o(.ARM.exidx.text.ip4_reass) refers to ip4_frag.o(.text.ip4_reass) for [Anonymous Symbol]
    ip4_frag.o(.text.ip4_frag) refers to def.o(.text.lwip_htons) for lwip_htons
    ip4_frag.o(.text.ip4_frag) refers to inet_chksum.o(.text.inet_chksum) for inet_chksum
    ip4_frag.o(.text.ip4_frag) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    ip4_frag.o(.text.ip4_frag) refers to pbuf.o(.text.pbuf_alloc) for pbuf_alloc
    ip4_frag.o(.text.ip4_frag) refers to ip4_frag.o(.rodata.str1.1) for .L.str
    ip4_frag.o(.text.ip4_frag) refers to printf8.o(i.__0printf$8) for __2printf
    ip4_frag.o(.text.ip4_frag) refers to memmovea.o(.text) for __aeabi_memcpy
    ip4_frag.o(.text.ip4_frag) refers to memp.o(.text.memp_malloc) for memp_malloc
    ip4_frag.o(.text.ip4_frag) refers to pbuf.o(.text.pbuf_alloced_custom) for pbuf_alloced_custom
    ip4_frag.o(.text.ip4_frag) refers to pbuf.o(.text.pbuf_ref) for pbuf_ref
    ip4_frag.o(.text.ip4_frag) refers to ip4_frag.o(.text.ipfrag_free_pbuf_custom) for ipfrag_free_pbuf_custom
    ip4_frag.o(.text.ip4_frag) refers to pbuf.o(.text.pbuf_cat) for pbuf_cat
    ip4_frag.o(.text.ip4_frag) refers to memp.o(.text.memp_free) for memp_free
    ip4_frag.o(.ARM.exidx.text.ip4_frag) refers to ip4_frag.o(.text.ip4_frag) for [Anonymous Symbol]
    ip4_frag.o(.text.ipfrag_free_pbuf_custom) refers to ip4_frag.o(.rodata.str1.1) for .L.str
    ip4_frag.o(.text.ipfrag_free_pbuf_custom) refers to printf8.o(i.__0printf$8) for __2printf
    ip4_frag.o(.text.ipfrag_free_pbuf_custom) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    ip4_frag.o(.text.ipfrag_free_pbuf_custom) refers to memp.o(.text.memp_free) for memp_free
    ip4_frag.o(.ARM.exidx.text.ipfrag_free_pbuf_custom) refers to ip4_frag.o(.text.ipfrag_free_pbuf_custom) for [Anonymous Symbol]
    api_lib.o(.text.netconn_new_with_proto_and_callback) refers to api_msg.o(.text.netconn_alloc) for netconn_alloc
    api_lib.o(.text.netconn_new_with_proto_and_callback) refers to api_msg.o(.text.lwip_netconn_do_newconn) for lwip_netconn_do_newconn
    api_lib.o(.text.netconn_new_with_proto_and_callback) refers to tcpip.o(.text.tcpip_send_msg_wait_sem) for tcpip_send_msg_wait_sem
    api_lib.o(.text.netconn_new_with_proto_and_callback) refers to api_lib.o(.rodata.str1.1) for .L.str
    api_lib.o(.text.netconn_new_with_proto_and_callback) refers to printf8.o(i.__0printf$8) for __2printf
    api_lib.o(.text.netconn_new_with_proto_and_callback) refers to sys_arch.o(.text.sys_sem_free) for sys_sem_free
    api_lib.o(.text.netconn_new_with_proto_and_callback) refers to sys_arch.o(.text.sys_mbox_free) for sys_mbox_free
    api_lib.o(.text.netconn_new_with_proto_and_callback) refers to memp.o(.text.memp_free) for memp_free
    api_lib.o(.ARM.exidx.text.netconn_new_with_proto_and_callback) refers to api_lib.o(.text.netconn_new_with_proto_and_callback) for [Anonymous Symbol]
    api_lib.o(.text.netconn_prepare_delete) refers to api_msg.o(.text.lwip_netconn_do_delconn) for lwip_netconn_do_delconn
    api_lib.o(.text.netconn_prepare_delete) refers to tcpip.o(.text.tcpip_send_msg_wait_sem) for tcpip_send_msg_wait_sem
    api_lib.o(.ARM.exidx.text.netconn_prepare_delete) refers to api_lib.o(.text.netconn_prepare_delete) for [Anonymous Symbol]
    api_lib.o(.text.netconn_delete) refers to api_msg.o(.text.lwip_netconn_do_delconn) for lwip_netconn_do_delconn
    api_lib.o(.text.netconn_delete) refers to tcpip.o(.text.tcpip_send_msg_wait_sem) for tcpip_send_msg_wait_sem
    api_lib.o(.text.netconn_delete) refers to api_msg.o(.text.netconn_free) for netconn_free
    api_lib.o(.ARM.exidx.text.netconn_delete) refers to api_lib.o(.text.netconn_delete) for [Anonymous Symbol]
    api_lib.o(.text.netconn_getaddr) refers to api_msg.o(.text.lwip_netconn_do_getaddr) for lwip_netconn_do_getaddr
    api_lib.o(.text.netconn_getaddr) refers to tcpip.o(.text.tcpip_send_msg_wait_sem) for tcpip_send_msg_wait_sem
    api_lib.o(.text.netconn_getaddr) refers to api_lib.o(.rodata.str1.1) for .L.str
    api_lib.o(.text.netconn_getaddr) refers to printf8.o(i.__0printf$8) for __2printf
    api_lib.o(.ARM.exidx.text.netconn_getaddr) refers to api_lib.o(.text.netconn_getaddr) for [Anonymous Symbol]
    api_lib.o(.text.netconn_bind) refers to ip4_addr.o(.rodata.ip_addr_any) for ip_addr_any
    api_lib.o(.text.netconn_bind) refers to api_msg.o(.text.lwip_netconn_do_bind) for lwip_netconn_do_bind
    api_lib.o(.text.netconn_bind) refers to tcpip.o(.text.tcpip_send_msg_wait_sem) for tcpip_send_msg_wait_sem
    api_lib.o(.text.netconn_bind) refers to api_lib.o(.rodata.str1.1) for .L.str
    api_lib.o(.text.netconn_bind) refers to printf8.o(i.__0printf$8) for __2printf
    api_lib.o(.ARM.exidx.text.netconn_bind) refers to api_lib.o(.text.netconn_bind) for [Anonymous Symbol]
    api_lib.o(.text.netconn_bind_if) refers to api_msg.o(.text.lwip_netconn_do_bind_if) for lwip_netconn_do_bind_if
    api_lib.o(.text.netconn_bind_if) refers to tcpip.o(.text.tcpip_send_msg_wait_sem) for tcpip_send_msg_wait_sem
    api_lib.o(.text.netconn_bind_if) refers to api_lib.o(.rodata.str1.1) for .L.str
    api_lib.o(.text.netconn_bind_if) refers to printf8.o(i.__0printf$8) for __2printf
    api_lib.o(.ARM.exidx.text.netconn_bind_if) refers to api_lib.o(.text.netconn_bind_if) for [Anonymous Symbol]
    api_lib.o(.text.netconn_connect) refers to ip4_addr.o(.rodata.ip_addr_any) for ip_addr_any
    api_lib.o(.text.netconn_connect) refers to api_msg.o(.text.lwip_netconn_do_connect) for lwip_netconn_do_connect
    api_lib.o(.text.netconn_connect) refers to tcpip.o(.text.tcpip_send_msg_wait_sem) for tcpip_send_msg_wait_sem
    api_lib.o(.text.netconn_connect) refers to api_lib.o(.rodata.str1.1) for .L.str
    api_lib.o(.text.netconn_connect) refers to printf8.o(i.__0printf$8) for __2printf
    api_lib.o(.ARM.exidx.text.netconn_connect) refers to api_lib.o(.text.netconn_connect) for [Anonymous Symbol]
    api_lib.o(.text.netconn_disconnect) refers to api_msg.o(.text.lwip_netconn_do_disconnect) for lwip_netconn_do_disconnect
    api_lib.o(.text.netconn_disconnect) refers to tcpip.o(.text.tcpip_send_msg_wait_sem) for tcpip_send_msg_wait_sem
    api_lib.o(.text.netconn_disconnect) refers to api_lib.o(.rodata.str1.1) for .L.str
    api_lib.o(.text.netconn_disconnect) refers to printf8.o(i.__0printf$8) for __2printf
    api_lib.o(.ARM.exidx.text.netconn_disconnect) refers to api_lib.o(.text.netconn_disconnect) for [Anonymous Symbol]
    api_lib.o(.text.netconn_listen_with_backlog) refers to api_msg.o(.text.lwip_netconn_do_listen) for lwip_netconn_do_listen
    api_lib.o(.text.netconn_listen_with_backlog) refers to tcpip.o(.text.tcpip_send_msg_wait_sem) for tcpip_send_msg_wait_sem
    api_lib.o(.text.netconn_listen_with_backlog) refers to api_lib.o(.rodata.str1.1) for .L.str
    api_lib.o(.text.netconn_listen_with_backlog) refers to printf8.o(i.__0printf$8) for __2printf
    api_lib.o(.ARM.exidx.text.netconn_listen_with_backlog) refers to api_lib.o(.text.netconn_listen_with_backlog) for [Anonymous Symbol]
    api_lib.o(.text.netconn_accept) refers to sys_arch.o(.text.sys_arch_protect) for sys_arch_protect
    api_lib.o(.text.netconn_accept) refers to sys_arch.o(.text.sys_arch_unprotect) for sys_arch_unprotect
    api_lib.o(.text.netconn_accept) refers to sys_arch.o(.text.sys_arch_mbox_fetch) for sys_arch_mbox_fetch
    api_lib.o(.text.netconn_accept) refers to api_lib.o(.rodata.str1.1) for .L.str
    api_lib.o(.text.netconn_accept) refers to printf8.o(i.__0printf$8) for __2printf
    api_lib.o(.text.netconn_accept) refers to sys_arch.o(.text.sys_arch_mbox_tryfetch) for sys_arch_mbox_tryfetch
    api_lib.o(.text.netconn_accept) refers to api_msg.o(.text.lwip_netconn_is_err_msg) for lwip_netconn_is_err_msg
    api_lib.o(.ARM.exidx.text.netconn_accept) refers to api_lib.o(.text.netconn_accept) for [Anonymous Symbol]
    api_lib.o(.text.netconn_err) refers to sys_arch.o(.text.sys_arch_protect) for sys_arch_protect
    api_lib.o(.text.netconn_err) refers to sys_arch.o(.text.sys_arch_unprotect) for sys_arch_unprotect
    api_lib.o(.ARM.exidx.text.netconn_err) refers to api_lib.o(.text.netconn_err) for [Anonymous Symbol]
    api_lib.o(.text.netconn_tcp_recvd) refers to api_msg.o(.text.lwip_netconn_do_recv) for lwip_netconn_do_recv
    api_lib.o(.text.netconn_tcp_recvd) refers to tcpip.o(.text.tcpip_send_msg_wait_sem) for tcpip_send_msg_wait_sem
    api_lib.o(.text.netconn_tcp_recvd) refers to api_lib.o(.rodata.str1.1) for .L.str
    api_lib.o(.text.netconn_tcp_recvd) refers to printf8.o(i.__0printf$8) for __2printf
    api_lib.o(.ARM.exidx.text.netconn_tcp_recvd) refers to api_lib.o(.text.netconn_tcp_recvd) for [Anonymous Symbol]
    api_lib.o(.text.netconn_recv_tcp_pbuf) refers to api_lib.o(.text.netconn_recv_data_tcp) for netconn_recv_data_tcp
    api_lib.o(.text.netconn_recv_tcp_pbuf) refers to api_lib.o(.rodata.str1.1) for .L.str
    api_lib.o(.text.netconn_recv_tcp_pbuf) refers to printf8.o(i.__0printf$8) for __2printf
    api_lib.o(.ARM.exidx.text.netconn_recv_tcp_pbuf) refers to api_lib.o(.text.netconn_recv_tcp_pbuf) for [Anonymous Symbol]
    api_lib.o(.text.netconn_recv_data_tcp) refers to api_lib.o(.text.netconn_recv_data) for netconn_recv_data
    api_lib.o(.text.netconn_recv_data_tcp) refers to api_msg.o(.text.lwip_netconn_do_recv) for lwip_netconn_do_recv
    api_lib.o(.text.netconn_recv_data_tcp) refers to tcpip.o(.text.tcpip_send_msg_wait_sem) for tcpip_send_msg_wait_sem
    api_lib.o(.text.netconn_recv_data_tcp) refers to api_msg.o(.text.lwip_netconn_do_close) for lwip_netconn_do_close
    api_lib.o(.text.netconn_recv_data_tcp) refers to sys_arch.o(.text.sys_arch_protect) for sys_arch_protect
    api_lib.o(.text.netconn_recv_data_tcp) refers to sys_arch.o(.text.sys_arch_unprotect) for sys_arch_unprotect
    api_lib.o(.text.netconn_recv_data_tcp) refers to api_lib.o(.rodata.str1.1) for .L.str
    api_lib.o(.text.netconn_recv_data_tcp) refers to printf8.o(i.__0printf$8) for __2printf
    api_lib.o(.ARM.exidx.text.netconn_recv_data_tcp) refers to api_lib.o(.text.netconn_recv_data_tcp) for [Anonymous Symbol]
    api_lib.o(.text.netconn_recv_tcp_pbuf_flags) refers to api_lib.o(.text.netconn_recv_data_tcp) for netconn_recv_data_tcp
    api_lib.o(.text.netconn_recv_tcp_pbuf_flags) refers to api_lib.o(.rodata.str1.1) for .L.str
    api_lib.o(.text.netconn_recv_tcp_pbuf_flags) refers to printf8.o(i.__0printf$8) for __2printf
    api_lib.o(.ARM.exidx.text.netconn_recv_tcp_pbuf_flags) refers to api_lib.o(.text.netconn_recv_tcp_pbuf_flags) for [Anonymous Symbol]
    api_lib.o(.text.netconn_recv_udp_raw_netbuf) refers to api_lib.o(.text.netconn_recv_data) for netconn_recv_data
    api_lib.o(.text.netconn_recv_udp_raw_netbuf) refers to api_lib.o(.rodata.str1.1) for .L.str
    api_lib.o(.text.netconn_recv_udp_raw_netbuf) refers to printf8.o(i.__0printf$8) for __2printf
    api_lib.o(.ARM.exidx.text.netconn_recv_udp_raw_netbuf) refers to api_lib.o(.text.netconn_recv_udp_raw_netbuf) for [Anonymous Symbol]
    api_lib.o(.text.netconn_recv_data) refers to sys_arch.o(.text.sys_arch_mbox_tryfetch) for sys_arch_mbox_tryfetch
    api_lib.o(.text.netconn_recv_data) refers to sys_arch.o(.text.sys_arch_protect) for sys_arch_protect
    api_lib.o(.text.netconn_recv_data) refers to sys_arch.o(.text.sys_arch_unprotect) for sys_arch_unprotect
    api_lib.o(.text.netconn_recv_data) refers to api_lib.o(.rodata.str1.1) for .L.str
    api_lib.o(.text.netconn_recv_data) refers to printf8.o(i.__0printf$8) for __2printf
    api_lib.o(.text.netconn_recv_data) refers to sys_arch.o(.text.sys_arch_mbox_fetch) for sys_arch_mbox_fetch
    api_lib.o(.text.netconn_recv_data) refers to api_msg.o(.text.lwip_netconn_is_err_msg) for lwip_netconn_is_err_msg
    api_lib.o(.ARM.exidx.text.netconn_recv_data) refers to api_lib.o(.text.netconn_recv_data) for [Anonymous Symbol]
    api_lib.o(.text.netconn_recv_udp_raw_netbuf_flags) refers to api_lib.o(.text.netconn_recv_data) for netconn_recv_data
    api_lib.o(.text.netconn_recv_udp_raw_netbuf_flags) refers to api_lib.o(.rodata.str1.1) for .L.str
    api_lib.o(.text.netconn_recv_udp_raw_netbuf_flags) refers to printf8.o(i.__0printf$8) for __2printf
    api_lib.o(.ARM.exidx.text.netconn_recv_udp_raw_netbuf_flags) refers to api_lib.o(.text.netconn_recv_udp_raw_netbuf_flags) for [Anonymous Symbol]
    api_lib.o(.text.netconn_recv) refers to memp.o(.text.memp_malloc) for memp_malloc
    api_lib.o(.text.netconn_recv) refers to api_lib.o(.text.netconn_recv_data_tcp) for netconn_recv_data_tcp
    api_lib.o(.text.netconn_recv) refers to memp.o(.text.memp_free) for memp_free
    api_lib.o(.text.netconn_recv) refers to api_lib.o(.rodata.str1.1) for .L.str
    api_lib.o(.text.netconn_recv) refers to printf8.o(i.__0printf$8) for __2printf
    api_lib.o(.text.netconn_recv) refers to api_lib.o(.text.netconn_recv_data) for netconn_recv_data
    api_lib.o(.ARM.exidx.text.netconn_recv) refers to api_lib.o(.text.netconn_recv) for [Anonymous Symbol]
    api_lib.o(.text.netconn_sendto) refers to api_msg.o(.text.lwip_netconn_do_send) for lwip_netconn_do_send
    api_lib.o(.text.netconn_sendto) refers to tcpip.o(.text.tcpip_send_msg_wait_sem) for tcpip_send_msg_wait_sem
    api_lib.o(.text.netconn_sendto) refers to api_lib.o(.rodata.str1.1) for .L.str
    api_lib.o(.text.netconn_sendto) refers to printf8.o(i.__0printf$8) for __2printf
    api_lib.o(.ARM.exidx.text.netconn_sendto) refers to api_lib.o(.text.netconn_sendto) for [Anonymous Symbol]
    api_lib.o(.text.netconn_send) refers to api_msg.o(.text.lwip_netconn_do_send) for lwip_netconn_do_send
    api_lib.o(.text.netconn_send) refers to tcpip.o(.text.tcpip_send_msg_wait_sem) for tcpip_send_msg_wait_sem
    api_lib.o(.text.netconn_send) refers to api_lib.o(.rodata.str1.1) for .L.str
    api_lib.o(.text.netconn_send) refers to printf8.o(i.__0printf$8) for __2printf
    api_lib.o(.ARM.exidx.text.netconn_send) refers to api_lib.o(.text.netconn_send) for [Anonymous Symbol]
    api_lib.o(.text.netconn_write_partly) refers to api_lib.o(.text.netconn_write_vectors_partly) for netconn_write_vectors_partly
    api_lib.o(.ARM.exidx.text.netconn_write_partly) refers to api_lib.o(.text.netconn_write_partly) for [Anonymous Symbol]
    api_lib.o(.text.netconn_write_vectors_partly) refers to api_msg.o(.text.lwip_netconn_do_write) for lwip_netconn_do_write
    api_lib.o(.text.netconn_write_vectors_partly) refers to tcpip.o(.text.tcpip_send_msg_wait_sem) for tcpip_send_msg_wait_sem
    api_lib.o(.text.netconn_write_vectors_partly) refers to api_lib.o(.rodata.str1.1) for .L.str
    api_lib.o(.text.netconn_write_vectors_partly) refers to printf8.o(i.__0printf$8) for __2printf
    api_lib.o(.ARM.exidx.text.netconn_write_vectors_partly) refers to api_lib.o(.text.netconn_write_vectors_partly) for [Anonymous Symbol]
    api_lib.o(.text.netconn_close) refers to api_msg.o(.text.lwip_netconn_do_close) for lwip_netconn_do_close
    api_lib.o(.text.netconn_close) refers to tcpip.o(.text.tcpip_send_msg_wait_sem) for tcpip_send_msg_wait_sem
    api_lib.o(.text.netconn_close) refers to api_lib.o(.rodata.str1.1) for .L.str
    api_lib.o(.text.netconn_close) refers to printf8.o(i.__0printf$8) for __2printf
    api_lib.o(.ARM.exidx.text.netconn_close) refers to api_lib.o(.text.netconn_close) for [Anonymous Symbol]
    api_lib.o(.text.netconn_shutdown) refers to api_msg.o(.text.lwip_netconn_do_close) for lwip_netconn_do_close
    api_lib.o(.text.netconn_shutdown) refers to tcpip.o(.text.tcpip_send_msg_wait_sem) for tcpip_send_msg_wait_sem
    api_lib.o(.text.netconn_shutdown) refers to api_lib.o(.rodata.str1.1) for .L.str
    api_lib.o(.text.netconn_shutdown) refers to printf8.o(i.__0printf$8) for __2printf
    api_lib.o(.ARM.exidx.text.netconn_shutdown) refers to api_lib.o(.text.netconn_shutdown) for [Anonymous Symbol]
    api_msg.o(.text.lwip_netconn_is_err_msg) refers to api_msg.o(.rodata.str1.1) for .L.str
    api_msg.o(.text.lwip_netconn_is_err_msg) refers to printf8.o(i.__0printf$8) for __2printf
    api_msg.o(.text.lwip_netconn_is_err_msg) refers to api_msg.o(.rodata.netconn_aborted) for netconn_aborted
    api_msg.o(.text.lwip_netconn_is_err_msg) refers to api_msg.o(.rodata.netconn_reset) for netconn_reset
    api_msg.o(.text.lwip_netconn_is_err_msg) refers to api_msg.o(.rodata.netconn_closed) for netconn_closed
    api_msg.o(.ARM.exidx.text.lwip_netconn_is_err_msg) refers to api_msg.o(.text.lwip_netconn_is_err_msg) for [Anonymous Symbol]
    api_msg.o(.text.lwip_netconn_do_newconn) refers to udp.o(.text.udp_new_ip_type) for udp_new_ip_type
    api_msg.o(.text.lwip_netconn_do_newconn) refers to api_msg.o(.text.recv_udp) for recv_udp
    api_msg.o(.text.lwip_netconn_do_newconn) refers to udp.o(.text.udp_recv) for udp_recv
    api_msg.o(.text.lwip_netconn_do_newconn) refers to tcp.o(.text.tcp_new_ip_type) for tcp_new_ip_type
    api_msg.o(.text.lwip_netconn_do_newconn) refers to tcp.o(.text.tcp_arg) for tcp_arg
    api_msg.o(.text.lwip_netconn_do_newconn) refers to api_msg.o(.text.recv_tcp) for recv_tcp
    api_msg.o(.text.lwip_netconn_do_newconn) refers to tcp.o(.text.tcp_recv) for tcp_recv
    api_msg.o(.text.lwip_netconn_do_newconn) refers to api_msg.o(.text.sent_tcp) for sent_tcp
    api_msg.o(.text.lwip_netconn_do_newconn) refers to tcp.o(.text.tcp_sent) for tcp_sent
    api_msg.o(.text.lwip_netconn_do_newconn) refers to api_msg.o(.text.poll_tcp) for poll_tcp
    api_msg.o(.text.lwip_netconn_do_newconn) refers to tcp.o(.text.tcp_poll) for tcp_poll
    api_msg.o(.text.lwip_netconn_do_newconn) refers to api_msg.o(.text.err_tcp) for err_tcp
    api_msg.o(.text.lwip_netconn_do_newconn) refers to tcp.o(.text.tcp_err) for tcp_err
    api_msg.o(.ARM.exidx.text.lwip_netconn_do_newconn) refers to api_msg.o(.text.lwip_netconn_do_newconn) for [Anonymous Symbol]
    api_msg.o(.text.netconn_alloc) refers to memp.o(.text.memp_malloc) for memp_malloc
    api_msg.o(.text.netconn_alloc) refers to sys_arch.o(.text.sys_mbox_new) for sys_mbox_new
    api_msg.o(.text.netconn_alloc) refers to sys_arch.o(.text.sys_sem_new) for sys_sem_new
    api_msg.o(.text.netconn_alloc) refers to sys_arch.o(.text.sys_mbox_free) for sys_mbox_free
    api_msg.o(.text.netconn_alloc) refers to api_msg.o(.rodata.str1.1) for .L.str
    api_msg.o(.text.netconn_alloc) refers to printf8.o(i.__0printf$8) for __2printf
    api_msg.o(.text.netconn_alloc) refers to memp.o(.text.memp_free) for memp_free
    api_msg.o(.ARM.exidx.text.netconn_alloc) refers to api_msg.o(.text.netconn_alloc) for [Anonymous Symbol]
    api_msg.o(.text.netconn_free) refers to api_msg.o(.rodata.str1.1) for .L.str
    api_msg.o(.text.netconn_free) refers to printf8.o(i.__0printf$8) for __2printf
    api_msg.o(.text.netconn_free) refers to sys_arch.o(.text.sys_sem_free) for sys_sem_free
    api_msg.o(.text.netconn_free) refers to memp.o(.text.memp_free) for memp_free
    api_msg.o(.ARM.exidx.text.netconn_free) refers to api_msg.o(.text.netconn_free) for [Anonymous Symbol]
    api_msg.o(.text.lwip_netconn_do_delconn) refers to api_msg.o(.rodata.str1.1) for .L.str
    api_msg.o(.text.lwip_netconn_do_delconn) refers to printf8.o(i.__0printf$8) for __2printf
    api_msg.o(.text.lwip_netconn_do_delconn) refers to api_msg.o(.text.netconn_drain) for netconn_drain
    api_msg.o(.text.lwip_netconn_do_delconn) refers to udp.o(.text.udp_remove) for udp_remove
    api_msg.o(.text.lwip_netconn_do_delconn) refers to api_msg.o(.text.lwip_netconn_do_close_internal) for lwip_netconn_do_close_internal
    api_msg.o(.text.lwip_netconn_do_delconn) refers to tcpip.o(.bss.lock_tcpip_core) for lock_tcpip_core
    api_msg.o(.text.lwip_netconn_do_delconn) refers to sys_arch.o(.text.sys_mutex_unlock) for sys_mutex_unlock
    api_msg.o(.text.lwip_netconn_do_delconn) refers to sys_arch.o(.text.sys_arch_sem_wait) for sys_arch_sem_wait
    api_msg.o(.text.lwip_netconn_do_delconn) refers to sys_arch.o(.text.sys_mutex_lock) for sys_mutex_lock
    api_msg.o(.ARM.exidx.text.lwip_netconn_do_delconn) refers to api_msg.o(.text.lwip_netconn_do_delconn) for [Anonymous Symbol]
    api_msg.o(.text.netconn_drain) refers to sys_arch.o(.text.sys_arch_mbox_tryfetch) for sys_arch_mbox_tryfetch
    api_msg.o(.text.netconn_drain) refers to api_msg.o(.rodata.netconn_closed) for netconn_closed
    api_msg.o(.text.netconn_drain) refers to api_msg.o(.rodata.netconn_aborted) for netconn_aborted
    api_msg.o(.text.netconn_drain) refers to api_msg.o(.rodata.netconn_reset) for netconn_reset
    api_msg.o(.text.netconn_drain) refers to netbuf.o(.text.netbuf_delete) for netbuf_delete
    api_msg.o(.text.netconn_drain) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    api_msg.o(.text.netconn_drain) refers to sys_arch.o(.text.sys_mbox_free) for sys_mbox_free
    api_msg.o(.text.netconn_drain) refers to api_msg.o(.text.netconn_free) for netconn_free
    api_msg.o(.text.netconn_drain) refers to tcp.o(.text.tcp_abort) for tcp_abort
    api_msg.o(.ARM.exidx.text.netconn_drain) refers to api_msg.o(.text.netconn_drain) for [Anonymous Symbol]
    api_msg.o(.text.lwip_netconn_do_close_internal) refers to api_msg.o(.rodata.str1.1) for .L.str
    api_msg.o(.text.lwip_netconn_do_close_internal) refers to printf8.o(i.__0printf$8) for __2printf
    api_msg.o(.text.lwip_netconn_do_close_internal) refers to tcp.o(.text.tcp_arg) for tcp_arg
    api_msg.o(.text.lwip_netconn_do_close_internal) refers to tcp.o(.text.tcp_accept) for tcp_accept
    api_msg.o(.text.lwip_netconn_do_close_internal) refers to tcp.o(.text.tcp_recv) for tcp_recv
    api_msg.o(.text.lwip_netconn_do_close_internal) refers to tcp.o(.text.tcp_sent) for tcp_sent
    api_msg.o(.text.lwip_netconn_do_close_internal) refers to tcp.o(.text.tcp_poll) for tcp_poll
    api_msg.o(.text.lwip_netconn_do_close_internal) refers to tcp.o(.text.tcp_err) for tcp_err
    api_msg.o(.text.lwip_netconn_do_close_internal) refers to tcp.o(.text.tcp_shutdown) for tcp_shutdown
    api_msg.o(.text.lwip_netconn_do_close_internal) refers to tcp.o(.text.tcp_close) for tcp_close
    api_msg.o(.text.lwip_netconn_do_close_internal) refers to tcp.o(.text.tcp_abort) for tcp_abort
    api_msg.o(.text.lwip_netconn_do_close_internal) refers to api_msg.o(.text.sent_tcp) for sent_tcp
    api_msg.o(.text.lwip_netconn_do_close_internal) refers to api_msg.o(.text.poll_tcp) for poll_tcp
    api_msg.o(.text.lwip_netconn_do_close_internal) refers to api_msg.o(.text.err_tcp) for err_tcp
    api_msg.o(.text.lwip_netconn_do_close_internal) refers to sys_arch.o(.text.sys_sem_signal) for sys_sem_signal
    api_msg.o(.ARM.exidx.text.lwip_netconn_do_close_internal) refers to api_msg.o(.text.lwip_netconn_do_close_internal) for [Anonymous Symbol]
    api_msg.o(.text.lwip_netconn_do_bind) refers to udp.o(.text.udp_bind) for udp_bind
    api_msg.o(.text.lwip_netconn_do_bind) refers to tcp.o(.text.tcp_bind) for tcp_bind
    api_msg.o(.ARM.exidx.text.lwip_netconn_do_bind) refers to api_msg.o(.text.lwip_netconn_do_bind) for [Anonymous Symbol]
    api_msg.o(.text.lwip_netconn_do_bind_if) refers to netif.o(.text.netif_get_by_index) for netif_get_by_index
    api_msg.o(.text.lwip_netconn_do_bind_if) refers to udp.o(.text.udp_bind_netif) for udp_bind_netif
    api_msg.o(.text.lwip_netconn_do_bind_if) refers to tcp.o(.text.tcp_bind_netif) for tcp_bind_netif
    api_msg.o(.ARM.exidx.text.lwip_netconn_do_bind_if) refers to api_msg.o(.text.lwip_netconn_do_bind_if) for [Anonymous Symbol]
    api_msg.o(.text.lwip_netconn_do_connect) refers to udp.o(.text.udp_connect) for udp_connect
    api_msg.o(.text.lwip_netconn_do_connect) refers to api_msg.o(.rodata.str1.1) for .L.str
    api_msg.o(.text.lwip_netconn_do_connect) refers to printf8.o(i.__0printf$8) for __2printf
    api_msg.o(.text.lwip_netconn_do_connect) refers to tcp.o(.text.tcp_arg) for tcp_arg
    api_msg.o(.text.lwip_netconn_do_connect) refers to api_msg.o(.text.recv_tcp) for recv_tcp
    api_msg.o(.text.lwip_netconn_do_connect) refers to tcp.o(.text.tcp_recv) for tcp_recv
    api_msg.o(.text.lwip_netconn_do_connect) refers to api_msg.o(.text.sent_tcp) for sent_tcp
    api_msg.o(.text.lwip_netconn_do_connect) refers to tcp.o(.text.tcp_sent) for tcp_sent
    api_msg.o(.text.lwip_netconn_do_connect) refers to api_msg.o(.text.poll_tcp) for poll_tcp
    api_msg.o(.text.lwip_netconn_do_connect) refers to tcp.o(.text.tcp_poll) for tcp_poll
    api_msg.o(.text.lwip_netconn_do_connect) refers to api_msg.o(.text.err_tcp) for err_tcp
    api_msg.o(.text.lwip_netconn_do_connect) refers to tcp.o(.text.tcp_err) for tcp_err
    api_msg.o(.text.lwip_netconn_do_connect) refers to api_msg.o(.text.lwip_netconn_do_connected) for lwip_netconn_do_connected
    api_msg.o(.text.lwip_netconn_do_connect) refers to tcp.o(.text.tcp_connect) for tcp_connect
    api_msg.o(.text.lwip_netconn_do_connect) refers to tcpip.o(.bss.lock_tcpip_core) for lock_tcpip_core
    api_msg.o(.text.lwip_netconn_do_connect) refers to sys_arch.o(.text.sys_mutex_unlock) for sys_mutex_unlock
    api_msg.o(.text.lwip_netconn_do_connect) refers to sys_arch.o(.text.sys_arch_sem_wait) for sys_arch_sem_wait
    api_msg.o(.text.lwip_netconn_do_connect) refers to sys_arch.o(.text.sys_mutex_lock) for sys_mutex_lock
    api_msg.o(.ARM.exidx.text.lwip_netconn_do_connect) refers to api_msg.o(.text.lwip_netconn_do_connect) for [Anonymous Symbol]
    api_msg.o(.text.lwip_netconn_do_connected) refers to api_msg.o(.rodata.str1.1) for .L.str
    api_msg.o(.text.lwip_netconn_do_connected) refers to printf8.o(i.__0printf$8) for __2printf
    api_msg.o(.text.lwip_netconn_do_connected) refers to tcp.o(.text.tcp_arg) for tcp_arg
    api_msg.o(.text.lwip_netconn_do_connected) refers to api_msg.o(.text.recv_tcp) for recv_tcp
    api_msg.o(.text.lwip_netconn_do_connected) refers to tcp.o(.text.tcp_recv) for tcp_recv
    api_msg.o(.text.lwip_netconn_do_connected) refers to api_msg.o(.text.sent_tcp) for sent_tcp
    api_msg.o(.text.lwip_netconn_do_connected) refers to tcp.o(.text.tcp_sent) for tcp_sent
    api_msg.o(.text.lwip_netconn_do_connected) refers to api_msg.o(.text.poll_tcp) for poll_tcp
    api_msg.o(.text.lwip_netconn_do_connected) refers to tcp.o(.text.tcp_poll) for tcp_poll
    api_msg.o(.text.lwip_netconn_do_connected) refers to api_msg.o(.text.err_tcp) for err_tcp
    api_msg.o(.text.lwip_netconn_do_connected) refers to tcp.o(.text.tcp_err) for tcp_err
    api_msg.o(.text.lwip_netconn_do_connected) refers to sys_arch.o(.text.sys_sem_signal) for sys_sem_signal
    api_msg.o(.ARM.exidx.text.lwip_netconn_do_connected) refers to api_msg.o(.text.lwip_netconn_do_connected) for [Anonymous Symbol]
    api_msg.o(.text.lwip_netconn_do_disconnect) refers to udp.o(.text.udp_disconnect) for udp_disconnect
    api_msg.o(.ARM.exidx.text.lwip_netconn_do_disconnect) refers to api_msg.o(.text.lwip_netconn_do_disconnect) for [Anonymous Symbol]
    api_msg.o(.text.lwip_netconn_do_listen) refers to tcp.o(.text.tcp_listen_with_backlog_and_err) for tcp_listen_with_backlog_and_err
    api_msg.o(.text.lwip_netconn_do_listen) refers to sys_arch.o(.text.sys_mbox_free) for sys_mbox_free
    api_msg.o(.text.lwip_netconn_do_listen) refers to sys_arch.o(.text.sys_mbox_new) for sys_mbox_new
    api_msg.o(.text.lwip_netconn_do_listen) refers to tcp.o(.text.tcp_close) for tcp_close
    api_msg.o(.text.lwip_netconn_do_listen) refers to tcp.o(.text.tcp_arg) for tcp_arg
    api_msg.o(.text.lwip_netconn_do_listen) refers to api_msg.o(.text.accept_function) for accept_function
    api_msg.o(.text.lwip_netconn_do_listen) refers to tcp.o(.text.tcp_accept) for tcp_accept
    api_msg.o(.ARM.exidx.text.lwip_netconn_do_listen) refers to api_msg.o(.text.lwip_netconn_do_listen) for [Anonymous Symbol]
    api_msg.o(.text.accept_function) refers to api_msg.o(.rodata.str1.1) for .L.str
    api_msg.o(.text.accept_function) refers to printf8.o(i.__0printf$8) for __2printf
    api_msg.o(.text.accept_function) refers to api_msg.o(.text.netconn_alloc) for netconn_alloc
    api_msg.o(.text.accept_function) refers to tcp.o(.text.tcp_arg) for tcp_arg
    api_msg.o(.text.accept_function) refers to api_msg.o(.text.recv_tcp) for recv_tcp
    api_msg.o(.text.accept_function) refers to tcp.o(.text.tcp_recv) for tcp_recv
    api_msg.o(.text.accept_function) refers to api_msg.o(.text.sent_tcp) for sent_tcp
    api_msg.o(.text.accept_function) refers to tcp.o(.text.tcp_sent) for tcp_sent
    api_msg.o(.text.accept_function) refers to api_msg.o(.text.poll_tcp) for poll_tcp
    api_msg.o(.text.accept_function) refers to tcp.o(.text.tcp_poll) for tcp_poll
    api_msg.o(.text.accept_function) refers to api_msg.o(.text.err_tcp) for err_tcp
    api_msg.o(.text.accept_function) refers to tcp.o(.text.tcp_err) for tcp_err
    api_msg.o(.text.accept_function) refers to sys_arch.o(.text.sys_mbox_trypost) for sys_mbox_trypost
    api_msg.o(.text.accept_function) refers to sys_arch.o(.text.sys_mbox_free) for sys_mbox_free
    api_msg.o(.text.accept_function) refers to api_msg.o(.text.netconn_free) for netconn_free
    api_msg.o(.text.accept_function) refers to api_msg.o(.rodata.netconn_aborted) for netconn_aborted
    api_msg.o(.ARM.exidx.text.accept_function) refers to api_msg.o(.text.accept_function) for [Anonymous Symbol]
    api_msg.o(.text.lwip_netconn_do_send) refers to api_lib.o(.text.netconn_err) for netconn_err
    api_msg.o(.text.lwip_netconn_do_send) refers to udp.o(.text.udp_sendto) for udp_sendto
    api_msg.o(.text.lwip_netconn_do_send) refers to udp.o(.text.udp_send) for udp_send
    api_msg.o(.ARM.exidx.text.lwip_netconn_do_send) refers to api_msg.o(.text.lwip_netconn_do_send) for [Anonymous Symbol]
    api_msg.o(.text.lwip_netconn_do_recv) refers to tcp.o(.text.tcp_recved) for tcp_recved
    api_msg.o(.ARM.exidx.text.lwip_netconn_do_recv) refers to api_msg.o(.text.lwip_netconn_do_recv) for [Anonymous Symbol]
    api_msg.o(.text.lwip_netconn_do_write) refers to api_lib.o(.text.netconn_err) for netconn_err
    api_msg.o(.text.lwip_netconn_do_write) refers to api_msg.o(.rodata.str1.1) for .L.str
    api_msg.o(.text.lwip_netconn_do_write) refers to printf8.o(i.__0printf$8) for __2printf
    api_msg.o(.text.lwip_netconn_do_write) refers to api_msg.o(.text.lwip_netconn_do_writemore) for lwip_netconn_do_writemore
    api_msg.o(.text.lwip_netconn_do_write) refers to tcpip.o(.bss.lock_tcpip_core) for lock_tcpip_core
    api_msg.o(.text.lwip_netconn_do_write) refers to sys_arch.o(.text.sys_mutex_unlock) for sys_mutex_unlock
    api_msg.o(.text.lwip_netconn_do_write) refers to sys_arch.o(.text.sys_arch_sem_wait) for sys_arch_sem_wait
    api_msg.o(.text.lwip_netconn_do_write) refers to sys_arch.o(.text.sys_mutex_lock) for sys_mutex_lock
    api_msg.o(.ARM.exidx.text.lwip_netconn_do_write) refers to api_msg.o(.text.lwip_netconn_do_write) for [Anonymous Symbol]
    api_msg.o(.text.lwip_netconn_do_writemore) refers to api_msg.o(.rodata.str1.1) for .L.str
    api_msg.o(.text.lwip_netconn_do_writemore) refers to printf8.o(i.__0printf$8) for __2printf
    api_msg.o(.text.lwip_netconn_do_writemore) refers to tcp_out.o(.text.tcp_write) for tcp_write
    api_msg.o(.text.lwip_netconn_do_writemore) refers to tcp_out.o(.text.tcp_output) for tcp_output
    api_msg.o(.text.lwip_netconn_do_writemore) refers to sys_arch.o(.text.sys_sem_signal) for sys_sem_signal
    api_msg.o(.ARM.exidx.text.lwip_netconn_do_writemore) refers to api_msg.o(.text.lwip_netconn_do_writemore) for [Anonymous Symbol]
    api_msg.o(.text.lwip_netconn_do_getaddr) refers to api_msg.o(.rodata.str1.1) for .L.str
    api_msg.o(.text.lwip_netconn_do_getaddr) refers to printf8.o(i.__0printf$8) for __2printf
    api_msg.o(.ARM.exidx.text.lwip_netconn_do_getaddr) refers to api_msg.o(.text.lwip_netconn_do_getaddr) for [Anonymous Symbol]
    api_msg.o(.text.lwip_netconn_do_close) refers to api_msg.o(.text.netconn_drain) for netconn_drain
    api_msg.o(.text.lwip_netconn_do_close) refers to api_msg.o(.rodata.str1.1) for .L.str
    api_msg.o(.text.lwip_netconn_do_close) refers to printf8.o(i.__0printf$8) for __2printf
    api_msg.o(.text.lwip_netconn_do_close) refers to api_msg.o(.text.lwip_netconn_do_close_internal) for lwip_netconn_do_close_internal
    api_msg.o(.text.lwip_netconn_do_close) refers to tcpip.o(.bss.lock_tcpip_core) for lock_tcpip_core
    api_msg.o(.text.lwip_netconn_do_close) refers to sys_arch.o(.text.sys_mutex_unlock) for sys_mutex_unlock
    api_msg.o(.text.lwip_netconn_do_close) refers to sys_arch.o(.text.sys_arch_sem_wait) for sys_arch_sem_wait
    api_msg.o(.text.lwip_netconn_do_close) refers to sys_arch.o(.text.sys_mutex_lock) for sys_mutex_lock
    api_msg.o(.ARM.exidx.text.lwip_netconn_do_close) refers to api_msg.o(.text.lwip_netconn_do_close) for [Anonymous Symbol]
    api_msg.o(.text.recv_udp) refers to api_msg.o(.rodata.str1.1) for .L.str
    api_msg.o(.text.recv_udp) refers to printf8.o(i.__0printf$8) for __2printf
    api_msg.o(.text.recv_udp) refers to memp.o(.text.memp_malloc) for memp_malloc
    api_msg.o(.text.recv_udp) refers to sys_arch.o(.text.sys_mbox_trypost) for sys_mbox_trypost
    api_msg.o(.text.recv_udp) refers to netbuf.o(.text.netbuf_delete) for netbuf_delete
    api_msg.o(.text.recv_udp) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    api_msg.o(.ARM.exidx.text.recv_udp) refers to api_msg.o(.text.recv_udp) for [Anonymous Symbol]
    api_msg.o(.text.sent_tcp) refers to api_msg.o(.text.lwip_netconn_do_writemore) for lwip_netconn_do_writemore
    api_msg.o(.text.sent_tcp) refers to api_msg.o(.rodata.str1.1) for .L.str
    api_msg.o(.text.sent_tcp) refers to printf8.o(i.__0printf$8) for __2printf
    api_msg.o(.text.sent_tcp) refers to api_msg.o(.text.lwip_netconn_do_close_internal) for lwip_netconn_do_close_internal
    api_msg.o(.ARM.exidx.text.sent_tcp) refers to api_msg.o(.text.sent_tcp) for [Anonymous Symbol]
    api_msg.o(.text.poll_tcp) refers to api_msg.o(.rodata.str1.1) for .L.str
    api_msg.o(.text.poll_tcp) refers to printf8.o(i.__0printf$8) for __2printf
    api_msg.o(.text.poll_tcp) refers to api_msg.o(.text.lwip_netconn_do_writemore) for lwip_netconn_do_writemore
    api_msg.o(.text.poll_tcp) refers to api_msg.o(.text.lwip_netconn_do_close_internal) for lwip_netconn_do_close_internal
    api_msg.o(.ARM.exidx.text.poll_tcp) refers to api_msg.o(.text.poll_tcp) for [Anonymous Symbol]
    api_msg.o(.text.err_tcp) refers to api_msg.o(.rodata.str1.1) for .L.str
    api_msg.o(.text.err_tcp) refers to printf8.o(i.__0printf$8) for __2printf
    api_msg.o(.text.err_tcp) refers to sys_arch.o(.text.sys_arch_protect) for sys_arch_protect
    api_msg.o(.text.err_tcp) refers to sys_arch.o(.text.sys_arch_unprotect) for sys_arch_unprotect
    api_msg.o(.text.err_tcp) refers to api_msg.o(.rodata.netconn_aborted) for netconn_aborted
    api_msg.o(.text.err_tcp) refers to api_msg.o(.rodata.netconn_closed) for netconn_closed
    api_msg.o(.text.err_tcp) refers to api_msg.o(.rodata.netconn_reset) for netconn_reset
    api_msg.o(.text.err_tcp) refers to sys_arch.o(.text.sys_mbox_trypost) for sys_mbox_trypost
    api_msg.o(.text.err_tcp) refers to sys_arch.o(.text.sys_sem_signal) for sys_sem_signal
    api_msg.o(.ARM.exidx.text.err_tcp) refers to api_msg.o(.text.err_tcp) for [Anonymous Symbol]
    api_msg.o(.text.recv_tcp) refers to api_msg.o(.rodata.str1.1) for .L.str
    api_msg.o(.text.recv_tcp) refers to printf8.o(i.__0printf$8) for __2printf
    api_msg.o(.text.recv_tcp) refers to api_msg.o(.rodata.netconn_closed) for netconn_closed
    api_msg.o(.text.recv_tcp) refers to sys_arch.o(.text.sys_mbox_trypost) for sys_mbox_trypost
    api_msg.o(.text.recv_tcp) refers to tcp.o(.text.tcp_recved) for tcp_recved
    api_msg.o(.text.recv_tcp) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    api_msg.o(.ARM.exidx.text.recv_tcp) refers to api_msg.o(.text.recv_tcp) for [Anonymous Symbol]
    err.o(.text.err_to_errno) refers to err.o(.rodata.err_to_errno_table) for err_to_errno_table
    err.o(.ARM.exidx.text.err_to_errno) refers to err.o(.text.err_to_errno) for [Anonymous Symbol]
    netbuf.o(.text.netbuf_new) refers to memp.o(.text.memp_malloc) for memp_malloc
    netbuf.o(.ARM.exidx.text.netbuf_new) refers to netbuf.o(.text.netbuf_new) for [Anonymous Symbol]
    netbuf.o(.text.netbuf_delete) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    netbuf.o(.text.netbuf_delete) refers to memp.o(.text.memp_free) for memp_free
    netbuf.o(.ARM.exidx.text.netbuf_delete) refers to netbuf.o(.text.netbuf_delete) for [Anonymous Symbol]
    netbuf.o(.text.netbuf_alloc) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    netbuf.o(.text.netbuf_alloc) refers to pbuf.o(.text.pbuf_alloc) for pbuf_alloc
    netbuf.o(.text.netbuf_alloc) refers to netbuf.o(.rodata.str1.1) for .L.str
    netbuf.o(.text.netbuf_alloc) refers to printf8.o(i.__0printf$8) for __2printf
    netbuf.o(.ARM.exidx.text.netbuf_alloc) refers to netbuf.o(.text.netbuf_alloc) for [Anonymous Symbol]
    netbuf.o(.text.netbuf_free) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    netbuf.o(.text.netbuf_free) refers to netbuf.o(.rodata.str1.1) for .L.str
    netbuf.o(.text.netbuf_free) refers to printf8.o(i.__0printf$8) for __2printf
    netbuf.o(.ARM.exidx.text.netbuf_free) refers to netbuf.o(.text.netbuf_free) for [Anonymous Symbol]
    netbuf.o(.text.netbuf_ref) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    netbuf.o(.text.netbuf_ref) refers to pbuf.o(.text.pbuf_alloc) for pbuf_alloc
    netbuf.o(.text.netbuf_ref) refers to netbuf.o(.rodata.str1.1) for .L.str
    netbuf.o(.text.netbuf_ref) refers to printf8.o(i.__0printf$8) for __2printf
    netbuf.o(.ARM.exidx.text.netbuf_ref) refers to netbuf.o(.text.netbuf_ref) for [Anonymous Symbol]
    netbuf.o(.text.netbuf_chain) refers to pbuf.o(.text.pbuf_cat) for pbuf_cat
    netbuf.o(.text.netbuf_chain) refers to memp.o(.text.memp_free) for memp_free
    netbuf.o(.text.netbuf_chain) refers to netbuf.o(.rodata.str1.1) for .L.str
    netbuf.o(.text.netbuf_chain) refers to printf8.o(i.__0printf$8) for __2printf
    netbuf.o(.ARM.exidx.text.netbuf_chain) refers to netbuf.o(.text.netbuf_chain) for [Anonymous Symbol]
    netbuf.o(.text.netbuf_data) refers to netbuf.o(.rodata.str1.1) for .L.str
    netbuf.o(.text.netbuf_data) refers to printf8.o(i.__0printf$8) for __2printf
    netbuf.o(.ARM.exidx.text.netbuf_data) refers to netbuf.o(.text.netbuf_data) for [Anonymous Symbol]
    netbuf.o(.text.netbuf_next) refers to netbuf.o(.rodata.str1.1) for .L.str
    netbuf.o(.text.netbuf_next) refers to printf8.o(i.__0printf$8) for __2printf
    netbuf.o(.ARM.exidx.text.netbuf_next) refers to netbuf.o(.text.netbuf_next) for [Anonymous Symbol]
    netbuf.o(.text.netbuf_first) refers to netbuf.o(.rodata.str1.1) for .L.str
    netbuf.o(.text.netbuf_first) refers to printf8.o(i.__0printf$8) for __2printf
    netbuf.o(.ARM.exidx.text.netbuf_first) refers to netbuf.o(.text.netbuf_first) for [Anonymous Symbol]
    sockets.o(.ARM.exidx.text.lwip_socket_thread_init) refers to sockets.o(.text.lwip_socket_thread_init) for [Anonymous Symbol]
    sockets.o(.ARM.exidx.text.lwip_socket_thread_cleanup) refers to sockets.o(.text.lwip_socket_thread_cleanup) for [Anonymous Symbol]
    sockets.o(.text.lwip_socket_dbg_get_socket) refers to sockets.o(.bss.sockets) for sockets
    sockets.o(.ARM.exidx.text.lwip_socket_dbg_get_socket) refers to sockets.o(.text.lwip_socket_dbg_get_socket) for [Anonymous Symbol]
    sockets.o(.text.lwip_tryget_socket) refers to sockets.o(.bss.sockets) for sockets
    sockets.o(.ARM.exidx.text.lwip_tryget_socket) refers to sockets.o(.text.lwip_tryget_socket) for [Anonymous Symbol]
    sockets.o(.text.lwip_accept) refers to sockets.o(.bss.sockets) for sockets
    sockets.o(.text.lwip_accept) refers to sys_arch.o(.bss.errno) for errno
    sockets.o(.text.lwip_accept) refers to api_lib.o(.text.netconn_accept) for netconn_accept
    sockets.o(.text.lwip_accept) refers to sockets.o(.rodata.str1.1) for .L.str
    sockets.o(.text.lwip_accept) refers to printf8.o(i.__0printf$8) for __2printf
    sockets.o(.text.lwip_accept) refers to sys_arch.o(.text.sys_arch_protect) for sys_arch_protect
    sockets.o(.text.lwip_accept) refers to sys_arch.o(.text.sys_arch_unprotect) for sys_arch_unprotect
    sockets.o(.text.lwip_accept) refers to api_lib.o(.text.netconn_delete) for netconn_delete
    sockets.o(.text.lwip_accept) refers to tcpip.o(.bss.lock_tcpip_core) for lock_tcpip_core
    sockets.o(.text.lwip_accept) refers to sys_arch.o(.text.sys_mutex_lock) for sys_mutex_lock
    sockets.o(.text.lwip_accept) refers to sys_arch.o(.text.sys_mutex_unlock) for sys_mutex_unlock
    sockets.o(.text.lwip_accept) refers to api_lib.o(.text.netconn_getaddr) for netconn_getaddr
    sockets.o(.text.lwip_accept) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    sockets.o(.text.lwip_accept) refers to err.o(.text.err_to_errno) for err_to_errno
    sockets.o(.text.lwip_accept) refers to def.o(.text.lwip_htons) for lwip_htons
    sockets.o(.text.lwip_accept) refers to memmovea.o(.text) for __aeabi_memcpy
    sockets.o(.ARM.exidx.text.lwip_accept) refers to sockets.o(.text.lwip_accept) for [Anonymous Symbol]
    sockets.o(.text.lwip_bind) refers to sockets.o(.bss.sockets) for sockets
    sockets.o(.text.lwip_bind) refers to sys_arch.o(.bss.errno) for errno
    sockets.o(.text.lwip_bind) refers to sockets.o(.rodata.str1.1) for .L.str
    sockets.o(.text.lwip_bind) refers to printf8.o(i.__0printf$8) for __2printf
    sockets.o(.text.lwip_bind) refers to err.o(.text.err_to_errno) for err_to_errno
    sockets.o(.text.lwip_bind) refers to def.o(.text.lwip_htons) for lwip_htons
    sockets.o(.text.lwip_bind) refers to api_lib.o(.text.netconn_bind) for netconn_bind
    sockets.o(.ARM.exidx.text.lwip_bind) refers to sockets.o(.text.lwip_bind) for [Anonymous Symbol]
    sockets.o(.text.lwip_close) refers to sockets.o(.bss.sockets) for sockets
    sockets.o(.text.lwip_close) refers to sys_arch.o(.bss.errno) for errno
    sockets.o(.text.lwip_close) refers to sockets.o(.rodata.str1.1) for .L.str
    sockets.o(.text.lwip_close) refers to printf8.o(i.__0printf$8) for __2printf
    sockets.o(.text.lwip_close) refers to api_lib.o(.text.netconn_prepare_delete) for netconn_prepare_delete
    sockets.o(.text.lwip_close) refers to err.o(.text.err_to_errno) for err_to_errno
    sockets.o(.text.lwip_close) refers to sys_arch.o(.text.sys_arch_protect) for sys_arch_protect
    sockets.o(.text.lwip_close) refers to sys_arch.o(.text.sys_arch_unprotect) for sys_arch_unprotect
    sockets.o(.text.lwip_close) refers to netbuf.o(.text.netbuf_delete) for netbuf_delete
    sockets.o(.text.lwip_close) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    sockets.o(.text.lwip_close) refers to api_lib.o(.text.netconn_delete) for netconn_delete
    sockets.o(.ARM.exidx.text.lwip_close) refers to sockets.o(.text.lwip_close) for [Anonymous Symbol]
    sockets.o(.text.lwip_connect) refers to sockets.o(.bss.sockets) for sockets
    sockets.o(.text.lwip_connect) refers to sys_arch.o(.bss.errno) for errno
    sockets.o(.text.lwip_connect) refers to sockets.o(.rodata.str1.1) for .L.str
    sockets.o(.text.lwip_connect) refers to printf8.o(i.__0printf$8) for __2printf
    sockets.o(.text.lwip_connect) refers to err.o(.text.err_to_errno) for err_to_errno
    sockets.o(.text.lwip_connect) refers to api_lib.o(.text.netconn_disconnect) for netconn_disconnect
    sockets.o(.text.lwip_connect) refers to def.o(.text.lwip_htons) for lwip_htons
    sockets.o(.text.lwip_connect) refers to api_lib.o(.text.netconn_connect) for netconn_connect
    sockets.o(.ARM.exidx.text.lwip_connect) refers to sockets.o(.text.lwip_connect) for [Anonymous Symbol]
    sockets.o(.text.lwip_listen) refers to sockets.o(.bss.sockets) for sockets
    sockets.o(.text.lwip_listen) refers to sys_arch.o(.bss.errno) for errno
    sockets.o(.text.lwip_listen) refers to api_lib.o(.text.netconn_listen_with_backlog) for netconn_listen_with_backlog
    sockets.o(.text.lwip_listen) refers to err.o(.text.err_to_errno) for err_to_errno
    sockets.o(.ARM.exidx.text.lwip_listen) refers to sockets.o(.text.lwip_listen) for [Anonymous Symbol]
    sockets.o(.text.lwip_recvfrom) refers to sockets.o(.bss.sockets) for sockets
    sockets.o(.text.lwip_recvfrom) refers to sys_arch.o(.bss.errno) for errno
    sockets.o(.text.lwip_recvfrom) refers to sockets.o(.text.lwip_recv_tcp) for lwip_recv_tcp
    sockets.o(.text.lwip_recvfrom) refers to sockets.o(.text.lwip_recvfrom_udp_raw) for lwip_recvfrom_udp_raw
    sockets.o(.text.lwip_recvfrom) refers to err.o(.text.err_to_errno) for err_to_errno
    sockets.o(.text.lwip_recvfrom) refers to api_lib.o(.text.netconn_getaddr) for netconn_getaddr
    sockets.o(.text.lwip_recvfrom) refers to def.o(.text.lwip_htons) for lwip_htons
    sockets.o(.text.lwip_recvfrom) refers to memmovea.o(.text) for __aeabi_memcpy
    sockets.o(.ARM.exidx.text.lwip_recvfrom) refers to sockets.o(.text.lwip_recvfrom) for [Anonymous Symbol]
    sockets.o(.text.lwip_recv_tcp) refers to sockets.o(.rodata.str1.1) for .L.str
    sockets.o(.text.lwip_recv_tcp) refers to printf8.o(i.__0printf$8) for __2printf
    sockets.o(.text.lwip_recv_tcp) refers to pbuf.o(.text.pbuf_copy_partial) for pbuf_copy_partial
    sockets.o(.text.lwip_recv_tcp) refers to pbuf.o(.text.pbuf_free_header) for pbuf_free_header
    sockets.o(.text.lwip_recv_tcp) refers to api_lib.o(.text.netconn_recv_tcp_pbuf_flags) for netconn_recv_tcp_pbuf_flags
    sockets.o(.text.lwip_recv_tcp) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    sockets.o(.text.lwip_recv_tcp) refers to err.o(.text.err_to_errno) for err_to_errno
    sockets.o(.text.lwip_recv_tcp) refers to sys_arch.o(.bss.errno) for errno
    sockets.o(.text.lwip_recv_tcp) refers to api_lib.o(.text.netconn_tcp_recvd) for netconn_tcp_recvd
    sockets.o(.ARM.exidx.text.lwip_recv_tcp) refers to sockets.o(.text.lwip_recv_tcp) for [Anonymous Symbol]
    sockets.o(.text.lwip_recvfrom_udp_raw) refers to pbuf.o(.text.pbuf_copy_partial) for pbuf_copy_partial
    sockets.o(.text.lwip_recvfrom_udp_raw) refers to def.o(.text.lwip_htons) for lwip_htons
    sockets.o(.text.lwip_recvfrom_udp_raw) refers to memmovea.o(.text) for __aeabi_memcpy
    sockets.o(.text.lwip_recvfrom_udp_raw) refers to netbuf.o(.text.netbuf_delete) for netbuf_delete
    sockets.o(.text.lwip_recvfrom_udp_raw) refers to sockets.o(.rodata.str1.1) for .L.str
    sockets.o(.text.lwip_recvfrom_udp_raw) refers to printf8.o(i.__0printf$8) for __2printf
    sockets.o(.text.lwip_recvfrom_udp_raw) refers to api_lib.o(.text.netconn_recv_udp_raw_netbuf_flags) for netconn_recv_udp_raw_netbuf_flags
    sockets.o(.ARM.exidx.text.lwip_recvfrom_udp_raw) refers to sockets.o(.text.lwip_recvfrom_udp_raw) for [Anonymous Symbol]
    sockets.o(.text.lwip_read) refers to sockets.o(.text.lwip_recvfrom) for lwip_recvfrom
    sockets.o(.ARM.exidx.text.lwip_read) refers to sockets.o(.text.lwip_read) for [Anonymous Symbol]
    sockets.o(.text.lwip_readv) refers to sockets.o(.text.lwip_recvmsg) for lwip_recvmsg
    sockets.o(.ARM.exidx.text.lwip_readv) refers to sockets.o(.text.lwip_readv) for [Anonymous Symbol]
    sockets.o(.text.lwip_recvmsg) refers to sockets.o(.rodata.str1.1) for .L.str
    sockets.o(.text.lwip_recvmsg) refers to printf8.o(i.__0printf$8) for __2printf
    sockets.o(.text.lwip_recvmsg) refers to sys_arch.o(.bss.errno) for errno
    sockets.o(.text.lwip_recvmsg) refers to sockets.o(.bss.sockets) for sockets
    sockets.o(.text.lwip_recvmsg) refers to sockets.o(.text.lwip_recv_tcp) for lwip_recv_tcp
    sockets.o(.text.lwip_recvmsg) refers to sockets.o(.text.lwip_recvfrom_udp_raw) for lwip_recvfrom_udp_raw
    sockets.o(.text.lwip_recvmsg) refers to err.o(.text.err_to_errno) for err_to_errno
    sockets.o(.ARM.exidx.text.lwip_recvmsg) refers to sockets.o(.text.lwip_recvmsg) for [Anonymous Symbol]
    sockets.o(.text.lwip_recv) refers to sockets.o(.text.lwip_recvfrom) for lwip_recvfrom
    sockets.o(.ARM.exidx.text.lwip_recv) refers to sockets.o(.text.lwip_recv) for [Anonymous Symbol]
    sockets.o(.text.lwip_send) refers to sockets.o(.bss.sockets) for sockets
    sockets.o(.text.lwip_send) refers to api_lib.o(.text.netconn_write_partly) for netconn_write_partly
    sockets.o(.text.lwip_send) refers to err.o(.text.err_to_errno) for err_to_errno
    sockets.o(.text.lwip_send) refers to sys_arch.o(.bss.errno) for errno
    sockets.o(.text.lwip_send) refers to sockets.o(.text.lwip_sendto) for lwip_sendto
    sockets.o(.ARM.exidx.text.lwip_send) refers to sockets.o(.text.lwip_send) for [Anonymous Symbol]
    sockets.o(.text.lwip_sendto) refers to sockets.o(.bss.sockets) for sockets
    sockets.o(.text.lwip_sendto) refers to sys_arch.o(.bss.errno) for errno
    sockets.o(.text.lwip_sendto) refers to sockets.o(.text.lwip_send) for lwip_send
    sockets.o(.text.lwip_sendto) refers to sockets.o(.rodata.str1.1) for .L.str
    sockets.o(.text.lwip_sendto) refers to printf8.o(i.__0printf$8) for __2printf
    sockets.o(.text.lwip_sendto) refers to err.o(.text.err_to_errno) for err_to_errno
    sockets.o(.text.lwip_sendto) refers to def.o(.text.lwip_htons) for lwip_htons
    sockets.o(.text.lwip_sendto) refers to netbuf.o(.text.netbuf_ref) for netbuf_ref
    sockets.o(.text.lwip_sendto) refers to api_lib.o(.text.netconn_send) for netconn_send
    sockets.o(.text.lwip_sendto) refers to netbuf.o(.text.netbuf_free) for netbuf_free
    sockets.o(.ARM.exidx.text.lwip_sendto) refers to sockets.o(.text.lwip_sendto) for [Anonymous Symbol]
    sockets.o(.text.lwip_sendmsg) refers to sockets.o(.bss.sockets) for sockets
    sockets.o(.text.lwip_sendmsg) refers to sys_arch.o(.bss.errno) for errno
    sockets.o(.text.lwip_sendmsg) refers to sockets.o(.rodata.str1.1) for .L.str
    sockets.o(.text.lwip_sendmsg) refers to printf8.o(i.__0printf$8) for __2printf
    sockets.o(.text.lwip_sendmsg) refers to err.o(.text.err_to_errno) for err_to_errno
    sockets.o(.text.lwip_sendmsg) refers to api_lib.o(.text.netconn_write_vectors_partly) for netconn_write_vectors_partly
    sockets.o(.text.lwip_sendmsg) refers to def.o(.text.lwip_htons) for lwip_htons
    sockets.o(.text.lwip_sendmsg) refers to pbuf.o(.text.pbuf_alloc) for pbuf_alloc
    sockets.o(.text.lwip_sendmsg) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    sockets.o(.text.lwip_sendmsg) refers to pbuf.o(.text.pbuf_cat) for pbuf_cat
    sockets.o(.text.lwip_sendmsg) refers to netbuf.o(.text.netbuf_free) for netbuf_free
    sockets.o(.text.lwip_sendmsg) refers to api_lib.o(.text.netconn_send) for netconn_send
    sockets.o(.ARM.exidx.text.lwip_sendmsg) refers to sockets.o(.text.lwip_sendmsg) for [Anonymous Symbol]
    sockets.o(.text.lwip_socket) refers to sockets.o(.text.event_callback) for event_callback
    sockets.o(.text.lwip_socket) refers to api_lib.o(.text.netconn_new_with_proto_and_callback) for netconn_new_with_proto_and_callback
    sockets.o(.text.lwip_socket) refers to sockets.o(.bss.sockets) for sockets
    sockets.o(.text.lwip_socket) refers to sys_arch.o(.text.sys_arch_protect) for sys_arch_protect
    sockets.o(.text.lwip_socket) refers to sys_arch.o(.text.sys_arch_unprotect) for sys_arch_unprotect
    sockets.o(.text.lwip_socket) refers to api_lib.o(.text.netconn_delete) for netconn_delete
    sockets.o(.text.lwip_socket) refers to sys_arch.o(.bss.errno) for errno
    sockets.o(.text.lwip_socket) refers to sockets.o(.rodata.str1.1) for .L.str
    sockets.o(.text.lwip_socket) refers to printf8.o(i.__0printf$8) for __2printf
    sockets.o(.ARM.exidx.text.lwip_socket) refers to sockets.o(.text.lwip_socket) for [Anonymous Symbol]
    sockets.o(.text.event_callback) refers to sys_arch.o(.text.sys_arch_protect) for sys_arch_protect
    sockets.o(.text.event_callback) refers to sys_arch.o(.text.sys_arch_unprotect) for sys_arch_unprotect
    sockets.o(.text.event_callback) refers to sockets.o(.bss.sockets) for sockets
    sockets.o(.text.event_callback) refers to sys_arch.o(.bss.errno) for errno
    sockets.o(.text.event_callback) refers to sockets.o(.rodata.str1.1) for .L.str
    sockets.o(.text.event_callback) refers to printf8.o(i.__0printf$8) for __2printf
    sockets.o(.text.event_callback) refers to sockets.o(.bss.select_cb_list) for select_cb_list
    sockets.o(.text.event_callback) refers to sys_arch.o(.text.sys_sem_signal) for sys_sem_signal
    sockets.o(.ARM.exidx.text.event_callback) refers to sockets.o(.text.event_callback) for [Anonymous Symbol]
    sockets.o(.text.lwip_write) refers to sockets.o(.bss.sockets) for sockets
    sockets.o(.text.lwip_write) refers to api_lib.o(.text.netconn_write_partly) for netconn_write_partly
    sockets.o(.text.lwip_write) refers to err.o(.text.err_to_errno) for err_to_errno
    sockets.o(.text.lwip_write) refers to sys_arch.o(.bss.errno) for errno
    sockets.o(.text.lwip_write) refers to sockets.o(.text.lwip_sendto) for lwip_sendto
    sockets.o(.ARM.exidx.text.lwip_write) refers to sockets.o(.text.lwip_write) for [Anonymous Symbol]
    sockets.o(.text.lwip_writev) refers to sockets.o(.text.lwip_sendmsg) for lwip_sendmsg
    sockets.o(.ARM.exidx.text.lwip_writev) refers to sockets.o(.text.lwip_writev) for [Anonymous Symbol]
    sockets.o(.text.lwip_select) refers to sys_arch.o(.bss.errno) for errno
    sockets.o(.text.lwip_select) refers to sockets.o(.text.lwip_selscan) for lwip_selscan
    sockets.o(.text.lwip_select) refers to memseta.o(.text) for __aeabi_memclr4
    sockets.o(.text.lwip_select) refers to sys_arch.o(.text.sys_sem_new) for sys_sem_new
    sockets.o(.text.lwip_select) refers to tcpip.o(.bss.lock_tcpip_core) for lock_tcpip_core
    sockets.o(.text.lwip_select) refers to sys_arch.o(.text.sys_mutex_lock) for sys_mutex_lock
    sockets.o(.text.lwip_select) refers to sockets.o(.bss.select_cb_list) for select_cb_list
    sockets.o(.text.lwip_select) refers to sys_arch.o(.text.sys_mutex_unlock) for sys_mutex_unlock
    sockets.o(.text.lwip_select) refers to sockets.o(.bss.sockets) for sockets
    sockets.o(.text.lwip_select) refers to sys_arch.o(.text.sys_arch_unprotect) for sys_arch_unprotect
    sockets.o(.text.lwip_select) refers to sys_arch.o(.text.sys_arch_protect) for sys_arch_protect
    sockets.o(.text.lwip_select) refers to sys_arch.o(.text.sys_arch_sem_wait) for sys_arch_sem_wait
    sockets.o(.text.lwip_select) refers to sockets.o(.rodata.str1.1) for .L.str
    sockets.o(.text.lwip_select) refers to printf8.o(i.__0printf$8) for __2printf
    sockets.o(.text.lwip_select) refers to sys_arch.o(.text.sys_sem_free) for sys_sem_free
    sockets.o(.ARM.exidx.text.lwip_select) refers to sockets.o(.text.lwip_select) for [Anonymous Symbol]
    sockets.o(.text.lwip_selscan) refers to sockets.o(.bss.sockets) for sockets
    sockets.o(.text.lwip_selscan) refers to sys_arch.o(.text.sys_arch_protect) for sys_arch_protect
    sockets.o(.text.lwip_selscan) refers to sys_arch.o(.text.sys_arch_unprotect) for sys_arch_unprotect
    sockets.o(.text.lwip_selscan) refers to sockets.o(.rodata.str1.1) for .L.str
    sockets.o(.text.lwip_selscan) refers to printf8.o(i.__0printf$8) for __2printf
    sockets.o(.ARM.exidx.text.lwip_selscan) refers to sockets.o(.text.lwip_selscan) for [Anonymous Symbol]
    sockets.o(.text.lwip_poll) refers to sockets.o(.rodata.str1.1) for .L.str
    sockets.o(.text.lwip_poll) refers to printf8.o(i.__0printf$8) for __2printf
    sockets.o(.text.lwip_poll) refers to sys_arch.o(.bss.errno) for errno
    sockets.o(.text.lwip_poll) refers to sockets.o(.text.lwip_pollscan) for lwip_pollscan
    sockets.o(.text.lwip_poll) refers to memseta.o(.text) for __aeabi_memclr4
    sockets.o(.text.lwip_poll) refers to sys_arch.o(.text.sys_sem_new) for sys_sem_new
    sockets.o(.text.lwip_poll) refers to tcpip.o(.bss.lock_tcpip_core) for lock_tcpip_core
    sockets.o(.text.lwip_poll) refers to sys_arch.o(.text.sys_mutex_lock) for sys_mutex_lock
    sockets.o(.text.lwip_poll) refers to sockets.o(.bss.select_cb_list) for select_cb_list
    sockets.o(.text.lwip_poll) refers to sys_arch.o(.text.sys_mutex_unlock) for sys_mutex_unlock
    sockets.o(.text.lwip_poll) refers to sys_arch.o(.text.sys_arch_sem_wait) for sys_arch_sem_wait
    sockets.o(.text.lwip_poll) refers to sys_arch.o(.text.sys_sem_free) for sys_sem_free
    sockets.o(.ARM.exidx.text.lwip_poll) refers to sockets.o(.text.lwip_poll) for [Anonymous Symbol]
    sockets.o(.text.lwip_pollscan) refers to sys_arch.o(.text.sys_arch_unprotect) for sys_arch_unprotect
    sockets.o(.text.lwip_pollscan) refers to sys_arch.o(.text.sys_arch_protect) for sys_arch_protect
    sockets.o(.text.lwip_pollscan) refers to sockets.o(.bss.sockets) for sockets
    sockets.o(.text.lwip_pollscan) refers to sockets.o(.rodata.str1.1) for .L.str
    sockets.o(.text.lwip_pollscan) refers to printf8.o(i.__0printf$8) for __2printf
    sockets.o(.ARM.exidx.text.lwip_pollscan) refers to sockets.o(.text.lwip_pollscan) for [Anonymous Symbol]
    sockets.o(.text.lwip_shutdown) refers to sockets.o(.bss.sockets) for sockets
    sockets.o(.text.lwip_shutdown) refers to sys_arch.o(.bss.errno) for errno
    sockets.o(.text.lwip_shutdown) refers to api_lib.o(.text.netconn_shutdown) for netconn_shutdown
    sockets.o(.text.lwip_shutdown) refers to err.o(.text.err_to_errno) for err_to_errno
    sockets.o(.ARM.exidx.text.lwip_shutdown) refers to sockets.o(.text.lwip_shutdown) for [Anonymous Symbol]
    sockets.o(.text.lwip_getpeername) refers to sockets.o(.text.lwip_getaddrname) for lwip_getaddrname
    sockets.o(.ARM.exidx.text.lwip_getpeername) refers to sockets.o(.text.lwip_getpeername) for [Anonymous Symbol]
    sockets.o(.text.lwip_getaddrname) refers to sockets.o(.bss.sockets) for sockets
    sockets.o(.text.lwip_getaddrname) refers to sys_arch.o(.bss.errno) for errno
    sockets.o(.text.lwip_getaddrname) refers to api_lib.o(.text.netconn_getaddr) for netconn_getaddr
    sockets.o(.text.lwip_getaddrname) refers to err.o(.text.err_to_errno) for err_to_errno
    sockets.o(.text.lwip_getaddrname) refers to def.o(.text.lwip_htons) for lwip_htons
    sockets.o(.text.lwip_getaddrname) refers to memmovea.o(.text) for __aeabi_memcpy
    sockets.o(.ARM.exidx.text.lwip_getaddrname) refers to sockets.o(.text.lwip_getaddrname) for [Anonymous Symbol]
    sockets.o(.text.lwip_getsockname) refers to sockets.o(.text.lwip_getaddrname) for lwip_getaddrname
    sockets.o(.ARM.exidx.text.lwip_getsockname) refers to sockets.o(.text.lwip_getsockname) for [Anonymous Symbol]
    sockets.o(.text.lwip_getsockopt) refers to sockets.o(.bss.sockets) for sockets
    sockets.o(.text.lwip_getsockopt) refers to tcpip.o(.bss.lock_tcpip_core) for lock_tcpip_core
    sockets.o(.text.lwip_getsockopt) refers to sys_arch.o(.text.sys_mutex_lock) for sys_mutex_lock
    sockets.o(.text.lwip_getsockopt) refers to sys_arch.o(.bss.errno) for errno
    sockets.o(.text.lwip_getsockopt) refers to sys_arch.o(.text.sys_mutex_unlock) for sys_mutex_unlock
    sockets.o(.text.lwip_getsockopt) refers to api_lib.o(.text.netconn_err) for netconn_err
    sockets.o(.text.lwip_getsockopt) refers to err.o(.text.err_to_errno) for err_to_errno
    sockets.o(.text.lwip_getsockopt) refers to sockets.o(.rodata.str1.1) for .L.str
    sockets.o(.text.lwip_getsockopt) refers to printf8.o(i.__0printf$8) for __2printf
    sockets.o(.ARM.exidx.text.lwip_getsockopt) refers to sockets.o(.text.lwip_getsockopt) for [Anonymous Symbol]
    sockets.o(.text.lwip_setsockopt) refers to sockets.o(.bss.sockets) for sockets
    sockets.o(.text.lwip_setsockopt) refers to tcpip.o(.bss.lock_tcpip_core) for lock_tcpip_core
    sockets.o(.text.lwip_setsockopt) refers to sys_arch.o(.text.sys_mutex_lock) for sys_mutex_lock
    sockets.o(.text.lwip_setsockopt) refers to sys_arch.o(.bss.errno) for errno
    sockets.o(.text.lwip_setsockopt) refers to sockets.o(.rodata.str1.1) for .L.str
    sockets.o(.text.lwip_setsockopt) refers to printf8.o(i.__0printf$8) for __2printf
    sockets.o(.text.lwip_setsockopt) refers to netif.o(.text.netif_find) for netif_find
    sockets.o(.text.lwip_setsockopt) refers to sys_arch.o(.text.sys_mutex_unlock) for sys_mutex_unlock
    sockets.o(.text.lwip_setsockopt) refers to tcp.o(.text.tcp_bind_netif) for tcp_bind_netif
    sockets.o(.text.lwip_setsockopt) refers to udp.o(.text.udp_bind_netif) for udp_bind_netif
    sockets.o(.ARM.exidx.text.lwip_setsockopt) refers to sockets.o(.text.lwip_setsockopt) for [Anonymous Symbol]
    sockets.o(.text.lwip_ioctl) refers to sockets.o(.bss.sockets) for sockets
    sockets.o(.text.lwip_ioctl) refers to sys_arch.o(.bss.errno) for errno
    sockets.o(.ARM.exidx.text.lwip_ioctl) refers to sockets.o(.text.lwip_ioctl) for [Anonymous Symbol]
    sockets.o(.text.lwip_fcntl) refers to sockets.o(.bss.sockets) for sockets
    sockets.o(.text.lwip_fcntl) refers to sys_arch.o(.bss.errno) for errno
    sockets.o(.text.lwip_fcntl) refers to tcpip.o(.bss.lock_tcpip_core) for lock_tcpip_core
    sockets.o(.text.lwip_fcntl) refers to sys_arch.o(.text.sys_mutex_lock) for sys_mutex_lock
    sockets.o(.text.lwip_fcntl) refers to sys_arch.o(.text.sys_mutex_unlock) for sys_mutex_unlock
    sockets.o(.ARM.exidx.text.lwip_fcntl) refers to sockets.o(.text.lwip_fcntl) for [Anonymous Symbol]
    sockets.o(.text.lwip_inet_ntop) refers to ip4_addr.o(.text.ip4addr_ntoa_r) for ip4addr_ntoa_r
    sockets.o(.text.lwip_inet_ntop) refers to sys_arch.o(.bss.errno) for errno
    sockets.o(.ARM.exidx.text.lwip_inet_ntop) refers to sockets.o(.text.lwip_inet_ntop) for [Anonymous Symbol]
    sockets.o(.text.lwip_inet_pton) refers to ip4_addr.o(.text.ip4addr_aton) for ip4addr_aton
    sockets.o(.text.lwip_inet_pton) refers to sys_arch.o(.bss.errno) for errno
    sockets.o(.ARM.exidx.text.lwip_inet_pton) refers to sockets.o(.text.lwip_inet_pton) for [Anonymous Symbol]
    tcpip.o(.text.tcpip_inpkt) refers to tcpip.o(.bss.tcpip_mbox) for tcpip_mbox
    tcpip.o(.text.tcpip_inpkt) refers to tcpip.o(.rodata.str1.1) for .L.str
    tcpip.o(.text.tcpip_inpkt) refers to printf8.o(i.__0printf$8) for __2printf
    tcpip.o(.text.tcpip_inpkt) refers to memp.o(.text.memp_malloc) for memp_malloc
    tcpip.o(.text.tcpip_inpkt) refers to sys_arch.o(.text.sys_mbox_trypost) for sys_mbox_trypost
    tcpip.o(.text.tcpip_inpkt) refers to memp.o(.text.memp_free) for memp_free
    tcpip.o(.ARM.exidx.text.tcpip_inpkt) refers to tcpip.o(.text.tcpip_inpkt) for [Anonymous Symbol]
    tcpip.o(.text.tcpip_input) refers to tcpip.o(.bss.tcpip_mbox) for tcpip_mbox
    tcpip.o(.text.tcpip_input) refers to tcpip.o(.rodata.str1.1) for .L.str
    tcpip.o(.text.tcpip_input) refers to printf8.o(i.__0printf$8) for __2printf
    tcpip.o(.text.tcpip_input) refers to memp.o(.text.memp_malloc) for memp_malloc
    tcpip.o(.text.tcpip_input) refers to ethernet.o(.text.ethernet_input) for ethernet_input
    tcpip.o(.text.tcpip_input) refers to ip4.o(.text.ip4_input) for ip4_input
    tcpip.o(.text.tcpip_input) refers to sys_arch.o(.text.sys_mbox_trypost) for sys_mbox_trypost
    tcpip.o(.text.tcpip_input) refers to memp.o(.text.memp_free) for memp_free
    tcpip.o(.ARM.exidx.text.tcpip_input) refers to tcpip.o(.text.tcpip_input) for [Anonymous Symbol]
    tcpip.o(.text.tcpip_callback) refers to tcpip.o(.bss.tcpip_mbox) for tcpip_mbox
    tcpip.o(.text.tcpip_callback) refers to tcpip.o(.rodata.str1.1) for .L.str
    tcpip.o(.text.tcpip_callback) refers to printf8.o(i.__0printf$8) for __2printf
    tcpip.o(.text.tcpip_callback) refers to memp.o(.text.memp_malloc) for memp_malloc
    tcpip.o(.text.tcpip_callback) refers to sys_arch.o(.text.sys_mbox_post) for sys_mbox_post
    tcpip.o(.ARM.exidx.text.tcpip_callback) refers to tcpip.o(.text.tcpip_callback) for [Anonymous Symbol]
    tcpip.o(.text.tcpip_try_callback) refers to tcpip.o(.bss.tcpip_mbox) for tcpip_mbox
    tcpip.o(.text.tcpip_try_callback) refers to tcpip.o(.rodata.str1.1) for .L.str
    tcpip.o(.text.tcpip_try_callback) refers to printf8.o(i.__0printf$8) for __2printf
    tcpip.o(.text.tcpip_try_callback) refers to memp.o(.text.memp_malloc) for memp_malloc
    tcpip.o(.text.tcpip_try_callback) refers to sys_arch.o(.text.sys_mbox_trypost) for sys_mbox_trypost
    tcpip.o(.text.tcpip_try_callback) refers to memp.o(.text.memp_free) for memp_free
    tcpip.o(.ARM.exidx.text.tcpip_try_callback) refers to tcpip.o(.text.tcpip_try_callback) for [Anonymous Symbol]
    tcpip.o(.text.tcpip_send_msg_wait_sem) refers to tcpip.o(.bss.lock_tcpip_core) for lock_tcpip_core
    tcpip.o(.text.tcpip_send_msg_wait_sem) refers to sys_arch.o(.text.sys_mutex_lock) for sys_mutex_lock
    tcpip.o(.text.tcpip_send_msg_wait_sem) refers to sys_arch.o(.text.sys_mutex_unlock) for sys_mutex_unlock
    tcpip.o(.ARM.exidx.text.tcpip_send_msg_wait_sem) refers to tcpip.o(.text.tcpip_send_msg_wait_sem) for [Anonymous Symbol]
    tcpip.o(.text.tcpip_api_call) refers to tcpip.o(.bss.lock_tcpip_core) for lock_tcpip_core
    tcpip.o(.text.tcpip_api_call) refers to sys_arch.o(.text.sys_mutex_lock) for sys_mutex_lock
    tcpip.o(.text.tcpip_api_call) refers to sys_arch.o(.text.sys_mutex_unlock) for sys_mutex_unlock
    tcpip.o(.ARM.exidx.text.tcpip_api_call) refers to tcpip.o(.text.tcpip_api_call) for [Anonymous Symbol]
    tcpip.o(.text.tcpip_callbackmsg_new) refers to memp.o(.text.memp_malloc) for memp_malloc
    tcpip.o(.ARM.exidx.text.tcpip_callbackmsg_new) refers to tcpip.o(.text.tcpip_callbackmsg_new) for [Anonymous Symbol]
    tcpip.o(.text.tcpip_callbackmsg_delete) refers to memp.o(.text.memp_free) for memp_free
    tcpip.o(.ARM.exidx.text.tcpip_callbackmsg_delete) refers to tcpip.o(.text.tcpip_callbackmsg_delete) for [Anonymous Symbol]
    tcpip.o(.text.tcpip_callbackmsg_trycallback) refers to tcpip.o(.bss.tcpip_mbox) for tcpip_mbox
    tcpip.o(.text.tcpip_callbackmsg_trycallback) refers to tcpip.o(.rodata.str1.1) for .L.str
    tcpip.o(.text.tcpip_callbackmsg_trycallback) refers to printf8.o(i.__0printf$8) for __2printf
    tcpip.o(.text.tcpip_callbackmsg_trycallback) refers to sys_arch.o(.text.sys_mbox_trypost) for sys_mbox_trypost
    tcpip.o(.ARM.exidx.text.tcpip_callbackmsg_trycallback) refers to tcpip.o(.text.tcpip_callbackmsg_trycallback) for [Anonymous Symbol]
    tcpip.o(.text.tcpip_callbackmsg_trycallback_fromisr) refers to tcpip.o(.bss.tcpip_mbox) for tcpip_mbox
    tcpip.o(.text.tcpip_callbackmsg_trycallback_fromisr) refers to tcpip.o(.rodata.str1.1) for .L.str
    tcpip.o(.text.tcpip_callbackmsg_trycallback_fromisr) refers to printf8.o(i.__0printf$8) for __2printf
    tcpip.o(.text.tcpip_callbackmsg_trycallback_fromisr) refers to sys_arch.o(.text.sys_mbox_trypost_fromisr) for sys_mbox_trypost_fromisr
    tcpip.o(.ARM.exidx.text.tcpip_callbackmsg_trycallback_fromisr) refers to tcpip.o(.text.tcpip_callbackmsg_trycallback_fromisr) for [Anonymous Symbol]
    tcpip.o(.text.tcpip_init) refers to init.o(.text.lwip_init) for lwip_init
    tcpip.o(.text.tcpip_init) refers to tcpip.o(.bss.tcpip_init_done) for tcpip_init_done
    tcpip.o(.text.tcpip_init) refers to tcpip.o(.bss.tcpip_init_done_arg) for tcpip_init_done_arg
    tcpip.o(.text.tcpip_init) refers to tcpip.o(.bss.tcpip_mbox) for tcpip_mbox
    tcpip.o(.text.tcpip_init) refers to sys_arch.o(.text.sys_mbox_new) for sys_mbox_new
    tcpip.o(.text.tcpip_init) refers to tcpip.o(.rodata.str1.1) for .L.str
    tcpip.o(.text.tcpip_init) refers to printf8.o(i.__0printf$8) for __2printf
    tcpip.o(.text.tcpip_init) refers to tcpip.o(.bss.lock_tcpip_core) for lock_tcpip_core
    tcpip.o(.text.tcpip_init) refers to sys_arch.o(.text.sys_mutex_new) for sys_mutex_new
    tcpip.o(.text.tcpip_init) refers to tcpip.o(.text.tcpip_thread) for tcpip_thread
    tcpip.o(.text.tcpip_init) refers to sys_arch.o(.text.sys_thread_new) for sys_thread_new
    tcpip.o(.ARM.exidx.text.tcpip_init) refers to tcpip.o(.text.tcpip_init) for [Anonymous Symbol]
    tcpip.o(.text.tcpip_thread) refers to tcpip.o(.bss.lock_tcpip_core) for lock_tcpip_core
    tcpip.o(.text.tcpip_thread) refers to sys_arch.o(.text.sys_mutex_lock) for sys_mutex_lock
    tcpip.o(.text.tcpip_thread) refers to tcpip.o(.bss.tcpip_init_done) for tcpip_init_done
    tcpip.o(.text.tcpip_thread) refers to tcpip.o(.bss.tcpip_init_done_arg) for tcpip_init_done_arg
    tcpip.o(.text.tcpip_thread) refers to tcpip.o(.bss.tcpip_mbox) for tcpip_mbox
    tcpip.o(.text.tcpip_thread) refers to tcpip.o(.rodata.str1.1) for .L.str
    tcpip.o(.text.tcpip_thread) refers to timeouts.o(.text.sys_check_timeouts) for sys_check_timeouts
    tcpip.o(.text.tcpip_thread) refers to timeouts.o(.text.sys_timeouts_sleeptime) for sys_timeouts_sleeptime
    tcpip.o(.text.tcpip_thread) refers to sys_arch.o(.text.sys_mutex_unlock) for sys_mutex_unlock
    tcpip.o(.text.tcpip_thread) refers to sys_arch.o(.text.sys_arch_mbox_fetch) for sys_arch_mbox_fetch
    tcpip.o(.text.tcpip_thread) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    tcpip.o(.text.tcpip_thread) refers to memp.o(.text.memp_free) for memp_free
    tcpip.o(.text.tcpip_thread) refers to printf8.o(i.__0printf$8) for __2printf
    tcpip.o(.ARM.exidx.text.tcpip_thread) refers to tcpip.o(.text.tcpip_thread) for [Anonymous Symbol]
    tcpip.o(.text.pbuf_free_callback) refers to tcpip.o(.bss.tcpip_mbox) for tcpip_mbox
    tcpip.o(.text.pbuf_free_callback) refers to tcpip.o(.rodata.str1.1) for .L.str
    tcpip.o(.text.pbuf_free_callback) refers to printf8.o(i.__0printf$8) for __2printf
    tcpip.o(.text.pbuf_free_callback) refers to memp.o(.text.memp_malloc) for memp_malloc
    tcpip.o(.text.pbuf_free_callback) refers to tcpip.o(.text.pbuf_free_int) for pbuf_free_int
    tcpip.o(.text.pbuf_free_callback) refers to sys_arch.o(.text.sys_mbox_trypost) for sys_mbox_trypost
    tcpip.o(.text.pbuf_free_callback) refers to memp.o(.text.memp_free) for memp_free
    tcpip.o(.ARM.exidx.text.pbuf_free_callback) refers to tcpip.o(.text.pbuf_free_callback) for [Anonymous Symbol]
    tcpip.o(.text.pbuf_free_int) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    tcpip.o(.ARM.exidx.text.pbuf_free_int) refers to tcpip.o(.text.pbuf_free_int) for [Anonymous Symbol]
    tcpip.o(.text.mem_free_callback) refers to tcpip.o(.bss.tcpip_mbox) for tcpip_mbox
    tcpip.o(.text.mem_free_callback) refers to tcpip.o(.rodata.str1.1) for .L.str
    tcpip.o(.text.mem_free_callback) refers to printf8.o(i.__0printf$8) for __2printf
    tcpip.o(.text.mem_free_callback) refers to memp.o(.text.memp_malloc) for memp_malloc
    tcpip.o(.text.mem_free_callback) refers to mem.o(.text.mem_free) for mem_free
    tcpip.o(.text.mem_free_callback) refers to sys_arch.o(.text.sys_mbox_trypost) for sys_mbox_trypost
    tcpip.o(.text.mem_free_callback) refers to memp.o(.text.memp_free) for memp_free
    tcpip.o(.ARM.exidx.text.mem_free_callback) refers to tcpip.o(.text.mem_free_callback) for [Anonymous Symbol]
    ethernet.o(.text.ethernet_input) refers to ethernet.o(.rodata.ethbroadcast) for ethbroadcast
    ethernet.o(.text.ethernet_input) refers to memcmp.o(.text) for memcmp
    ethernet.o(.text.ethernet_input) refers to pbuf.o(.text.pbuf_remove_header) for pbuf_remove_header
    ethernet.o(.text.ethernet_input) refers to ip4.o(.text.ip4_input) for ip4_input
    ethernet.o(.text.ethernet_input) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    ethernet.o(.text.ethernet_input) refers to etharp.o(.text.etharp_input) for etharp_input
    ethernet.o(.ARM.exidx.text.ethernet_input) refers to ethernet.o(.text.ethernet_input) for [Anonymous Symbol]
    ethernet.o(.text.ethernet_output) refers to def.o(.text.lwip_htons) for lwip_htons
    ethernet.o(.text.ethernet_output) refers to pbuf.o(.text.pbuf_add_header) for pbuf_add_header
    ethernet.o(.text.ethernet_output) refers to ethernet.o(.rodata.str1.1) for .L.str.2
    ethernet.o(.text.ethernet_output) refers to printf8.o(i.__0printf$8) for __2printf
    ethernet.o(.ARM.exidx.text.ethernet_output) refers to ethernet.o(.text.ethernet_output) for [Anonymous Symbol]
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry4.o(.ARM.Collect$$$$00000003) for _main_stk
    fputs.o(i.fputs) refers to retarget.o(.text.fputc) for fputc
    puts.o(i.puts) refers to retarget.o(.text.fputc) for fputc
    puts.o(i.puts) refers to stdout.o(.data) for __stdout
    fwrite.o(i.fwrite) refers to retarget.o(.text.fputc) for fputc
    fputs_e.o(.text) refers to retarget.o(.text.fputc) for fputc
    puts_e.o(.text) refers to retarget.o(.text.fputc) for fputc
    puts_e.o(.text) refers to stdout.o(.data) for __stdout
    fwrite_e.o(.text) refers to retarget.o(.text.fputc) for fputc
    ctype_o.o(.text) refers to ctype_o.o(.constdata) for .constdata
    ctype_o.o(.constdata) refers to ctype_o.o(.constdata) for __ctype_table
    isalnum_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isalpha_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isblank_o.o(.text) refers to ctype_o.o(.constdata) for __ctype_table
    iscntrl_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isdigit_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isgraph_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    islower_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isprint_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    ispunct_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isspace_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isupper_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isxdigit_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    printfb.o(i.__0fprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0fprintf$bare) refers to retarget.o(.text.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0printf$bare) refers to retarget.o(.text.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printfb.o(i.__0vfprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vfprintf$bare) refers to retarget.o(.text.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vprintf$bare) refers to retarget.o(.text.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printf0.o(i.__0fprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0fprintf$0) refers to retarget.o(.text.fputc) for fputc
    printf0.o(i.__0printf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0printf$0) refers to retarget.o(.text.fputc) for fputc
    printf0.o(i.__0printf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf0.o(i.__0vfprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vfprintf$0) refers to retarget.o(.text.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vprintf$0) refers to retarget.o(.text.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf1.o(i.__0fprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0fprintf$1) refers to retarget.o(.text.fputc) for fputc
    printf1.o(i.__0printf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0printf$1) refers to retarget.o(.text.fputc) for fputc
    printf1.o(i.__0printf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i.__0vfprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vfprintf$1) refers to retarget.o(.text.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vprintf$1) refers to retarget.o(.text.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf2.o(i.__0fprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0fprintf$2) refers to retarget.o(.text.fputc) for fputc
    printf2.o(i.__0printf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0printf$2) refers to retarget.o(.text.fputc) for fputc
    printf2.o(i.__0printf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf2.o(i.__0vfprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vfprintf$2) refers to retarget.o(.text.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vprintf$2) refers to retarget.o(.text.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf3.o(i.__0fprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0fprintf$3) refers to retarget.o(.text.fputc) for fputc
    printf3.o(i.__0printf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0printf$3) refers to retarget.o(.text.fputc) for fputc
    printf3.o(i.__0printf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i.__0vfprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vfprintf$3) refers to retarget.o(.text.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vprintf$3) refers to retarget.o(.text.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf4.o(i.__0fprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0fprintf$4) refers to retarget.o(.text.fputc) for fputc
    printf4.o(i.__0printf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0printf$4) refers to retarget.o(.text.fputc) for fputc
    printf4.o(i.__0printf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i.__0vfprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vfprintf$4) refers to retarget.o(.text.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vprintf$4) refers to retarget.o(.text.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf5.o(i.__0fprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0fprintf$5) refers to retarget.o(.text.fputc) for fputc
    printf5.o(i.__0printf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0printf$5) refers to retarget.o(.text.fputc) for fputc
    printf5.o(i.__0printf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i.__0vfprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vfprintf$5) refers to retarget.o(.text.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vprintf$5) refers to retarget.o(.text.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf6.o(i.__0fprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0fprintf$6) refers to retarget.o(.text.fputc) for fputc
    printf6.o(i.__0printf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0printf$6) refers to retarget.o(.text.fputc) for fputc
    printf6.o(i.__0printf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i.__0vfprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vfprintf$6) refers to retarget.o(.text.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vprintf$6) refers to retarget.o(.text.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i._printf_core) refers to printf6.o(i._printf_pre_padding) for _printf_pre_padding
    printf6.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf6.o(i._printf_core) refers to printf6.o(i._printf_post_padding) for _printf_post_padding
    printf7.o(i.__0fprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0fprintf$7) refers to retarget.o(.text.fputc) for fputc
    printf7.o(i.__0printf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0printf$7) refers to retarget.o(.text.fputc) for fputc
    printf7.o(i.__0printf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i.__0vfprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vfprintf$7) refers to retarget.o(.text.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vprintf$7) refers to retarget.o(.text.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i._printf_core) refers to printf7.o(i._printf_pre_padding) for _printf_pre_padding
    printf7.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf7.o(i._printf_core) refers to printf7.o(i._printf_post_padding) for _printf_post_padding
    printf8.o(i.__0fprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0fprintf$8) refers to retarget.o(.text.fputc) for fputc
    printf8.o(i.__0printf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0printf$8) refers to retarget.o(.text.fputc) for fputc
    printf8.o(i.__0printf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i.__0vfprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vfprintf$8) refers to retarget.o(.text.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vprintf$8) refers to retarget.o(.text.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i._printf_core) refers to printf8.o(i._printf_pre_padding) for _printf_pre_padding
    printf8.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf8.o(i._printf_core) refers to printf8.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i.__0fprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0fprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0fprintf) refers to retarget.o(.text.fputc) for fputc
    printfa.o(i.__0printf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0printf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0printf) refers to retarget.o(.text.fputc) for fputc
    printfa.o(i.__0printf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0snprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0snprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0snprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0sprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0sprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0sprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i.__0vfprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vfprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vfprintf) refers to retarget.o(.text.fputc) for fputc
    printfa.o(i.__0vprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vprintf) refers to retarget.o(.text.fputc) for fputc
    printfa.o(i.__0vprintf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0vsnprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0vsprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i._fp_digits) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._fp_digits) refers to dmul.o(.text) for __aeabi_dmul
    printfa.o(i._fp_digits) refers to ddiv.o(.text) for __aeabi_ddiv
    printfa.o(i._fp_digits) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    printfa.o(i._fp_digits) refers to dadd.o(.text) for __aeabi_dadd
    printfa.o(i._fp_digits) refers to dfixul.o(.text) for __aeabi_d2ulz
    printfa.o(i._fp_digits) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_core) refers to printfa.o(i._printf_pre_padding) for _printf_pre_padding
    printfa.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers to printfa.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i._printf_core) refers to printfa.o(i._fp_digits) for _fp_digits
    printfa.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printfa.o(i._printf_post_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_pre_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._snputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._sputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    atoi.o(.text) refers to errno.o(i.__aeabi_errno_addr) for __aeabi_errno_addr
    atoi.o(.text) refers to strtol.o(.text) for strtol
    cpp_init.o(.emb_text) refers (Special) to entry8a.o(.ARM.Collect$$$$00000009) for _main_cpp_init$empty
    cpp_init.o(.init_array) refers (Special) to entry8a.o(.ARM.Collect$$$$00000009) for _main_cpp_init$empty
    cpp_init.o(.dummy_text) refers (Special) to entry8a.o(.ARM.Collect$$$$00000009) for _main_cpp_init$empty
    cpp_init.o(.text) refers (Special) to entry8a.o(.ARM.Collect$$$$00000009) for _main_cpp_init$empty
    entry4.o(.ARM.Collect$$$$00000003) refers to entry4.o(.ARM.Collect$$$$00002714) for __lit__00000000
    entry4.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry8a.o(.ARM.Collect$$$$00000009) refers (Weak) to cpp_init.o(.text) for __cpp_initialize__aeabi_
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(.text.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(.text.main) for main
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    errno.o(i.__aeabi_errno_addr) refers to errno.o(.data) for .data
    errno.o(i.__read_errno) refers to errno.o(.data) for .data
    errno.o(i.__set_errno) refers to errno.o(.data) for .data
    strtol.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    strtol.o(.text) refers to _strtoul.o(.text) for _strtoul
    strtol.o(.text) refers to errno.o(i.__aeabi_errno_addr) for __aeabi_errno_addr
    dadd.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ddiv.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    dfixul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixul.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixul.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    cdrcmple.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload
    _strtoul.o(.text) refers to _chval.o(.text) for _chval
    _strtoul.o(.text) refers to errno.o(i.__aeabi_errno_addr) for __aeabi_errno_addr
    depilogue.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr


==============================================================================

Removing Unused input sections from the image.

    Removing startup_M55M1.o(.text), (0 bytes).
    Removing startup_M55M1.o(.ARM.exidx.text.Default_Handler), (8 bytes).
    Removing startup_M55M1.o(.ARM.exidx.text.Reset_Handler), (8 bytes).
    Removing startup_M55M1.o(.ARM.exidx.text.HardFault_Handler), (8 bytes).
    Removing startup_M55M1.o(.ARM.exidx.text.Reset_Handler_PreInit), (8 bytes).
    Removing system_M55M1.o(.text), (0 bytes).
    Removing system_M55M1.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_M55M1.o(.ARM.exidx.text.SetDebugUartMFP), (8 bytes).
    Removing system_M55M1.o(.ARM.exidx.text.SetDebugUartCLK), (8 bytes).
    Removing system_M55M1.o(.ARM.exidx.text.InitDebugUart), (8 bytes).
    Removing system_M55M1.o(.ARM.exidx.text.InitPreDefMPURegion), (8 bytes).
    Removing system_M55M1.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.exidx.text.vWebTask), (8 bytes).
    Removing main.o(.ARM.exidx.text.vApplicationMallocFailedHook), (8 bytes).
    Removing main.o(.text.vApplicationIdleHook), (2 bytes).
    Removing main.o(.ARM.exidx.text.vApplicationIdleHook), (8 bytes).
    Removing main.o(.ARM.exidx.text.vApplicationStackOverflowHook), (8 bytes).
    Removing main.o(.ARM.exidx.text.vApplicationTickHook), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing fs.o(.text), (0 bytes).
    Removing fs.o(.ARM.exidx.text.fs_open), (8 bytes).
    Removing fs.o(.ARM.exidx.text.fs_close), (8 bytes).
    Removing fs.o(.text.fs_read), (54 bytes).
    Removing fs.o(.ARM.exidx.text.fs_read), (8 bytes).
    Removing fs.o(.text.fs_bytes_left), (8 bytes).
    Removing fs.o(.ARM.exidx.text.fs_bytes_left), (8 bytes).
    Removing httpserver-netconn.o(.text), (0 bytes).
    Removing httpserver-netconn.o(.ARM.exidx.text.http_server_serve), (8 bytes).
    Removing httpserver-netconn.o(.ARM.exidx.text.http_server_netconn_init), (8 bytes).
    Removing httpserver-netconn.o(.ARM.exidx.text.http_server_netconn_thread), (8 bytes).
    Removing httpserver-netconn.o(.bss.nPageHits), (4 bytes).
    Removing emac.o(.text), (0 bytes).
    Removing emac.o(.ARM.exidx.text.EMAC_Open), (8 bytes).
    Removing emac.o(.ARM.exidxITCM), (8 bytes).
    Removing emac.o(.ARM.exidx.text.nu_emac_pbuf_free), (8 bytes).
    Removing emac.o(.ARM.exidx.text.EMAC_ReceivePkt), (8 bytes).
    Removing emac.o(.ARM.exidx.text.EMAC_AllocatePktBuf), (8 bytes).
    Removing emac.o(.ARM.exidx.text.EMAC_TransmitPkt), (8 bytes).
    Removing mii.o(.text), (0 bytes).
    Removing mii.o(.text.mii_nway_result), (40 bytes).
    Removing mii.o(.ARM.exidx.text.mii_nway_result), (8 bytes).
    Removing mii.o(.ARM.exidx.text.mii_ethtool_gset), (8 bytes).
    Removing mii.o(.text.mii_link_ok), (50 bytes).
    Removing mii.o(.ARM.exidx.text.mii_link_ok), (8 bytes).
    Removing mii.o(.text.mii_link_monitor), (94 bytes).
    Removing mii.o(.ARM.exidx.text.mii_link_monitor), (8 bytes).
    Removing mii.o(.ARM.exidx.text.mii_check_phy_init), (8 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing tasks.o(.text), (0 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks.o(.text.vTaskDelete), (224 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks.o(.text.xTaskDelayUntil), (202 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskDelayUntil), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskGetState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGetFromISR), (30 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspend), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskResume), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing tasks.o(.text.vTaskEndScheduler), (26 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCountFromISR), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks.o(.text.pcTaskGetName), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks.o(.text.uxTaskGetSystemState), (1190 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetSystemState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStepTick), (8 bytes).
    Removing tasks.o(.text.xTaskCatchUpTicks), (60 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCatchUpTicks), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnUnorderedEventList), (118 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks.o(.text.vTaskRemoveFromUnorderedEventList), (248 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.vTaskSetTimeOutState), (50 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks.o(.text.uxTaskGetTaskNumber), (10 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskConfirmSleepModeStatus), (8 bytes).
    Removing tasks.o(.text.vTaskGetInfo), (294 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGetInfo), (8 bytes).
    Removing tasks.o(.text.xTaskGetCurrentTaskHandle), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetSchedulerState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityInherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout), (8 bytes).
    Removing tasks.o(.text.vTaskList), (224 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskList), (8 bytes).
    Removing tasks.o(.text.uxTaskResetEventItemValue), (26 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyTake), (118 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyWait), (166 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotify), (332 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyFromISR), (346 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskGenericNotifyGiveFromISR), (250 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyStateClear), (54 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyValueClear), (44 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear), (8 bytes).
    Removing timers.o(.text), (0 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreateTimerTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvTimerTask), (8 bytes).
    Removing timers.o(.text.xTimerCreate), (90 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreate), (8 bytes).
    Removing timers.o(.text.xTimerGenericCommand), (90 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGenericCommand), (8 bytes).
    Removing timers.o(.text.xTimerGetTimerDaemonTaskHandle), (30 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle), (8 bytes).
    Removing timers.o(.text.xTimerGetPeriod), (22 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetPeriod), (8 bytes).
    Removing timers.o(.text.vTimerSetReloadMode), (50 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetReloadMode), (34 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.uxTimerGetReloadMode), (34 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetExpiryTime), (22 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetExpiryTime), (8 bytes).
    Removing timers.o(.text.pcTimerGetName), (22 bytes).
    Removing timers.o(.ARM.exidx.text.pcTimerGetName), (8 bytes).
    Removing timers.o(.text.xTimerIsTimerActive), (34 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerIsTimerActive), (8 bytes).
    Removing timers.o(.text.pvTimerGetTimerID), (26 bytes).
    Removing timers.o(.ARM.exidx.text.pvTimerGetTimerID), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerID), (30 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerID), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCallFromISR), (42 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCall), (58 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCall), (8 bytes).
    Removing timers.o(.text.uxTimerGetTimerNumber), (4 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetTimerNumber), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerNumber), (4 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerNumber), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessExpiredTimer), (8 bytes).
    Removing heap_2.o(.text), (0 bytes).
    Removing heap_2.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_2.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing heap_2.o(.text.xPortGetFreeHeapSize), (12 bytes).
    Removing heap_2.o(.ARM.exidx.text.xPortGetFreeHeapSize), (8 bytes).
    Removing heap_2.o(.text.vPortInitialiseBlocks), (2 bytes).
    Removing heap_2.o(.ARM.exidx.text.vPortInitialiseBlocks), (8 bytes).
    Removing heap_2.o(.text.pvPortCalloc), (36 bytes).
    Removing heap_2.o(.ARM.exidx.text.pvPortCalloc), (8 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.text.xQueueGenericReset), (146 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutex), (8 bytes).
    Removing queue.o(.text.xQueueGiveMutexRecursive), (54 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue.o(.text.xQueueTakeMutexRecursive), (52 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphore), (38 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvNotifyQueueSetContainer), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueuePeekFromISR), (98 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue.o(.text.uxQueueSpacesAvailable), (30 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaitingFromISR), (22 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue.o(.text.vQueueUnregisterQueue), (54 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueUnregisterQueue), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueNumber), (4 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueNumber), (8 bytes).
    Removing queue.o(.text.vQueueSetQueueNumber), (4 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueSetQueueNumber), (8 bytes).
    Removing queue.o(.text.ucQueueGetQueueType), (6 bytes).
    Removing queue.o(.ARM.exidx.text.ucQueueGetQueueType), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueEmptyFromISR), (26 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueFullFromISR), (26 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueAddToRegistry), (8 bytes).
    Removing queue.o(.text.pcQueueGetName), (50 bytes).
    Removing queue.o(.ARM.exidx.text.pcQueueGetName), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateSet), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueAddToSet), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueRemoveFromSet), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSelectFromSet), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSelectFromSetFromISR), (8 bytes).
    Removing GenQTest.o(.text), (0 bytes).
    Removing GenQTest.o(.ARM.exidx.text.vStartGenericQueueTasks), (8 bytes).
    Removing GenQTest.o(.ARM.exidx.text.prvSendFrontAndBackTest), (8 bytes).
    Removing GenQTest.o(.ARM.exidx.text.prvLowPriorityMutexTask), (8 bytes).
    Removing GenQTest.o(.ARM.exidx.text.prvMediumPriorityMutexTask), (8 bytes).
    Removing GenQTest.o(.ARM.exidx.text.prvHighPriorityMutexTask), (8 bytes).
    Removing GenQTest.o(.text.xAreGenericQueueTasksStillRunning), (94 bytes).
    Removing GenQTest.o(.ARM.exidx.text.xAreGenericQueueTasksStillRunning), (8 bytes).
    Removing GenQTest.o(.bss.xAreGenericQueueTasksStillRunning.ulLastLoopCounter), (4 bytes).
    Removing GenQTest.o(.bss.xAreGenericQueueTasksStillRunning.ulLastLoopCounter2), (4 bytes).
    Removing PollQ.o(.text), (0 bytes).
    Removing PollQ.o(.ARM.exidx.text.vStartPolledQueueTasks), (8 bytes).
    Removing PollQ.o(.ARM.exidx.text.vPolledQueueConsumer), (8 bytes).
    Removing PollQ.o(.ARM.exidx.text.vPolledQueueProducer), (8 bytes).
    Removing PollQ.o(.text.xArePollingQueuesStillRunning), (40 bytes).
    Removing PollQ.o(.ARM.exidx.text.xArePollingQueuesStillRunning), (8 bytes).
    Removing semtest.o(.text), (0 bytes).
    Removing semtest.o(.ARM.exidx.text.vStartSemaphoreTasks), (8 bytes).
    Removing semtest.o(.ARM.exidx.text.prvSemaphoreTest), (8 bytes).
    Removing semtest.o(.text.xAreSemaphoreTasksStillRunning), (52 bytes).
    Removing semtest.o(.ARM.exidx.text.xAreSemaphoreTasksStillRunning), (8 bytes).
    Removing semtest.o(.bss.xAreSemaphoreTasksStillRunning.sLastCheckVariables), (8 bytes).
    Removing QueueSet.o(.text), (0 bytes).
    Removing QueueSet.o(.ARM.exidx.text.vStartQueueSetTasks), (8 bytes).
    Removing QueueSet.o(.ARM.exidx.text.prvQueueSetSendingTask), (8 bytes).
    Removing QueueSet.o(.ARM.exidx.text.prvQueueSetReceivingTask), (8 bytes).
    Removing QueueSet.o(.text.xAreQueueSetTasksStillRunning), (132 bytes).
    Removing QueueSet.o(.ARM.exidx.text.xAreQueueSetTasksStillRunning), (8 bytes).
    Removing QueueSet.o(.ARM.exidx.text.vQueueSetAccessQueueSetFromISR), (8 bytes).
    Removing QueueSet.o(.ARM.exidx.text.prvCheckReceivedValue), (8 bytes).
    Removing QueueSet.o(.bss.xAreQueueSetTasksStillRunning.ulLastCycleCounter), (4 bytes).
    Removing QueueSet.o(.bss.xAreQueueSetTasksStillRunning.ulLastISRTxValue), (4 bytes).
    Removing QueueSet.o(.bss.xAreQueueSetTasksStillRunning.ulLastQueueUsedCounter), (12 bytes).
    Removing port.o(.text), (0 bytes).
    Removing port.o(.ARM.exidx.text.vPortSuppressTicksAndSleep), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortYield), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSVCHandler_C), (8 bytes).
    Removing port.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port.o(.text.vPortEndScheduler), (30 bytes).
    Removing port.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port.o(.text.xPortIsInsideInterrupt), (12 bytes).
    Removing port.o(.ARM.exidx.text.xPortIsInsideInterrupt), (8 bytes).
    Removing portasm.o(.text), (0 bytes).
    Removing portasm.o(.ARM.exidx.text.vRestoreContextOfFirstTask), (8 bytes).
    Removing portasm.o(.text.xIsPrivileged), (16 bytes).
    Removing portasm.o(.ARM.exidx.text.xIsPrivileged), (8 bytes).
    Removing portasm.o(.text.vRaisePrivilege), (14 bytes).
    Removing portasm.o(.ARM.exidx.text.vRaisePrivilege), (8 bytes).
    Removing portasm.o(.text.vResetPrivilege), (14 bytes).
    Removing portasm.o(.ARM.exidx.text.vResetPrivilege), (8 bytes).
    Removing portasm.o(.ARM.exidx.text.vStartFirstTask), (8 bytes).
    Removing portasm.o(.ARM.exidx.text.ulSetInterruptMask), (8 bytes).
    Removing portasm.o(.ARM.exidx.text.vClearInterruptMask), (8 bytes).
    Removing portasm.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing portasm.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing retarget.o(.text), (0 bytes).
    Removing retarget.o(.ARM.exidx.text.ProcessHardFault), (8 bytes).
    Removing retarget.o(.text._sys_open), (80 bytes).
    Removing retarget.o(.ARM.exidx.text._sys_open), (8 bytes).
    Removing retarget.o(.text._sys_write), (76 bytes).
    Removing retarget.o(.ARM.exidx.text._sys_write), (8 bytes).
    Removing retarget.o(.text._sys_read), (100 bytes).
    Removing retarget.o(.ARM.exidx.text._sys_read), (8 bytes).
    Removing retarget.o(.text._sys_istty), (14 bytes).
    Removing retarget.o(.ARM.exidx.text._sys_istty), (8 bytes).
    Removing retarget.o(.text._sys_close), (16 bytes).
    Removing retarget.o(.ARM.exidx.text._sys_close), (8 bytes).
    Removing retarget.o(.text._sys_seek), (6 bytes).
    Removing retarget.o(.ARM.exidx.text._sys_seek), (8 bytes).
    Removing retarget.o(.text._sys_ensure), (6 bytes).
    Removing retarget.o(.ARM.exidx.text._sys_ensure), (8 bytes).
    Removing retarget.o(.text._sys_flen), (16 bytes).
    Removing retarget.o(.ARM.exidx.text._sys_flen), (8 bytes).
    Removing retarget.o(.text._sys_tmpnam), (2 bytes).
    Removing retarget.o(.ARM.exidx.text._sys_tmpnam), (8 bytes).
    Removing retarget.o(.text._sys_command_string), (2 bytes).
    Removing retarget.o(.ARM.exidx.text._sys_command_string), (8 bytes).
    Removing retarget.o(.text._sys_exit), (108 bytes).
    Removing retarget.o(.ARM.exidx.text._sys_exit), (8 bytes).
    Removing retarget.o(.text._ttywrch), (38 bytes).
    Removing retarget.o(.ARM.exidx.text._ttywrch), (8 bytes).
    Removing retarget.o(.text.abort), (2 bytes).
    Removing retarget.o(.ARM.exidx.text.abort), (8 bytes).
    Removing retarget.o(.text.__aeabi_assert), (180 bytes).
    Removing retarget.o(.ARM.exidx.text.__aeabi_assert), (8 bytes).
    Removing retarget.o(.ARM.exidx.text.fputc), (8 bytes).
    Removing retarget.o(.text.fgetc), (20 bytes).
    Removing retarget.o(.ARM.exidx.text.fgetc), (8 bytes).
    Removing retarget.o(.rodata.__stdin_name), (6 bytes).
    Removing retarget.o(.rodata.__stdout_name), (7 bytes).
    Removing retarget.o(.rodata.__stderr_name), (7 bytes).
    Removing clk.o(.text), (0 bytes).
    Removing clk.o(.text.CLK_DisableCKO), (18 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_DisableCKO), (8 bytes).
    Removing clk.o(.text.CLK_EnableCKO), (38 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_EnableCKO), (8 bytes).
    Removing clk.o(.text.CLK_GetHXTFreq), (26 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetHXTFreq), (8 bytes).
    Removing clk.o(.text.CLK_GetLXTFreq), (20 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetLXTFreq), (8 bytes).
    Removing clk.o(.text.CLK_GetMIRCFreq), (38 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetMIRCFreq), (8 bytes).
    Removing clk.o(.text.CLK_DisableMIRC), (18 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_DisableMIRC), (8 bytes).
    Removing clk.o(.text.CLK_EnableMIRC), (96 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_EnableMIRC), (8 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_WaitClockReady), (8 bytes).
    Removing clk.o(.text.CLK_GetPCLK0Freq), (28 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetPCLK0Freq), (8 bytes).
    Removing clk.o(.text.CLK_GetHCLK0Freq), (4 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetHCLK0Freq), (8 bytes).
    Removing clk.o(.text.CLK_GetPCLK1Freq), (28 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetPCLK1Freq), (8 bytes).
    Removing clk.o(.text.CLK_GetPCLK2Freq), (28 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetPCLK2Freq), (8 bytes).
    Removing clk.o(.text.CLK_GetPCLK3Freq), (28 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetPCLK3Freq), (8 bytes).
    Removing clk.o(.text.CLK_GetPCLK4Freq), (40 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetPCLK4Freq), (8 bytes).
    Removing clk.o(.text.CLK_GetHCLK2Freq), (28 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetHCLK2Freq), (8 bytes).
    Removing clk.o(.text.CLK_GetPCLK5Freq), (18 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetPCLK5Freq), (8 bytes).
    Removing clk.o(.text.CLK_GetACLKFreq), (18 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetACLKFreq), (8 bytes).
    Removing clk.o(.text.CLK_GetSCLKFreq), (18 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetSCLKFreq), (8 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_SystemClockUpdate), (8 bytes).
    Removing clk.o(.text.CLK_GetHCLK1Freq), (4 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetHCLK1Freq), (8 bytes).
    Removing clk.o(.text.CLK_SetCoreClock), (166 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_SetCoreClock), (8 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_EnableAPLL), (8 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_SetSCLK), (8 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetAPLL0ClockFreq), (8 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_SetModuleClock), (8 bytes).
    Removing clk.o(.text.CLK_SetSysTickClockSrc), (20 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_SetSysTickClockSrc), (8 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_EnableXtalRC), (8 bytes).
    Removing clk.o(.text.CLK_DisableXtalRC), (18 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_DisableXtalRC), (8 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_EnableModuleClock), (8 bytes).
    Removing clk.o(.text.CLK_DisableModuleClock), (38 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_DisableModuleClock), (8 bytes).
    Removing clk.o(.text.CLK_DisableAPLL), (30 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_DisableAPLL), (8 bytes).
    Removing clk.o(.text.CLK_WaitClockDisable), (40 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_WaitClockDisable), (8 bytes).
    Removing clk.o(.text.CLK_EnableSysTick), (94 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_EnableSysTick), (8 bytes).
    Removing clk.o(.text.CLK_DisableSysTick), (14 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_DisableSysTick), (8 bytes).
    Removing clk.o(.text.CLK_GetAPLL1ClockFreq), (130 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetAPLL1ClockFreq), (8 bytes).
    Removing clk.o(.text.CLK_GetModuleClockSource), (34 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetModuleClockSource), (8 bytes).
    Removing clk.o(.text.CLK_GetModuleClockDivider), (36 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetModuleClockDivider), (8 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_SetBusClock), (8 bytes).
    Removing clk.o(.text.CLK_SysTickDelay), (144 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_SysTickDelay), (8 bytes).
    Removing clk.o(.text.CLK_SysTickLongDelay), (70 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_SysTickLongDelay), (8 bytes).
    Removing sys.o(.text), (0 bytes).
    Removing sys.o(.ARM.exidx.text.SYS_ResetModule), (8 bytes).
    Removing sys.o(.text.SYS_EnableBOD), (78 bytes).
    Removing sys.o(.ARM.exidx.text.SYS_EnableBOD), (8 bytes).
    Removing sys.o(.text.SYS_DisableBOD), (60 bytes).
    Removing sys.o(.ARM.exidx.text.SYS_DisableBOD), (8 bytes).
    Removing uart.o(.text), (0 bytes).
    Removing uart.o(.text.UART_ClearIntFlag), (78 bytes).
    Removing uart.o(.ARM.exidx.text.UART_ClearIntFlag), (8 bytes).
    Removing uart.o(.text.UART_Close), (6 bytes).
    Removing uart.o(.ARM.exidx.text.UART_Close), (8 bytes).
    Removing uart.o(.text.UART_DisableFlowCtrl), (10 bytes).
    Removing uart.o(.ARM.exidx.text.UART_DisableFlowCtrl), (8 bytes).
    Removing uart.o(.text.UART_DisableInt), (10 bytes).
    Removing uart.o(.ARM.exidx.text.UART_DisableInt), (8 bytes).
    Removing uart.o(.text.UART_EnableFlowCtrl), (26 bytes).
    Removing uart.o(.ARM.exidx.text.UART_EnableFlowCtrl), (8 bytes).
    Removing uart.o(.text.UART_EnableInt), (8 bytes).
    Removing uart.o(.ARM.exidx.text.UART_EnableInt), (8 bytes).
    Removing uart.o(.ARM.exidx.text.UART_Open), (8 bytes).
    Removing uart.o(.text.UART_Read), (54 bytes).
    Removing uart.o(.ARM.exidx.text.UART_Read), (8 bytes).
    Removing uart.o(.text.UART_SetLineConfig), (536 bytes).
    Removing uart.o(.ARM.exidx.text.UART_SetLineConfig), (8 bytes).
    Removing uart.o(.text.UART_SetTimeoutCnt), (20 bytes).
    Removing uart.o(.ARM.exidx.text.UART_SetTimeoutCnt), (8 bytes).
    Removing uart.o(.text.UART_SelectIrDAMode), (554 bytes).
    Removing uart.o(.ARM.exidx.text.UART_SelectIrDAMode), (8 bytes).
    Removing uart.o(.text.UART_SelectRS485Mode), (34 bytes).
    Removing uart.o(.ARM.exidx.text.UART_SelectRS485Mode), (8 bytes).
    Removing uart.o(.text.UART_SelectLINMode), (22 bytes).
    Removing uart.o(.ARM.exidx.text.UART_SelectLINMode), (8 bytes).
    Removing uart.o(.text.UART_Write), (54 bytes).
    Removing uart.o(.ARM.exidx.text.UART_Write), (8 bytes).
    Removing uart.o(.text.UART_SelectSingleWireMode), (12 bytes).
    Removing uart.o(.ARM.exidx.text.UART_SelectSingleWireMode), (8 bytes).
    Removing uart.o(.text.UART_SetBaudRateFrationalDivider), (22 bytes).
    Removing uart.o(.ARM.exidx.text.UART_SetBaudRateFrationalDivider), (8 bytes).
    Removing uart.o(.text.UART_DisableBaudRateFrationalDivider), (16 bytes).
    Removing uart.o(.ARM.exidx.text.UART_DisableBaudRateFrationalDivider), (8 bytes).
    Removing synopGMAC_Dev.o(.text), (0 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_set_mdc_clk_div), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_get_mdc_clk_div), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_read_phy_reg), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_write_phy_reg), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_phy_loopback), (152 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_phy_loopback), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_read_version), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_reset), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_reset_nocheck), (24 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_reset_nocheck), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_dma_bus_mode_init), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_dma_control_init), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_wd_enable), (12 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_wd_enable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_wd_disable), (12 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_wd_disable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_jab_enable), (12 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_jab_enable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_jab_disable), (12 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_jab_disable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_frame_burst_enable), (12 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_frame_burst_enable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_frame_burst_disable), (12 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_frame_burst_disable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_jumbo_frame_enable), (12 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_jumbo_frame_enable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_jumbo_frame_disable), (12 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_jumbo_frame_disable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_disable_crs), (12 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_disable_crs), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_select_gmii), (12 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_select_gmii), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_select_mii), (12 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_select_mii), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_rx_own_enable), (12 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_rx_own_enable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_rx_own_disable), (12 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_rx_own_disable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_loopback_on), (12 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_loopback_on), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_loopback_off), (12 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_loopback_off), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_set_full_duplex), (12 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_set_full_duplex), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_set_half_duplex), (12 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_set_half_duplex), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_retry_enable), (12 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_retry_enable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_retry_disable), (12 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_retry_disable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_pad_crc_strip_enable), (10 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_pad_crc_strip_enable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_pad_crc_strip_disable), (26 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_pad_crc_strip_disable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_back_off_limit), (34 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_back_off_limit), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_deferral_check_enable), (10 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_deferral_check_enable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_deferral_check_disable), (10 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_deferral_check_disable), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_rx_enable), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_rx_disable), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_tx_enable), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_tx_disable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_frame_filter_enable), (12 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_frame_filter_enable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_frame_filter_disable), (12 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_frame_filter_disable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_write_hash_table_high), (10 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_write_hash_table_high), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_write_hash_table_low), (10 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_write_hash_table_low), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_hash_perfect_filter_enable), (12 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_hash_perfect_filter_enable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_Hash_filter_only_enable), (12 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_Hash_filter_only_enable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_src_addr_filter_enable), (12 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_src_addr_filter_enable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_src_addr_filter_disable), (12 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_src_addr_filter_disable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_dst_addr_filter_inverse), (10 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_dst_addr_filter_inverse), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_dst_addr_filter_normal), (10 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_dst_addr_filter_normal), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_set_pass_control), (34 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_set_pass_control), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_broadcast_enable), (10 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_broadcast_enable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_broadcast_disable), (10 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_broadcast_disable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_multicast_enable), (10 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_multicast_enable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_multicast_disable), (10 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_multicast_disable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_multicast_hash_filter_enable), (10 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_multicast_hash_filter_enable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_multicast_hash_filter_disable), (10 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_multicast_hash_filter_disable), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_promisc_enable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_promisc_disable), (10 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_promisc_disable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_unicast_hash_filter_enable), (10 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_unicast_hash_filter_enable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_unicast_hash_filter_disable), (10 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_unicast_hash_filter_disable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_unicast_pause_frame_detect_enable), (10 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_unicast_pause_frame_detect_enable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_unicast_pause_frame_detect_disable), (10 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_unicast_pause_frame_detect_disable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_rx_flow_control_enable), (10 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_rx_flow_control_enable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_rx_flow_control_disable), (10 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_rx_flow_control_disable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_tx_flow_control_enable), (10 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_tx_flow_control_enable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_tx_flow_control_disable), (10 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_tx_flow_control_disable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_tx_activate_flow_control), (42 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_tx_activate_flow_control), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_tx_deactivate_flow_control), (20 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_tx_deactivate_flow_control), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_pause_control), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_mac_init), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_set_mac_addr), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_get_mac_addr), (32 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_get_mac_addr), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_attach), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_rx_desc_init_ring), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_tx_desc_init_ring), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_init_tx_rx_desc_queue), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_init_rx_desc_base), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_init_tx_desc_base), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_is_desc_owned_by_dma), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_get_rx_desc_frame_length), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_is_desc_valid), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_is_desc_empty), (14 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_is_desc_empty), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_is_rx_desc_valid), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_is_tx_aborted), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_is_tx_carrier_error), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_get_tx_collision_count), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_is_exc_tx_collisions), (6 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_is_exc_tx_collisions), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_is_rx_frame_damaged), (12 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_is_rx_frame_damaged), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_is_rx_frame_collision), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_is_rx_crc), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_is_frame_dribbling_errors), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_is_rx_frame_length_errors), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_is_last_rx_desc), (6 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_is_last_rx_desc), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_is_last_tx_desc), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_is_last_tx_desc), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_get_tx_qptr), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_set_crc_replacement), (22 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_set_crc_replacement), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_clr_crc_replacement), (24 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_clr_crc_replacement), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_set_tx_qptr), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_tx_checksum_offload_ipv4hdr), (12 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_tx_checksum_offload_ipv4hdr), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_tx_checksum_offload_tcponly), (12 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_tx_checksum_offload_tcponly), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_tx_checksum_offload_tcp_pseudo), (10 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_tx_checksum_offload_tcp_pseudo), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_tx_checksum_offload_bypass), (10 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_tx_checksum_offload_bypass), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_set_rx_qptr), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_get_rx_qptr), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_clear_interrupt), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_get_interrupt_type), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_enable_interrupt), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_get_ie), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_get_ie), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_disable_interrupt_all), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_disable_interrupt), (10 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_disable_interrupt), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_enable_dma_rx), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_enable_dma_tx), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_enable_under_size_pkt), (32 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_enable_under_size_pkt), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_disable_under_size_pkt), (32 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_disable_under_size_pkt), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_enable_crc_err_pkt), (32 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_enable_crc_err_pkt), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_disable_crc_err_pkt), (32 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_disable_crc_err_pkt), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_resume_dma_tx), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_resume_dma_rx), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_take_desc_ownership), (14 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_take_desc_ownership), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_take_desc_ownership_rx), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_take_desc_ownership_tx), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_disable_dma_tx), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_disable_dma_rx), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_pmt_int_enable), (10 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_pmt_int_enable), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_pmt_int_disable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_power_down_enable), (10 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_power_down_enable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_power_down_disable), (10 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_power_down_disable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_enable_pmt_interrupt), (10 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_enable_pmt_interrupt), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_disable_pmt_interrupt), (10 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_disable_pmt_interrupt), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_magic_packet_enable), (10 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_magic_packet_enable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_magic_packet_disable), (10 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_magic_packet_disable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_wakeup_frame_enable), (10 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_wakeup_frame_enable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_pmt_unicast_enable), (12 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_pmt_unicast_enable), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_is_magic_packet_received), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_is_wakeup_frame_received), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_enable_rx_chksum_offload), (12 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_enable_rx_chksum_offload), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_disable_rx_chksum_offload), (12 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_disable_rx_chksum_offload), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_rx_tcpip_chksum_drop_enable), (12 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_rx_tcpip_chksum_drop_enable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_rx_tcpip_chksum_drop_disable), (12 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_rx_tcpip_chksum_drop_disable), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_is_ext_status), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_ES_is_IP_header_error), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_ES_is_rx_checksum_bypassed), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_ES_is_IP_payload_error), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_is_rx_checksum_error), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_is_tx_ipv4header_checksum_error), (8 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_is_tx_payload_checksum_error), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_TS_enable), (12 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_enable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_TS_disable), (12 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_disable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_TS_int_enable), (12 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_int_enable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_TS_int_disable), (12 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_int_disable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_TS_mac_addr_filt_enable), (14 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_mac_addr_filt_enable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_TS_mac_addr_filt_disable), (14 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_mac_addr_filt_disable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_TS_set_clk_type), (38 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_set_clk_type), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_TS_master_enable), (14 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_master_enable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_TS_master_disable), (14 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_master_disable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_TS_event_enable), (14 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_event_enable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_TS_event_disable), (14 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_event_disable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_TS_IPV4_enable), (14 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_IPV4_enable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_TS_IPV4_disable), (14 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_IPV4_disable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_TS_IPV6_enable), (14 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_IPV6_enable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_TS_IPV6_disable), (14 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_IPV6_disable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_TS_ptp_over_ethernet_enable), (14 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_ptp_over_ethernet_enable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_TS_ptp_over_ethernet_disable), (14 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_ptp_over_ethernet_disable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_TS_pkt_snoop_ver2), (14 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_pkt_snoop_ver2), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_TS_pkt_snoop_ver1), (14 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_pkt_snoop_ver1), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_TS_digital_rollover_enable), (14 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_digital_rollover_enable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_TS_binary_rollover_enable), (14 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_binary_rollover_enable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_TS_all_frames_enable), (14 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_all_frames_enable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_TS_all_frames_disable), (14 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_all_frames_disable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_TS_addend_update), (68 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_addend_update), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_TS_timestamp_update), (84 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_timestamp_update), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_TS_timestamp_init), (84 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_timestamp_init), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_TS_coarse_update), (12 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_coarse_update), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_TS_fine_update), (12 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_fine_update), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_TS_subsecond_init), (12 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_subsecond_init), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_TS_read_timestamp), (54 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_read_timestamp), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_TS_load_timestamp_higher_val), (12 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_load_timestamp_higher_val), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_TS_read_timestamp_higher_val), (18 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_read_timestamp_higher_val), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_TS_load_target_timestamp), (34 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_load_target_timestamp), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_TS_read_target_timestamp), (34 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_TS_read_target_timestamp), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_src_addr_insert_enable), (32 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_src_addr_insert_enable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_src_addr_insert_disable), (12 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_src_addr_insert_disable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_src_addr_replace_enable), (32 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_src_addr_replace_enable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_src_addr_replace_disable), (12 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_src_addr_replace_disable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_svlan_insertion_enable), (14 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_svlan_insertion_enable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_cvlan_insertion_enable), (14 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_cvlan_insertion_enable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_svlan_replace_enable), (14 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_svlan_replace_enable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_cvlan_replace_enable), (14 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_cvlan_replace_enable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_vlan_deletion_enable), (14 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_vlan_deletion_enable), (8 bytes).
    Removing synopGMAC_Dev.o(.text.synopGMAC_vlan_no_act_enable), (14 bytes).
    Removing synopGMAC_Dev.o(.ARM.exidx.text.synopGMAC_vlan_no_act_enable), (8 bytes).
    Removing synopGMAC_Dev.o(.bss.prevtx), (4 bytes).
    Removing synopGMAC_network_interface.o(.text), (0 bytes).
    Removing synopGMAC_network_interface.o(.ARM.exidx.text.synopGMAC_powerup_mac), (8 bytes).
    Removing synopGMAC_network_interface.o(.text.synopGMAC_powerdown_mac), (116 bytes).
    Removing synopGMAC_network_interface.o(.ARM.exidx.text.synopGMAC_powerdown_mac), (8 bytes).
    Removing synopGMAC_network_interface.o(.ARM.exidx.text.synopGMAC_setup_tx_desc_queue), (8 bytes).
    Removing synopGMAC_network_interface.o(.ARM.exidx.text.synopGMAC_setup_rx_desc_queue), (8 bytes).
    Removing synopGMAC_network_interface.o(.text.synopGMAC_giveup_rx_desc_queue), (8 bytes).
    Removing synopGMAC_network_interface.o(.ARM.exidx.text.synopGMAC_giveup_rx_desc_queue), (8 bytes).
    Removing synopGMAC_network_interface.o(.text.synopGMAC_giveup_tx_desc_queue), (8 bytes).
    Removing synopGMAC_network_interface.o(.ARM.exidx.text.synopGMAC_giveup_tx_desc_queue), (8 bytes).
    Removing synopGMAC_network_interface.o(.text.synopGMAC_set_speed), (100 bytes).
    Removing synopGMAC_network_interface.o(.ARM.exidx.text.synopGMAC_set_speed), (8 bytes).
    Removing synopGMAC_network_interface.o(.ARM.exidx.text.synopGMAC_xmit_frames), (8 bytes).
    Removing synopGMAC_network_interface.o(.ARM.exidx.text.synop_handle_transmit_over), (8 bytes).
    Removing synopGMAC_network_interface.o(.ARM.exidx.text.synop_handle_received_data), (8 bytes).
    Removing synopGMAC_network_interface.o(.ARM.exidx.text.synopGMAC_set_mode), (8 bytes).
    Removing synopGMAC_plat.o(.text), (0 bytes).
    Removing synopGMAC_plat.o(.ARM.exidx.text.plat_delay), (8 bytes).
    Removing synopGMAC_plat.o(.ARM.exidx.text.synopGMACReadReg), (8 bytes).
    Removing synopGMAC_plat.o(.ARM.exidx.text.synopGMACWriteReg), (8 bytes).
    Removing synopGMAC_plat.o(.ARM.exidx.text.synopGMACSetBits), (8 bytes).
    Removing synopGMAC_plat.o(.ARM.exidx.text.synopGMACClearBits), (8 bytes).
    Removing synopGMAC_plat.o(.text.synopGMACCheckBits), (10 bytes).
    Removing synopGMAC_plat.o(.ARM.exidx.text.synopGMACCheckBits), (8 bytes).
    Removing gpio.o(.text), (0 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_SetMode), (8 bytes).
    Removing gpio.o(.text.GPIO_EnableInt), (50 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_EnableInt), (8 bytes).
    Removing gpio.o(.text.GPIO_DisableInt), (30 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_DisableInt), (8 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_SetSlewCtl), (8 bytes).
    Removing gpio.o(.text.GPIO_SetPullCtl), (60 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_SetPullCtl), (8 bytes).
    Removing gpio.o(.text.GPIO_EnableEINT), (104 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_EnableEINT), (8 bytes).
    Removing gpio.o(.text.GPIO_DisableEINT), (100 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_DisableEINT), (8 bytes).
    Removing sys_arch.o(.text), (0 bytes).
    Removing sys_arch.o(.ARM.exidx.text.sys_mbox_new), (8 bytes).
    Removing sys_arch.o(.ARM.exidx.text.sys_mbox_free), (8 bytes).
    Removing sys_arch.o(.text.sys_mbox_post), (34 bytes).
    Removing sys_arch.o(.ARM.exidx.text.sys_mbox_post), (8 bytes).
    Removing sys_arch.o(.ARM.exidx.text.sys_mbox_trypost), (8 bytes).
    Removing sys_arch.o(.text.sys_mbox_trypost_fromisr), (30 bytes).
    Removing sys_arch.o(.ARM.exidx.text.sys_mbox_trypost_fromisr), (8 bytes).
    Removing sys_arch.o(.ARM.exidx.text.sys_arch_mbox_fetch), (8 bytes).
    Removing sys_arch.o(.ARM.exidx.text.sys_arch_mbox_tryfetch), (8 bytes).
    Removing sys_arch.o(.ARM.exidx.text.sys_sem_new), (8 bytes).
    Removing sys_arch.o(.ARM.exidx.text.sys_arch_sem_wait), (8 bytes).
    Removing sys_arch.o(.ARM.exidx.text.sys_mutex_new), (8 bytes).
    Removing sys_arch.o(.ARM.exidx.text.sys_mutex_lock), (8 bytes).
    Removing sys_arch.o(.ARM.exidx.text.sys_mutex_unlock), (8 bytes).
    Removing sys_arch.o(.text.sys_mutex_free), (6 bytes).
    Removing sys_arch.o(.ARM.exidx.text.sys_mutex_free), (8 bytes).
    Removing sys_arch.o(.ARM.exidx.text.sys_sem_signal), (8 bytes).
    Removing sys_arch.o(.ARM.exidx.text.sys_sem_free), (8 bytes).
    Removing sys_arch.o(.ARM.exidx.text.sys_init), (8 bytes).
    Removing sys_arch.o(.ARM.exidx.text.sys_now), (8 bytes).
    Removing sys_arch.o(.ARM.exidx.text.sys_thread_new), (8 bytes).
    Removing sys_arch.o(.ARM.exidx.text.sys_arch_protect), (8 bytes).
    Removing sys_arch.o(.ARM.exidx.text.sys_arch_unprotect), (8 bytes).
    Removing sys_arch.o(.text.sys_assert), (2 bytes).
    Removing sys_arch.o(.ARM.exidx.text.sys_assert), (8 bytes).
    Removing sys_arch.o(.bss.errno), (4 bytes).
    Removing time_stamp.o(.text), (0 bytes).
    Removing ethernetif.o(.text), (0 bytes).
    Removing ethernetif.o(.text.ethernetif_input), (112 bytes).
    Removing ethernetif.o(.ARM.exidx.text.ethernetif_input), (8 bytes).
    Removing ethernetif.o(.ARM.exidx.text.ethernetif_init), (8 bytes).
    Removing ethernetif.o(.ARM.exidx.text.low_level_output), (8 bytes).
    Removing ethernetif.o(.ARM.exidx.text.eth_rx_thread_entry), (8 bytes).
    Removing def.o(.text), (0 bytes).
    Removing def.o(.ARM.exidx.text.lwip_htons), (8 bytes).
    Removing def.o(.ARM.exidx.text.lwip_htonl), (8 bytes).
    Removing def.o(.text.lwip_strnstr), (92 bytes).
    Removing def.o(.ARM.exidx.text.lwip_strnstr), (8 bytes).
    Removing def.o(.text.lwip_stricmp), (54 bytes).
    Removing def.o(.ARM.exidx.text.lwip_stricmp), (8 bytes).
    Removing def.o(.text.lwip_strnicmp), (60 bytes).
    Removing def.o(.ARM.exidx.text.lwip_strnicmp), (8 bytes).
    Removing def.o(.text.lwip_itoa), (168 bytes).
    Removing def.o(.ARM.exidx.text.lwip_itoa), (8 bytes).
    Removing dns.o(.text), (0 bytes).
    Removing inet_chksum.o(.text), (0 bytes).
    Removing inet_chksum.o(.text.lwip_standard_chksum), (108 bytes).
    Removing inet_chksum.o(.ARM.exidx.text.lwip_standard_chksum), (8 bytes).
    Removing inet_chksum.o(.ARM.exidx.text.inet_chksum_pseudo), (8 bytes).
    Removing inet_chksum.o(.ARM.exidx.text.ip_chksum_pseudo), (8 bytes).
    Removing inet_chksum.o(.text.inet_chksum_pseudo_partial), (396 bytes).
    Removing inet_chksum.o(.ARM.exidx.text.inet_chksum_pseudo_partial), (8 bytes).
    Removing inet_chksum.o(.text.ip_chksum_pseudo_partial), (18 bytes).
    Removing inet_chksum.o(.ARM.exidx.text.ip_chksum_pseudo_partial), (8 bytes).
    Removing inet_chksum.o(.ARM.exidx.text.inet_chksum), (8 bytes).
    Removing inet_chksum.o(.ARM.exidx.text.inet_chksum_pbuf), (8 bytes).
    Removing inet_chksum.o(.rodata.str1.1), (81 bytes).
    Removing init.o(.text), (0 bytes).
    Removing init.o(.ARM.exidx.text.lwip_init), (8 bytes).
    Removing ip.o(.text), (0 bytes).
    Removing mem.o(.text), (0 bytes).
    Removing mem.o(.ARM.exidx.text.mem_init), (8 bytes).
    Removing mem.o(.ARM.exidx.text.mem_free), (8 bytes).
    Removing mem.o(.ARM.exidx.text.mem_trim), (8 bytes).
    Removing mem.o(.ARM.exidx.text.mem_malloc), (8 bytes).
    Removing mem.o(.text.mem_calloc), (38 bytes).
    Removing mem.o(.ARM.exidx.text.mem_calloc), (8 bytes).
    Removing memp.o(.text), (0 bytes).
    Removing memp.o(.ARM.exidx.text.memp_init_pool), (8 bytes).
    Removing memp.o(.ARM.exidx.text.memp_init), (8 bytes).
    Removing memp.o(.ARM.exidx.text.memp_malloc_pool), (8 bytes).
    Removing memp.o(.ARM.exidx.text.memp_malloc), (8 bytes).
    Removing memp.o(.ARM.exidx.text.memp_free_pool), (8 bytes).
    Removing memp.o(.ARM.exidx.text.memp_free), (8 bytes).
    Removing netif.o(.text), (0 bytes).
    Removing netif.o(.ARM.exidx.text.netif_init), (8 bytes).
    Removing netif.o(.text.netif_input), (156 bytes).
    Removing netif.o(.ARM.exidx.text.netif_input), (8 bytes).
    Removing netif.o(.text.netif_add_noaddr), (28 bytes).
    Removing netif.o(.ARM.exidx.text.netif_add_noaddr), (8 bytes).
    Removing netif.o(.ARM.exidx.text.netif_add), (8 bytes).
    Removing netif.o(.ARM.exidx.text.netif_null_output_ip4), (8 bytes).
    Removing netif.o(.text.netif_set_addr), (100 bytes).
    Removing netif.o(.ARM.exidx.text.netif_set_addr), (8 bytes).
    Removing netif.o(.text.netif_set_ipaddr), (156 bytes).
    Removing netif.o(.ARM.exidx.text.netif_set_ipaddr), (8 bytes).
    Removing netif.o(.ARM.exidx.text.netif_do_set_ipaddr), (8 bytes).
    Removing netif.o(.text.netif_set_netmask), (92 bytes).
    Removing netif.o(.ARM.exidx.text.netif_set_netmask), (8 bytes).
    Removing netif.o(.text.netif_set_gw), (84 bytes).
    Removing netif.o(.ARM.exidx.text.netif_set_gw), (8 bytes).
    Removing netif.o(.text.netif_remove), (110 bytes).
    Removing netif.o(.ARM.exidx.text.netif_remove), (8 bytes).
    Removing netif.o(.text.netif_set_down), (88 bytes).
    Removing netif.o(.ARM.exidx.text.netif_set_down), (8 bytes).
    Removing netif.o(.ARM.exidx.text.netif_set_default), (8 bytes).
    Removing netif.o(.ARM.exidx.text.netif_set_up), (8 bytes).
    Removing netif.o(.text.netif_set_link_up), (112 bytes).
    Removing netif.o(.ARM.exidx.text.netif_set_link_up), (8 bytes).
    Removing netif.o(.text.netif_set_link_down), (84 bytes).
    Removing netif.o(.ARM.exidx.text.netif_set_link_down), (8 bytes).
    Removing netif.o(.text.netif_name_to_index), (80 bytes).
    Removing netif.o(.ARM.exidx.text.netif_name_to_index), (8 bytes).
    Removing netif.o(.text.netif_find), (70 bytes).
    Removing netif.o(.ARM.exidx.text.netif_find), (8 bytes).
    Removing netif.o(.text.netif_index_to_name), (72 bytes).
    Removing netif.o(.ARM.exidx.text.netif_index_to_name), (8 bytes).
    Removing netif.o(.ARM.exidx.text.netif_get_by_index), (8 bytes).
    Removing pbuf.o(.text), (0 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_alloc), (8 bytes).
    Removing pbuf.o(.text.pbuf_alloc_reference), (90 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_alloc_reference), (8 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_free), (8 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_alloced_custom), (8 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_realloc), (8 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_add_header), (8 bytes).
    Removing pbuf.o(.text.pbuf_add_header_force), (110 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_add_header_force), (8 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_remove_header), (8 bytes).
    Removing pbuf.o(.text.pbuf_header), (6 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_header), (8 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_header_impl), (8 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_header_force), (8 bytes).
    Removing pbuf.o(.text.pbuf_free_header), (124 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_free_header), (8 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_clen), (8 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_ref), (8 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_cat), (8 bytes).
    Removing pbuf.o(.text.pbuf_chain), (70 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_chain), (8 bytes).
    Removing pbuf.o(.text.pbuf_dechain), (180 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_dechain), (8 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_copy), (8 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_copy_partial), (8 bytes).
    Removing pbuf.o(.text.pbuf_get_contiguous), (288 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_get_contiguous), (8 bytes).
    Removing pbuf.o(.text.pbuf_skip), (28 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_skip), (8 bytes).
    Removing pbuf.o(.text.pbuf_take), (356 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_take), (8 bytes).
    Removing pbuf.o(.text.pbuf_take_at), (164 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_take_at), (8 bytes).
    Removing pbuf.o(.text.pbuf_coalesce), (150 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_coalesce), (8 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_clone), (8 bytes).
    Removing pbuf.o(.text.pbuf_get_at), (54 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_get_at), (8 bytes).
    Removing pbuf.o(.text.pbuf_try_get_at), (40 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_try_get_at), (8 bytes).
    Removing pbuf.o(.text.pbuf_put_at), (38 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_put_at), (8 bytes).
    Removing pbuf.o(.text.pbuf_memcmp), (186 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_memcmp), (8 bytes).
    Removing pbuf.o(.text.pbuf_memfind), (264 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_memfind), (8 bytes).
    Removing pbuf.o(.text.pbuf_strstr), (58 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_strstr), (8 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_free_ooseq_callback), (8 bytes).
    Removing raw.o(.text), (0 bytes).
    Removing stats.o(.text), (0 bytes).
    Removing sys_lwip.o(.text), (0 bytes).
    Removing sys_lwip.o(.text.sys_msleep), (46 bytes).
    Removing sys_lwip.o(.ARM.exidx.text.sys_msleep), (8 bytes).
    Removing tcp.o(.text), (0 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_init), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_free), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_tmr), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_fasttmr), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_slowtmr), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_close), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_close_shutdown), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_shutdown), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_abandon), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_pcb_remove), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_segs_free), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_abort), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_bind), (8 bytes).
    Removing tcp.o(.text.tcp_bind_netif), (16 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_bind_netif), (8 bytes).
    Removing tcp.o(.text.tcp_listen_with_backlog), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_listen_with_backlog), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_listen_with_backlog_and_err), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_accept_null), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_update_rcv_ann_wnd), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_recved), (8 bytes).
    Removing tcp.o(.text.tcp_connect), (720 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_connect), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_next_iss), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_eff_send_mss_netif), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_free_ooseq), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_pcb_purge), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_close_shutdown_fin), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_process_refused_data), (8 bytes).
    Removing tcp.o(.text.tcp_txnow), (34 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_txnow), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_recv_null), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_seg_free), (8 bytes).
    Removing tcp.o(.text.tcp_setprio), (64 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_setprio), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_seg_copy), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_alloc), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_kill_prio), (8 bytes).
    Removing tcp.o(.text.tcp_new), (6 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_new), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_new_ip_type), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_arg), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_recv), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_sent), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_err), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_accept), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_poll), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_netif_ip_addr_changed), (8 bytes).
    Removing tcp.o(.text.tcp_debug_state_str), (52 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_debug_state_str), (8 bytes).
    Removing tcp.o(.text.tcp_tcp_get_tcp_addrinfo), (48 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_tcp_get_tcp_addrinfo), (8 bytes).
    Removing tcp_in.o(.text), (0 bytes).
    Removing tcp_in.o(.ARM.exidx.text.tcp_input), (8 bytes).
    Removing tcp_in.o(.ARM.exidx.text.tcp_timewait_input), (8 bytes).
    Removing tcp_in.o(.ARM.exidx.text.tcp_listen_input), (8 bytes).
    Removing tcp_in.o(.ARM.exidx.text.tcp_process), (8 bytes).
    Removing tcp_in.o(.ARM.exidx.text.tcp_input_delayed_close), (8 bytes).
    Removing tcp_in.o(.ARM.exidx.text.tcp_trigger_input_pcb_close), (8 bytes).
    Removing tcp_in.o(.ARM.exidx.text.tcp_parseopt), (8 bytes).
    Removing tcp_in.o(.ARM.exidx.text.tcp_receive), (8 bytes).
    Removing tcp_in.o(.ARM.exidx.text.tcp_free_acked_segments), (8 bytes).
    Removing tcp_in.o(.ARM.exidx.text.tcp_oos_insert_segment), (8 bytes).
    Removing tcp_out.o(.text), (0 bytes).
    Removing tcp_out.o(.ARM.exidx.text.tcp_write), (8 bytes).
    Removing tcp_out.o(.ARM.exidx.text.tcp_pbuf_prealloc), (8 bytes).
    Removing tcp_out.o(.ARM.exidx.text.tcp_create_segment), (8 bytes).
    Removing tcp_out.o(.ARM.exidx.text.tcp_split_unsent_seg), (8 bytes).
    Removing tcp_out.o(.ARM.exidx.text.tcp_send_fin), (8 bytes).
    Removing tcp_out.o(.ARM.exidx.text.tcp_enqueue_flags), (8 bytes).
    Removing tcp_out.o(.ARM.exidx.text.tcp_output), (8 bytes).
    Removing tcp_out.o(.ARM.exidx.text.tcp_send_empty_ack), (8 bytes).
    Removing tcp_out.o(.ARM.exidx.text.tcp_rexmit_rto_prepare), (8 bytes).
    Removing tcp_out.o(.ARM.exidx.text.tcp_rexmit_rto_commit), (8 bytes).
    Removing tcp_out.o(.ARM.exidx.text.tcp_rexmit_rto), (8 bytes).
    Removing tcp_out.o(.ARM.exidx.text.tcp_rexmit), (8 bytes).
    Removing tcp_out.o(.ARM.exidx.text.tcp_rexmit_fast), (8 bytes).
    Removing tcp_out.o(.ARM.exidx.text.tcp_rst), (8 bytes).
    Removing tcp_out.o(.ARM.exidx.text.tcp_output_alloc_header_common), (8 bytes).
    Removing tcp_out.o(.ARM.exidx.text.tcp_output_control_segment), (8 bytes).
    Removing tcp_out.o(.ARM.exidx.text.tcp_keepalive), (8 bytes).
    Removing tcp_out.o(.ARM.exidx.text.tcp_zero_window_probe), (8 bytes).
    Removing timeouts.o(.text), (0 bytes).
    Removing timeouts.o(.ARM.exidx.text.tcp_timer_needed), (8 bytes).
    Removing timeouts.o(.ARM.exidx.text.sys_timeout), (8 bytes).
    Removing timeouts.o(.ARM.exidx.text.tcpip_tcp_timer), (8 bytes).
    Removing timeouts.o(.ARM.exidx.text.sys_timeouts_init), (8 bytes).
    Removing timeouts.o(.ARM.exidx.text.lwip_cyclic_timer), (8 bytes).
    Removing timeouts.o(.text.sys_untimeout), (78 bytes).
    Removing timeouts.o(.ARM.exidx.text.sys_untimeout), (8 bytes).
    Removing timeouts.o(.ARM.exidx.text.sys_check_timeouts), (8 bytes).
    Removing timeouts.o(.text.sys_restart_timeouts), (50 bytes).
    Removing timeouts.o(.ARM.exidx.text.sys_restart_timeouts), (8 bytes).
    Removing timeouts.o(.ARM.exidx.text.sys_timeouts_sleeptime), (8 bytes).
    Removing timeouts.o(.rodata.lwip_num_cyclic_timers), (4 bytes).
    Removing udp.o(.text), (0 bytes).
    Removing udp.o(.ARM.exidx.text.udp_init), (8 bytes).
    Removing udp.o(.ARM.exidx.text.udp_input), (8 bytes).
    Removing udp.o(.text.udp_send), (200 bytes).
    Removing udp.o(.ARM.exidx.text.udp_send), (8 bytes).
    Removing udp.o(.text.udp_sendto), (244 bytes).
    Removing udp.o(.ARM.exidx.text.udp_sendto), (8 bytes).
    Removing udp.o(.text.udp_sendto_if), (280 bytes).
    Removing udp.o(.ARM.exidx.text.udp_sendto_if), (8 bytes).
    Removing udp.o(.text.udp_sendto_if_src), (540 bytes).
    Removing udp.o(.ARM.exidx.text.udp_sendto_if_src), (8 bytes).
    Removing udp.o(.ARM.exidx.text.udp_bind), (8 bytes).
    Removing udp.o(.text.udp_bind_netif), (16 bytes).
    Removing udp.o(.ARM.exidx.text.udp_bind_netif), (8 bytes).
    Removing udp.o(.text.udp_connect), (200 bytes).
    Removing udp.o(.ARM.exidx.text.udp_connect), (8 bytes).
    Removing udp.o(.text.udp_disconnect), (76 bytes).
    Removing udp.o(.ARM.exidx.text.udp_disconnect), (8 bytes).
    Removing udp.o(.ARM.exidx.text.udp_recv), (8 bytes).
    Removing udp.o(.ARM.exidx.text.udp_remove), (8 bytes).
    Removing udp.o(.text.udp_new), (38 bytes).
    Removing udp.o(.ARM.exidx.text.udp_new), (8 bytes).
    Removing udp.o(.ARM.exidx.text.udp_new_ip_type), (8 bytes).
    Removing udp.o(.ARM.exidx.text.udp_netif_ip_addr_changed), (8 bytes).
    Removing autoip.o(.text), (0 bytes).
    Removing dhcp.o(.text), (0 bytes).
    Removing etharp.o(.text), (0 bytes).
    Removing etharp.o(.ARM.exidx.text.etharp_tmr), (8 bytes).
    Removing etharp.o(.ARM.exidx.text.etharp_request), (8 bytes).
    Removing etharp.o(.text.etharp_cleanup_netif), (60 bytes).
    Removing etharp.o(.ARM.exidx.text.etharp_cleanup_netif), (8 bytes).
    Removing etharp.o(.text.etharp_find_addr), (224 bytes).
    Removing etharp.o(.ARM.exidx.text.etharp_find_addr), (8 bytes).
    Removing etharp.o(.ARM.exidx.text.etharp_find_entry), (8 bytes).
    Removing etharp.o(.text.etharp_get_entry), (188 bytes).
    Removing etharp.o(.ARM.exidx.text.etharp_get_entry), (8 bytes).
    Removing etharp.o(.ARM.exidx.text.etharp_input), (8 bytes).
    Removing etharp.o(.ARM.exidx.text.etharp_raw), (8 bytes).
    Removing etharp.o(.ARM.exidx.text.etharp_output), (8 bytes).
    Removing etharp.o(.ARM.exidx.text.etharp_output_to_arp_index), (8 bytes).
    Removing etharp.o(.ARM.exidx.text.etharp_query), (8 bytes).
    Removing icmp.o(.text), (0 bytes).
    Removing icmp.o(.ARM.exidx.text.icmp_input), (8 bytes).
    Removing icmp.o(.ARM.exidx.text.icmp_dest_unreach), (8 bytes).
    Removing icmp.o(.ARM.exidx.text.icmp_send_response), (8 bytes).
    Removing icmp.o(.ARM.exidx.text.icmp_time_exceeded), (8 bytes).
    Removing igmp.o(.text), (0 bytes).
    Removing ip4.o(.text), (0 bytes).
    Removing ip4.o(.ARM.exidx.text.ip4_route), (8 bytes).
    Removing ip4.o(.ARM.exidx.text.ip4_input), (8 bytes).
    Removing ip4.o(.ARM.exidx.text.ip4_output_if), (8 bytes).
    Removing ip4.o(.ARM.exidx.text.ip4_output_if_src), (8 bytes).
    Removing ip4.o(.text.ip4_output), (252 bytes).
    Removing ip4.o(.ARM.exidx.text.ip4_output), (8 bytes).
    Removing ip4_addr.o(.text), (0 bytes).
    Removing ip4_addr.o(.ARM.exidx.text.ip4_addr_isbroadcast_u32), (8 bytes).
    Removing ip4_addr.o(.text.ip4_addr_netmask_valid), (54 bytes).
    Removing ip4_addr.o(.ARM.exidx.text.ip4_addr_netmask_valid), (8 bytes).
    Removing ip4_addr.o(.text.ipaddr_addr), (26 bytes).
    Removing ip4_addr.o(.ARM.exidx.text.ipaddr_addr), (8 bytes).
    Removing ip4_addr.o(.text.ip4addr_aton), (388 bytes).
    Removing ip4_addr.o(.ARM.exidx.text.ip4addr_aton), (8 bytes).
    Removing ip4_addr.o(.ARM.exidx.text.ip4addr_ntoa), (8 bytes).
    Removing ip4_addr.o(.text.ip4addr_ntoa_r), (184 bytes).
    Removing ip4_addr.o(.ARM.exidx.text.ip4addr_ntoa_r), (8 bytes).
    Removing ip4_addr.o(.rodata.ip_addr_broadcast), (4 bytes).
    Removing ip4_addr.o(.rodata.str1.1), (83 bytes).
    Removing ip4_frag.o(.text), (0 bytes).
    Removing ip4_frag.o(.ARM.exidx.text.ip_reass_tmr), (8 bytes).
    Removing ip4_frag.o(.ARM.exidx.text.ip_reass_free_complete_datagram), (8 bytes).
    Removing ip4_frag.o(.ARM.exidx.text.ip4_reass), (8 bytes).
    Removing ip4_frag.o(.ARM.exidx.text.ip4_frag), (8 bytes).
    Removing ip4_frag.o(.ARM.exidx.text.ipfrag_free_pbuf_custom), (8 bytes).
    Removing api_lib.o(.text), (0 bytes).
    Removing api_lib.o(.ARM.exidx.text.netconn_new_with_proto_and_callback), (8 bytes).
    Removing api_lib.o(.text.netconn_prepare_delete), (60 bytes).
    Removing api_lib.o(.ARM.exidx.text.netconn_prepare_delete), (8 bytes).
    Removing api_lib.o(.ARM.exidx.text.netconn_delete), (8 bytes).
    Removing api_lib.o(.text.netconn_getaddr), (220 bytes).
    Removing api_lib.o(.ARM.exidx.text.netconn_getaddr), (8 bytes).
    Removing api_lib.o(.ARM.exidx.text.netconn_bind), (8 bytes).
    Removing api_lib.o(.text.netconn_bind_if), (108 bytes).
    Removing api_lib.o(.ARM.exidx.text.netconn_bind_if), (8 bytes).
    Removing api_lib.o(.text.netconn_connect), (124 bytes).
    Removing api_lib.o(.ARM.exidx.text.netconn_connect), (8 bytes).
    Removing api_lib.o(.text.netconn_disconnect), (108 bytes).
    Removing api_lib.o(.ARM.exidx.text.netconn_disconnect), (8 bytes).
    Removing api_lib.o(.ARM.exidx.text.netconn_listen_with_backlog), (8 bytes).
    Removing api_lib.o(.ARM.exidx.text.netconn_accept), (8 bytes).
    Removing api_lib.o(.ARM.exidx.text.netconn_err), (8 bytes).
    Removing api_lib.o(.text.netconn_tcp_recvd), (90 bytes).
    Removing api_lib.o(.ARM.exidx.text.netconn_tcp_recvd), (8 bytes).
    Removing api_lib.o(.text.netconn_recv_tcp_pbuf), (58 bytes).
    Removing api_lib.o(.ARM.exidx.text.netconn_recv_tcp_pbuf), (8 bytes).
    Removing api_lib.o(.ARM.exidx.text.netconn_recv_data_tcp), (8 bytes).
    Removing api_lib.o(.text.netconn_recv_tcp_pbuf_flags), (56 bytes).
    Removing api_lib.o(.ARM.exidx.text.netconn_recv_tcp_pbuf_flags), (8 bytes).
    Removing api_lib.o(.text.netconn_recv_udp_raw_netbuf), (58 bytes).
    Removing api_lib.o(.ARM.exidx.text.netconn_recv_udp_raw_netbuf), (8 bytes).
    Removing api_lib.o(.ARM.exidx.text.netconn_recv_data), (8 bytes).
    Removing api_lib.o(.text.netconn_recv_udp_raw_netbuf_flags), (56 bytes).
    Removing api_lib.o(.ARM.exidx.text.netconn_recv_udp_raw_netbuf_flags), (8 bytes).
    Removing api_lib.o(.ARM.exidx.text.netconn_recv), (8 bytes).
    Removing api_lib.o(.text.netconn_sendto), (106 bytes).
    Removing api_lib.o(.ARM.exidx.text.netconn_sendto), (8 bytes).
    Removing api_lib.o(.text.netconn_send), (80 bytes).
    Removing api_lib.o(.ARM.exidx.text.netconn_send), (8 bytes).
    Removing api_lib.o(.ARM.exidx.text.netconn_write_partly), (8 bytes).
    Removing api_lib.o(.ARM.exidx.text.netconn_write_vectors_partly), (8 bytes).
    Removing api_lib.o(.ARM.exidx.text.netconn_close), (8 bytes).
    Removing api_lib.o(.text.netconn_shutdown), (104 bytes).
    Removing api_lib.o(.ARM.exidx.text.netconn_shutdown), (8 bytes).
    Removing api_msg.o(.text), (0 bytes).
    Removing api_msg.o(.ARM.exidx.text.lwip_netconn_is_err_msg), (8 bytes).
    Removing api_msg.o(.ARM.exidx.text.lwip_netconn_do_newconn), (8 bytes).
    Removing api_msg.o(.ARM.exidx.text.netconn_alloc), (8 bytes).
    Removing api_msg.o(.ARM.exidx.text.netconn_free), (8 bytes).
    Removing api_msg.o(.ARM.exidx.text.lwip_netconn_do_delconn), (8 bytes).
    Removing api_msg.o(.ARM.exidx.text.netconn_drain), (8 bytes).
    Removing api_msg.o(.ARM.exidx.text.lwip_netconn_do_close_internal), (8 bytes).
    Removing api_msg.o(.ARM.exidx.text.lwip_netconn_do_bind), (8 bytes).
    Removing api_msg.o(.text.lwip_netconn_do_bind_if), (56 bytes).
    Removing api_msg.o(.ARM.exidx.text.lwip_netconn_do_bind_if), (8 bytes).
    Removing api_msg.o(.text.lwip_netconn_do_connect), (316 bytes).
    Removing api_msg.o(.ARM.exidx.text.lwip_netconn_do_connect), (8 bytes).
    Removing api_msg.o(.text.lwip_netconn_do_connected), (400 bytes).
    Removing api_msg.o(.ARM.exidx.text.lwip_netconn_do_connected), (8 bytes).
    Removing api_msg.o(.text.lwip_netconn_do_disconnect), (34 bytes).
    Removing api_msg.o(.ARM.exidx.text.lwip_netconn_do_disconnect), (8 bytes).
    Removing api_msg.o(.ARM.exidx.text.lwip_netconn_do_listen), (8 bytes).
    Removing api_msg.o(.ARM.exidx.text.accept_function), (8 bytes).
    Removing api_msg.o(.text.lwip_netconn_do_send), (72 bytes).
    Removing api_msg.o(.ARM.exidx.text.lwip_netconn_do_send), (8 bytes).
    Removing api_msg.o(.ARM.exidx.text.lwip_netconn_do_recv), (8 bytes).
    Removing api_msg.o(.ARM.exidx.text.lwip_netconn_do_write), (8 bytes).
    Removing api_msg.o(.ARM.exidx.text.lwip_netconn_do_writemore), (8 bytes).
    Removing api_msg.o(.text.lwip_netconn_do_getaddr), (160 bytes).
    Removing api_msg.o(.ARM.exidx.text.lwip_netconn_do_getaddr), (8 bytes).
    Removing api_msg.o(.ARM.exidx.text.lwip_netconn_do_close), (8 bytes).
    Removing api_msg.o(.ARM.exidx.text.recv_udp), (8 bytes).
    Removing api_msg.o(.ARM.exidx.text.sent_tcp), (8 bytes).
    Removing api_msg.o(.ARM.exidx.text.poll_tcp), (8 bytes).
    Removing api_msg.o(.ARM.exidx.text.err_tcp), (8 bytes).
    Removing api_msg.o(.ARM.exidx.text.recv_tcp), (8 bytes).
    Removing err.o(.text), (0 bytes).
    Removing err.o(.text.err_to_errno), (28 bytes).
    Removing err.o(.ARM.exidx.text.err_to_errno), (8 bytes).
    Removing err.o(.rodata.err_to_errno_table), (68 bytes).
    Removing netbuf.o(.text), (0 bytes).
    Removing netbuf.o(.text.netbuf_new), (26 bytes).
    Removing netbuf.o(.ARM.exidx.text.netbuf_new), (8 bytes).
    Removing netbuf.o(.ARM.exidx.text.netbuf_delete), (8 bytes).
    Removing netbuf.o(.text.netbuf_alloc), (164 bytes).
    Removing netbuf.o(.ARM.exidx.text.netbuf_alloc), (8 bytes).
    Removing netbuf.o(.text.netbuf_free), (76 bytes).
    Removing netbuf.o(.ARM.exidx.text.netbuf_free), (8 bytes).
    Removing netbuf.o(.text.netbuf_ref), (112 bytes).
    Removing netbuf.o(.ARM.exidx.text.netbuf_ref), (8 bytes).
    Removing netbuf.o(.text.netbuf_chain), (144 bytes).
    Removing netbuf.o(.ARM.exidx.text.netbuf_chain), (8 bytes).
    Removing netbuf.o(.ARM.exidx.text.netbuf_data), (8 bytes).
    Removing netbuf.o(.text.netbuf_next), (96 bytes).
    Removing netbuf.o(.ARM.exidx.text.netbuf_next), (8 bytes).
    Removing netbuf.o(.text.netbuf_first), (64 bytes).
    Removing netbuf.o(.ARM.exidx.text.netbuf_first), (8 bytes).
    Removing netdb.o(.text), (0 bytes).
    Removing netifapi.o(.text), (0 bytes).
    Removing sockets.o(.text), (0 bytes).
    Removing sockets.o(.text.lwip_socket_thread_init), (2 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_socket_thread_init), (8 bytes).
    Removing sockets.o(.text.lwip_socket_thread_cleanup), (2 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_socket_thread_cleanup), (8 bytes).
    Removing sockets.o(.text.lwip_socket_dbg_get_socket), (22 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_socket_dbg_get_socket), (8 bytes).
    Removing sockets.o(.text.lwip_tryget_socket), (30 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_tryget_socket), (8 bytes).
    Removing sockets.o(.text.lwip_accept), (604 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_accept), (8 bytes).
    Removing sockets.o(.text.lwip_bind), (188 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_bind), (8 bytes).
    Removing sockets.o(.text.lwip_close), (212 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_close), (8 bytes).
    Removing sockets.o(.text.lwip_connect), (236 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_connect), (8 bytes).
    Removing sockets.o(.text.lwip_listen), (108 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_listen), (8 bytes).
    Removing sockets.o(.text.lwip_recvfrom), (264 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_recvfrom), (8 bytes).
    Removing sockets.o(.text.lwip_recv_tcp), (468 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_recv_tcp), (8 bytes).
    Removing sockets.o(.text.lwip_recvfrom_udp_raw), (384 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_recvfrom_udp_raw), (8 bytes).
    Removing sockets.o(.text.lwip_read), (26 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_read), (8 bytes).
    Removing sockets.o(.text.lwip_readv), (34 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_readv), (8 bytes).
    Removing sockets.o(.text.lwip_recvmsg), (484 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_recvmsg), (8 bytes).
    Removing sockets.o(.text.lwip_recv), (20 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_recv), (8 bytes).
    Removing sockets.o(.text.lwip_send), (160 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_send), (8 bytes).
    Removing sockets.o(.text.lwip_sendto), (316 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_sendto), (8 bytes).
    Removing sockets.o(.text.lwip_sendmsg), (724 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_sendmsg), (8 bytes).
    Removing sockets.o(.text.lwip_socket), (230 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_socket), (8 bytes).
    Removing sockets.o(.text.event_callback), (512 bytes).
    Removing sockets.o(.ARM.exidx.text.event_callback), (8 bytes).
    Removing sockets.o(.text.lwip_write), (140 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_write), (8 bytes).
    Removing sockets.o(.text.lwip_writev), (34 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_writev), (8 bytes).
    Removing sockets.o(.text.lwip_select), (988 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_select), (8 bytes).
    Removing sockets.o(.text.lwip_selscan), (356 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_selscan), (8 bytes).
    Removing sockets.o(.text.lwip_poll), (432 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_poll), (8 bytes).
    Removing sockets.o(.text.lwip_pollscan), (366 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_pollscan), (8 bytes).
    Removing sockets.o(.text.lwip_shutdown), (174 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_shutdown), (8 bytes).
    Removing sockets.o(.text.lwip_getpeername), (6 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_getpeername), (8 bytes).
    Removing sockets.o(.text.lwip_getaddrname), (154 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_getaddrname), (8 bytes).
    Removing sockets.o(.text.lwip_getsockname), (6 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_getsockname), (8 bytes).
    Removing sockets.o(.text.lwip_getsockopt), (630 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_getsockopt), (8 bytes).
    Removing sockets.o(.text.lwip_setsockopt), (648 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_setsockopt), (8 bytes).
    Removing sockets.o(.text.lwip_ioctl), (118 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_ioctl), (8 bytes).
    Removing sockets.o(.text.lwip_fcntl), (190 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_fcntl), (8 bytes).
    Removing sockets.o(.text.lwip_inet_ntop), (50 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_inet_ntop), (8 bytes).
    Removing sockets.o(.text.lwip_inet_pton), (30 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_inet_pton), (8 bytes).
    Removing sockets.o(.rodata.str1.1), (283 bytes).
    Removing sockets.o(.bss.sockets), (64 bytes).
    Removing sockets.o(.bss.select_cb_list), (4 bytes).
    Removing tcpip.o(.text), (0 bytes).
    Removing tcpip.o(.text.tcpip_inpkt), (106 bytes).
    Removing tcpip.o(.ARM.exidx.text.tcpip_inpkt), (8 bytes).
    Removing tcpip.o(.ARM.exidx.text.tcpip_input), (8 bytes).
    Removing tcpip.o(.text.tcpip_callback), (92 bytes).
    Removing tcpip.o(.ARM.exidx.text.tcpip_callback), (8 bytes).
    Removing tcpip.o(.ARM.exidx.text.tcpip_try_callback), (8 bytes).
    Removing tcpip.o(.ARM.exidx.text.tcpip_send_msg_wait_sem), (8 bytes).
    Removing tcpip.o(.text.tcpip_api_call), (36 bytes).
    Removing tcpip.o(.ARM.exidx.text.tcpip_api_call), (8 bytes).
    Removing tcpip.o(.text.tcpip_callbackmsg_new), (28 bytes).
    Removing tcpip.o(.ARM.exidx.text.tcpip_callbackmsg_new), (8 bytes).
    Removing tcpip.o(.text.tcpip_callbackmsg_delete), (8 bytes).
    Removing tcpip.o(.ARM.exidx.text.tcpip_callbackmsg_delete), (8 bytes).
    Removing tcpip.o(.text.tcpip_callbackmsg_trycallback), (66 bytes).
    Removing tcpip.o(.ARM.exidx.text.tcpip_callbackmsg_trycallback), (8 bytes).
    Removing tcpip.o(.text.tcpip_callbackmsg_trycallback_fromisr), (66 bytes).
    Removing tcpip.o(.ARM.exidx.text.tcpip_callbackmsg_trycallback_fromisr), (8 bytes).
    Removing tcpip.o(.ARM.exidx.text.tcpip_init), (8 bytes).
    Removing tcpip.o(.ARM.exidx.text.tcpip_thread), (8 bytes).
    Removing tcpip.o(.text.pbuf_free_callback), (110 bytes).
    Removing tcpip.o(.ARM.exidx.text.pbuf_free_callback), (8 bytes).
    Removing tcpip.o(.text.pbuf_free_int), (4 bytes).
    Removing tcpip.o(.ARM.exidx.text.pbuf_free_int), (8 bytes).
    Removing tcpip.o(.text.mem_free_callback), (110 bytes).
    Removing tcpip.o(.ARM.exidx.text.mem_free_callback), (8 bytes).
    Removing ethernet.o(.text), (0 bytes).
    Removing ethernet.o(.ARM.exidx.text.ethernet_input), (8 bytes).
    Removing ethernet.o(.ARM.exidx.text.ethernet_output), (8 bytes).
    Removing dadd.o(.text), (334 bytes).
    Removing dmul.o(.text), (228 bytes).
    Removing ddiv.o(.text), (222 bytes).
    Removing dfixul.o(.text), (48 bytes).
    Removing cdrcmple.o(.text), (48 bytes).
    Removing depilogue.o(.text), (186 bytes).

1335 unused section(s) (total 42345 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv.o ABSOLUTE
    ../clib/microlib/cpp/cpp_init.c          0x00000000   Number         0  cpp_init.o ABSOLUTE
    ../clib/microlib/cpp/cpp_init.c          0x00000000   Number         0  cpp_init.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  ctype_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isalnum_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isalpha_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isblank_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  iscntrl_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isdigit_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isgraph_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  islower_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isprint_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  ispunct_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isspace_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isupper_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isxdigit_o.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/errno.c                 0x00000000   Number         0  errno.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry4.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfb.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf0.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf1.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf2.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf3.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf4.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf5.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf6.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf7.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf8.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfa.o ABSOLUTE
    ../clib/microlib/printf/stubs.s          0x00000000   Number         0  printfstubs.o ABSOLUTE
    ../clib/microlib/stdio/fputs.c           0x00000000   Number         0  fputs.o ABSOLUTE
    ../clib/microlib/stdio/fputs.c           0x00000000   Number         0  fputs_e.o ABSOLUTE
    ../clib/microlib/stdio/fwrite.c          0x00000000   Number         0  fwrite.o ABSOLUTE
    ../clib/microlib/stdio/fwrite.c          0x00000000   Number         0  fwrite_e.o ABSOLUTE
    ../clib/microlib/stdio/puts.c            0x00000000   Number         0  puts.o ABSOLUTE
    ../clib/microlib/stdio/puts.c            0x00000000   Number         0  puts_e.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stderr.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stdout.o ABSOLUTE
    ../clib/microlib/string/memcmp.c         0x00000000   Number         0  memcmp.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memmovea.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memmoveb.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    ../clib/microlib/string/strcmp.c         0x00000000   Number         0  strcmp.o ABSOLUTE
    ../clib/microlib/string/strcpy.c         0x00000000   Number         0  strcpy.o ABSOLUTE
    ../clib/microlib/string/strlen.c         0x00000000   Number         0  strlen.o ABSOLUTE
    ../clib/microlib/string/strncmp.c        0x00000000   Number         0  strncmp.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../clib/r_arm_target.c                   0x00000000   Number         0  __ARM_resolve_target1.o ABSOLUTE
    ../clib/r_arm_target.c                   0x00000000   Number         0  __ARM_resolve_target1_abs32.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  atoi.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  strtol.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  _strtoul.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  _chval.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  dadd.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixul.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    GenQTest.c                               0x00000000   Number         0  GenQTest.o ABSOLUTE
    PollQ.c                                  0x00000000   Number         0  PollQ.o ABSOLUTE
    QueueSet.c                               0x00000000   Number         0  QueueSet.o ABSOLUTE
    api_lib.c                                0x00000000   Number         0  api_lib.o ABSOLUTE
    api_msg.c                                0x00000000   Number         0  api_msg.o ABSOLUTE
    autoip.c                                 0x00000000   Number         0  autoip.o ABSOLUTE
    cdrcmple.s                               0x00000000   Number         0  cdrcmple.o ABSOLUTE
    clk.c                                    0x00000000   Number         0  clk.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    def.c                                    0x00000000   Number         0  def.o ABSOLUTE
    dhcp.c                                   0x00000000   Number         0  dhcp.o ABSOLUTE
    dns.c                                    0x00000000   Number         0  dns.o ABSOLUTE
    emac.c                                   0x00000000   Number         0  emac.o ABSOLUTE
    err.c                                    0x00000000   Number         0  err.o ABSOLUTE
    etharp.c                                 0x00000000   Number         0  etharp.o ABSOLUTE
    ethernet.c                               0x00000000   Number         0  ethernet.o ABSOLUTE
    ethernetif.c                             0x00000000   Number         0  ethernetif.o ABSOLUTE
    fs.c                                     0x00000000   Number         0  fs.o ABSOLUTE
    gpio.c                                   0x00000000   Number         0  gpio.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    heap_2.c                                 0x00000000   Number         0  heap_2.o ABSOLUTE
    httpserver-netconn.c                     0x00000000   Number         0  httpserver-netconn.o ABSOLUTE
    icmp.c                                   0x00000000   Number         0  icmp.o ABSOLUTE
    igmp.c                                   0x00000000   Number         0  igmp.o ABSOLUTE
    inet_chksum.c                            0x00000000   Number         0  inet_chksum.o ABSOLUTE
    init.c                                   0x00000000   Number         0  init.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    ip.c                                     0x00000000   Number         0  ip.o ABSOLUTE
    ip4.c                                    0x00000000   Number         0  ip4.o ABSOLUTE
    ip4_addr.c                               0x00000000   Number         0  ip4_addr.o ABSOLUTE
    ip4_frag.c                               0x00000000   Number         0  ip4_frag.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    mem.c                                    0x00000000   Number         0  mem.o ABSOLUTE
    memp.c                                   0x00000000   Number         0  memp.o ABSOLUTE
    mii.c                                    0x00000000   Number         0  mii.o ABSOLUTE
    netbuf.c                                 0x00000000   Number         0  netbuf.o ABSOLUTE
    netdb.c                                  0x00000000   Number         0  netdb.o ABSOLUTE
    netif.c                                  0x00000000   Number         0  netif.o ABSOLUTE
    netifapi.c                               0x00000000   Number         0  netifapi.o ABSOLUTE
    pbuf.c                                   0x00000000   Number         0  pbuf.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    portasm.c                                0x00000000   Number         0  portasm.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    raw.c                                    0x00000000   Number         0  raw.o ABSOLUTE
    retarget.c                               0x00000000   Number         0  retarget.o ABSOLUTE
    semtest.c                                0x00000000   Number         0  semtest.o ABSOLUTE
    sockets.c                                0x00000000   Number         0  sockets.o ABSOLUTE
    startup_M55M1.c                          0x00000000   Number         0  startup_M55M1.o ABSOLUTE
    stats.c                                  0x00000000   Number         0  stats.o ABSOLUTE
    synopGMAC_Dev.c                          0x00000000   Number         0  synopGMAC_Dev.o ABSOLUTE
    synopGMAC_network_interface.c            0x00000000   Number         0  synopGMAC_network_interface.o ABSOLUTE
    synopGMAC_plat.c                         0x00000000   Number         0  synopGMAC_plat.o ABSOLUTE
    sys.c                                    0x00000000   Number         0  sys.o ABSOLUTE
    sys_arch.c                               0x00000000   Number         0  sys_arch.o ABSOLUTE
    sys_lwip.c                               0x00000000   Number         0  sys_lwip.o ABSOLUTE
    system_M55M1.c                           0x00000000   Number         0  system_M55M1.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks.o ABSOLUTE
    tcp.c                                    0x00000000   Number         0  tcp.o ABSOLUTE
    tcp_in.c                                 0x00000000   Number         0  tcp_in.o ABSOLUTE
    tcp_out.c                                0x00000000   Number         0  tcp_out.o ABSOLUTE
    tcpip.c                                  0x00000000   Number         0  tcpip.o ABSOLUTE
    time_stamp.c                             0x00000000   Number         0  time_stamp.o ABSOLUTE
    timeouts.c                               0x00000000   Number         0  timeouts.o ABSOLUTE
    timers.c                                 0x00000000   Number         0  timers.o ABSOLUTE
    uart.c                                   0x00000000   Number         0  uart.o ABSOLUTE
    udp.c                                    0x00000000   Number         0  udp.o ABSOLUTE
    [Anonymous Symbol]                       0x00000000   Section        0  emac.o(ITCM)
    __tagsym$$used.0                         0x00100000   Number         0  startup_M55M1.o(RESET)
    .ARM.Collect$$$$00000000                 0x00100020   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000003                 0x00100020   Section        4  entry4.o(.ARM.Collect$$$$00000003)
    .ARM.Collect$$$$00000004                 0x00100024   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x00100028   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$00000009                 0x00100028   Section        4  entry8a.o(.ARM.Collect$$$$00000009)
    .ARM.Collect$$$$0000000A                 0x0010002c   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x0010002c   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    __lit__00000000                          0x00100034   Data           4  entry4.o(.ARM.Collect$$$$00002714)
    .ARM.Collect$$$$0000000D                 0x00100034   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x00100034   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002714                 0x00100034   Section        4  entry4.o(.ARM.Collect$$$$00002714)
    .text                                    0x00100038   Section        0  memmovea.o(.text)
    .text                                    0x00100078   Section        0  memseta.o(.text)
    .text                                    0x0010009c   Section        0  strcmp.o(.text)
    .text                                    0x001000b8   Section        0  memcmp.o(.text)
    .text                                    0x001000d2   Section        0  strncmp.o(.text)
    .text                                    0x001000f0   Section        0  cpp_init.o(.text)
    .text                                    0x00100118   Section        0  uldiv.o(.text)
    .text                                    0x0010017c   Section       48  init.o(.text)
    .text                                    0x001001ac   Section        0  llshl.o(.text)
    .text                                    0x001001ca   Section        0  llushr.o(.text)
    [Anonymous Symbol]                       0x001001ec   Section        0  clk.o(.text.CLK_EnableAPLL)
    [Anonymous Symbol]                       0x00100490   Section        0  clk.o(.text.CLK_EnableModuleClock)
    [Anonymous Symbol]                       0x001004b4   Section        0  clk.o(.text.CLK_EnableXtalRC)
    [Anonymous Symbol]                       0x001004c4   Section        0  clk.o(.text.CLK_GetAPLL0ClockFreq)
    [Anonymous Symbol]                       0x00100548   Section        0  clk.o(.text.CLK_SetBusClock)
    [Anonymous Symbol]                       0x00100660   Section        0  clk.o(.text.CLK_SetModuleClock)
    [Anonymous Symbol]                       0x001006d0   Section        0  clk.o(.text.CLK_SetSCLK)
    [Anonymous Symbol]                       0x00100990   Section        0  clk.o(.text.CLK_SystemClockUpdate)
    [Anonymous Symbol]                       0x00100a68   Section        0  clk.o(.text.CLK_WaitClockReady)
    [Anonymous Symbol]                       0x00100a94   Section        0  startup_M55M1.o(.text.Default_Handler)
    [Anonymous Symbol]                       0x00100a98   Section        0  emac.o(.text.EMAC_AllocatePktBuf)
    [Anonymous Symbol]                       0x00100ab4   Section        0  emac.o(.text.EMAC_Open)
    [Anonymous Symbol]                       0x00100cb4   Section        0  emac.o(.text.EMAC_ReceivePkt)
    [Anonymous Symbol]                       0x00100d88   Section        0  emac.o(.text.EMAC_TransmitPkt)
    [Anonymous Symbol]                       0x00100dcc   Section        0  gpio.o(.text.GPIO_SetMode)
    [Anonymous Symbol]                       0x00100e08   Section        0  gpio.o(.text.GPIO_SetSlewCtl)
    [Anonymous Symbol]                       0x00100e44   Section        0  startup_M55M1.o(.text.HardFault_Handler)
    [Anonymous Symbol]                       0x00100e60   Section        0  system_M55M1.o(.text.InitDebugUart)
    [Anonymous Symbol]                       0x00100e70   Section        0  system_M55M1.o(.text.InitPreDefMPURegion)
    [Anonymous Symbol]                       0x00101110   Section        0  portasm.o(.text.PendSV_Handler)
    pxCurrentTCBConst                        0x00101170   Number         0  portasm.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x00101174   Section        0  retarget.o(.text.ProcessHardFault)
    [Anonymous Symbol]                       0x00101334   Section        0  startup_M55M1.o(.text.Reset_Handler)
    [Anonymous Symbol]                       0x001014f8   Section        0  startup_M55M1.o(.text.Reset_Handler_PreInit)
    [Anonymous Symbol]                       0x00101520   Section        0  portasm.o(.text.SVC_Handler)
    svchandler_address_const                 0x00101540   Number         0  portasm.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x00101544   Section        0  sys.o(.text.SYS_ResetModule)
    [Anonymous Symbol]                       0x00101568   Section        0  system_M55M1.o(.text.SetDebugUartCLK)
    [Anonymous Symbol]                       0x001015a8   Section        0  system_M55M1.o(.text.SetDebugUartMFP)
    [Anonymous Symbol]                       0x001015c4   Section        0  port.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x001015ec   Section        0  system_M55M1.o(.text.SystemCoreClockUpdate)
    [Anonymous Symbol]                       0x00101620   Section        0  system_M55M1.o(.text.SystemInit)
    [Anonymous Symbol]                       0x0010169c   Section        0  uart.o(.text.UART_Open)
    accept_function                          0x0010189d   Thumb Code   316  api_msg.o(.text.accept_function)
    [Anonymous Symbol]                       0x0010189c   Section        0  api_msg.o(.text.accept_function)
    [Anonymous Symbol]                       0x00101a00   Section        0  tasks.o(.text.eTaskConfirmSleepModeStatus)
    [Anonymous Symbol]                       0x00101a48   Section        0  tasks.o(.text.eTaskGetState)
    err_tcp                                  0x00101ad9   Thumb Code   380  api_msg.o(.text.err_tcp)
    [Anonymous Symbol]                       0x00101ad8   Section        0  api_msg.o(.text.err_tcp)
    eth_rx_thread_entry                      0x00101c9d   Thumb Code    38  ethernetif.o(.text.eth_rx_thread_entry)
    [Anonymous Symbol]                       0x00101c9c   Section        0  ethernetif.o(.text.eth_rx_thread_entry)
    etharp_find_entry                        0x00101cc5   Thumb Code   492  etharp.o(.text.etharp_find_entry)
    [Anonymous Symbol]                       0x00101cc4   Section        0  etharp.o(.text.etharp_find_entry)
    [Anonymous Symbol]                       0x00101ef4   Section        0  etharp.o(.text.etharp_input)
    [Anonymous Symbol]                       0x00102070   Section        0  etharp.o(.text.etharp_output)
    etharp_output_to_arp_index               0x001021e9   Thumb Code   188  etharp.o(.text.etharp_output_to_arp_index)
    [Anonymous Symbol]                       0x001021e8   Section        0  etharp.o(.text.etharp_output_to_arp_index)
    [Anonymous Symbol]                       0x001022d4   Section        0  etharp.o(.text.etharp_query)
    etharp_raw                               0x001024ed   Thumb Code   248  etharp.o(.text.etharp_raw)
    [Anonymous Symbol]                       0x001024ec   Section        0  etharp.o(.text.etharp_raw)
    [Anonymous Symbol]                       0x00102618   Section        0  etharp.o(.text.etharp_request)
    [Anonymous Symbol]                       0x0010264c   Section        0  etharp.o(.text.etharp_tmr)
    [Anonymous Symbol]                       0x001026fc   Section        0  ethernet.o(.text.ethernet_input)
    [Anonymous Symbol]                       0x001027a8   Section        0  ethernet.o(.text.ethernet_output)
    [Anonymous Symbol]                       0x00102870   Section        0  ethernetif.o(.text.ethernetif_init)
    [Anonymous Symbol]                       0x00102974   Section        0  retarget.o(.text.fputc)
    [Anonymous Symbol]                       0x0010299c   Section        0  fs.o(.text.fs_close)
    [Anonymous Symbol]                       0x001029bc   Section        0  fs.o(.text.fs_open)
    [Anonymous Symbol]                       0x00102a3c   Section        0  httpserver-netconn.o(.text.http_server_netconn_init)
    http_server_netconn_thread               0x00102a69   Thumb Code    84  httpserver-netconn.o(.text.http_server_netconn_thread)
    [Anonymous Symbol]                       0x00102a68   Section        0  httpserver-netconn.o(.text.http_server_netconn_thread)
    [Anonymous Symbol]                       0x00102aec   Section        0  httpserver-netconn.o(.text.http_server_serve)
    [Anonymous Symbol]                       0x00102bd4   Section        0  icmp.o(.text.icmp_dest_unreach)
    [Anonymous Symbol]                       0x00102bdc   Section        0  icmp.o(.text.icmp_input)
    icmp_send_response                       0x00102dcd   Thumb Code   152  icmp.o(.text.icmp_send_response)
    [Anonymous Symbol]                       0x00102dcc   Section        0  icmp.o(.text.icmp_send_response)
    [Anonymous Symbol]                       0x00102e90   Section        0  icmp.o(.text.icmp_time_exceeded)
    [Anonymous Symbol]                       0x00102e98   Section        0  inet_chksum.o(.text.inet_chksum)
    [Anonymous Symbol]                       0x00102f0c   Section        0  inet_chksum.o(.text.inet_chksum_pbuf)
    [Anonymous Symbol]                       0x00102fd8   Section        0  inet_chksum.o(.text.inet_chksum_pseudo)
    [Anonymous Symbol]                       0x001030e4   Section        0  ip4_addr.o(.text.ip4_addr_isbroadcast_u32)
    [Anonymous Symbol]                       0x00103114   Section        0  ip4_frag.o(.text.ip4_frag)
    [Anonymous Symbol]                       0x00103370   Section        0  ip4.o(.text.ip4_input)
    [Anonymous Symbol]                       0x0010352c   Section        0  ip4.o(.text.ip4_output_if)
    [Anonymous Symbol]                       0x00103554   Section        0  ip4.o(.text.ip4_output_if_src)
    [Anonymous Symbol]                       0x001036b0   Section        0  ip4_frag.o(.text.ip4_reass)
    [Anonymous Symbol]                       0x00103d64   Section        0  ip4.o(.text.ip4_route)
    [Anonymous Symbol]                       0x00103dd4   Section        0  ip4_addr.o(.text.ip4addr_ntoa)
    [Anonymous Symbol]                       0x00103e94   Section        0  inet_chksum.o(.text.ip_chksum_pseudo)
    ip_reass_free_complete_datagram          0x00103ea1   Thumb Code   328  ip4_frag.o(.text.ip_reass_free_complete_datagram)
    [Anonymous Symbol]                       0x00103ea0   Section        0  ip4_frag.o(.text.ip_reass_free_complete_datagram)
    [Anonymous Symbol]                       0x0010404c   Section        0  ip4_frag.o(.text.ip_reass_tmr)
    ipfrag_free_pbuf_custom                  0x00104089   Thumb Code    84  ip4_frag.o(.text.ipfrag_free_pbuf_custom)
    [Anonymous Symbol]                       0x00104088   Section        0  ip4_frag.o(.text.ipfrag_free_pbuf_custom)
    low_level_output                         0x001040f5   Thumb Code    56  ethernetif.o(.text.low_level_output)
    [Anonymous Symbol]                       0x001040f4   Section        0  ethernetif.o(.text.low_level_output)
    lwip_cyclic_timer                        0x0010412d   Thumb Code   212  timeouts.o(.text.lwip_cyclic_timer)
    [Anonymous Symbol]                       0x0010412c   Section        0  timeouts.o(.text.lwip_cyclic_timer)
    [Anonymous Symbol]                       0x00104200   Section        0  def.o(.text.lwip_htonl)
    [Anonymous Symbol]                       0x00104204   Section        0  def.o(.text.lwip_htons)
    [Anonymous Symbol]                       0x00104208   Section        0  init.o(.text.lwip_init)
    [Anonymous Symbol]                       0x0010422c   Section        0  api_msg.o(.text.lwip_netconn_do_bind)
    [Anonymous Symbol]                       0x00104264   Section        0  api_msg.o(.text.lwip_netconn_do_close)
    lwip_netconn_do_close_internal           0x00104355   Thumb Code   604  api_msg.o(.text.lwip_netconn_do_close_internal)
    [Anonymous Symbol]                       0x00104354   Section        0  api_msg.o(.text.lwip_netconn_do_close_internal)
    [Anonymous Symbol]                       0x0010463c   Section        0  api_msg.o(.text.lwip_netconn_do_delconn)
    [Anonymous Symbol]                       0x00104794   Section        0  api_msg.o(.text.lwip_netconn_do_listen)
    [Anonymous Symbol]                       0x00104854   Section        0  api_msg.o(.text.lwip_netconn_do_newconn)
    [Anonymous Symbol]                       0x00104904   Section        0  api_msg.o(.text.lwip_netconn_do_recv)
    [Anonymous Symbol]                       0x0010493c   Section        0  api_msg.o(.text.lwip_netconn_do_write)
    lwip_netconn_do_writemore                0x00104a49   Thumb Code   748  api_msg.o(.text.lwip_netconn_do_writemore)
    [Anonymous Symbol]                       0x00104a48   Section        0  api_msg.o(.text.lwip_netconn_do_writemore)
    [Anonymous Symbol]                       0x00104dac   Section        0  api_msg.o(.text.lwip_netconn_is_err_msg)
    [Anonymous Symbol]                       0x00104e10   Section        0  main.o(.text.main)
    [Anonymous Symbol]                       0x00104fa4   Section        0  mem.o(.text.mem_free)
    [Anonymous Symbol]                       0x00105270   Section        0  mem.o(.text.mem_init)
    [Anonymous Symbol]                       0x00105308   Section        0  mem.o(.text.mem_malloc)
    [Anonymous Symbol]                       0x00105538   Section        0  mem.o(.text.mem_trim)
    [Anonymous Symbol]                       0x00105730   Section        0  memp.o(.text.memp_free)
    [Anonymous Symbol]                       0x001057b8   Section        0  memp.o(.text.memp_free_pool)
    [Anonymous Symbol]                       0x00105824   Section        0  memp.o(.text.memp_init)
    [Anonymous Symbol]                       0x0010586c   Section        0  memp.o(.text.memp_init_pool)
    [Anonymous Symbol]                       0x00105898   Section        0  memp.o(.text.memp_malloc)
    [Anonymous Symbol]                       0x00105930   Section        0  memp.o(.text.memp_malloc_pool)
    [Anonymous Symbol]                       0x001059a4   Section        0  mii.o(.text.mii_check_phy_init)
    [Anonymous Symbol]                       0x001059fc   Section        0  mii.o(.text.mii_ethtool_gset)
    [Anonymous Symbol]                       0x00105b70   Section        0  netbuf.o(.text.netbuf_data)
    [Anonymous Symbol]                       0x00105c2c   Section        0  netbuf.o(.text.netbuf_delete)
    [Anonymous Symbol]                       0x00105c50   Section        0  api_lib.o(.text.netconn_accept)
    [Anonymous Symbol]                       0x00105d44   Section        0  api_msg.o(.text.netconn_alloc)
    [Anonymous Symbol]                       0x00105df8   Section        0  api_lib.o(.text.netconn_bind)
    [Anonymous Symbol]                       0x00105e70   Section        0  api_lib.o(.text.netconn_close)
    [Anonymous Symbol]                       0x00105ec8   Section        0  api_lib.o(.text.netconn_delete)
    netconn_drain                            0x00105f09   Thumb Code   234  api_msg.o(.text.netconn_drain)
    [Anonymous Symbol]                       0x00105f08   Section        0  api_msg.o(.text.netconn_drain)
    [Anonymous Symbol]                       0x00105ff4   Section        0  api_lib.o(.text.netconn_err)
    [Anonymous Symbol]                       0x00106010   Section        0  api_msg.o(.text.netconn_free)
    [Anonymous Symbol]                       0x001060f8   Section        0  api_lib.o(.text.netconn_listen_with_backlog)
    [Anonymous Symbol]                       0x00106160   Section        0  api_lib.o(.text.netconn_new_with_proto_and_callback)
    [Anonymous Symbol]                       0x001062a4   Section        0  api_lib.o(.text.netconn_recv)
    netconn_recv_data                        0x00106389   Thumb Code   268  api_lib.o(.text.netconn_recv_data)
    [Anonymous Symbol]                       0x00106388   Section        0  api_lib.o(.text.netconn_recv_data)
    netconn_recv_data_tcp                    0x001064a1   Thumb Code   270  api_lib.o(.text.netconn_recv_data_tcp)
    [Anonymous Symbol]                       0x001064a0   Section        0  api_lib.o(.text.netconn_recv_data_tcp)
    [Anonymous Symbol]                       0x001065b0   Section        0  api_lib.o(.text.netconn_write_partly)
    [Anonymous Symbol]                       0x001065cc   Section        0  api_lib.o(.text.netconn_write_vectors_partly)
    [Anonymous Symbol]                       0x00106744   Section        0  netif.o(.text.netif_add)
    netif_do_set_ipaddr                      0x0010695d   Thumb Code   192  netif.o(.text.netif_do_set_ipaddr)
    [Anonymous Symbol]                       0x0010695c   Section        0  netif.o(.text.netif_do_set_ipaddr)
    [Anonymous Symbol]                       0x00106a40   Section        0  netif.o(.text.netif_get_by_index)
    [Anonymous Symbol]                       0x00106a64   Section        0  netif.o(.text.netif_init)
    netif_null_output_ip4                    0x00106a69   Thumb Code     6  netif.o(.text.netif_null_output_ip4)
    [Anonymous Symbol]                       0x00106a68   Section        0  netif.o(.text.netif_null_output_ip4)
    [Anonymous Symbol]                       0x00106a70   Section        0  netif.o(.text.netif_set_default)
    [Anonymous Symbol]                       0x00106a7c   Section        0  netif.o(.text.netif_set_up)
    [Anonymous Symbol]                       0x00106ae4   Section        0  emac.o(.text.nu_emac_pbuf_free)
    [Anonymous Symbol]                       0x00106b58   Section        0  pbuf.o(.text.pbuf_add_header)
    [Anonymous Symbol]                       0x00106bc4   Section        0  pbuf.o(.text.pbuf_alloc)
    [Anonymous Symbol]                       0x00106d70   Section        0  pbuf.o(.text.pbuf_alloced_custom)
    [Anonymous Symbol]                       0x00106db0   Section        0  pbuf.o(.text.pbuf_cat)
    [Anonymous Symbol]                       0x00106ebc   Section        0  pbuf.o(.text.pbuf_clen)
    [Anonymous Symbol]                       0x00106ed0   Section        0  pbuf.o(.text.pbuf_clone)
    [Anonymous Symbol]                       0x00106f14   Section        0  pbuf.o(.text.pbuf_copy)
    [Anonymous Symbol]                       0x001070c4   Section        0  pbuf.o(.text.pbuf_copy_partial)
    [Anonymous Symbol]                       0x001071a0   Section        0  pbuf.o(.text.pbuf_free)
    pbuf_free_ooseq_callback                 0x001072d5   Thumb Code    54  pbuf.o(.text.pbuf_free_ooseq_callback)
    [Anonymous Symbol]                       0x001072d4   Section        0  pbuf.o(.text.pbuf_free_ooseq_callback)
    [Anonymous Symbol]                       0x0010730c   Section        0  pbuf.o(.text.pbuf_header_force)
    pbuf_header_impl                         0x00107315   Thumb Code   230  pbuf.o(.text.pbuf_header_impl)
    [Anonymous Symbol]                       0x00107314   Section        0  pbuf.o(.text.pbuf_header_impl)
    [Anonymous Symbol]                       0x001073fc   Section        0  pbuf.o(.text.pbuf_realloc)
    [Anonymous Symbol]                       0x00107510   Section        0  pbuf.o(.text.pbuf_ref)
    [Anonymous Symbol]                       0x00107554   Section        0  pbuf.o(.text.pbuf_remove_header)
    [Anonymous Symbol]                       0x001075cc   Section        0  synopGMAC_plat.o(.text.plat_delay)
    poll_tcp                                 0x001075e1   Thumb Code   130  api_msg.o(.text.poll_tcp)
    [Anonymous Symbol]                       0x001075e0   Section        0  api_msg.o(.text.poll_tcp)
    prvAddCurrentTaskToDelayedList           0x00107665   Thumb Code   158  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    [Anonymous Symbol]                       0x00107664   Section        0  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    prvCheckForValidListAndQueue             0x00107705   Thumb Code   104  timers.o(.text.prvCheckForValidListAndQueue)
    [Anonymous Symbol]                       0x00107704   Section        0  timers.o(.text.prvCheckForValidListAndQueue)
    prvCheckReceivedValue                    0x00107775   Thumb Code   214  QueueSet.o(.text.prvCheckReceivedValue)
    [Anonymous Symbol]                       0x00107774   Section        0  QueueSet.o(.text.prvCheckReceivedValue)
    prvHighPriorityMutexTask                 0x0010784d   Thumb Code    80  GenQTest.o(.text.prvHighPriorityMutexTask)
    [Anonymous Symbol]                       0x0010784c   Section        0  GenQTest.o(.text.prvHighPriorityMutexTask)
    prvIdleTask                              0x0010789d   Thumb Code   278  tasks.o(.text.prvIdleTask)
    [Anonymous Symbol]                       0x0010789c   Section        0  tasks.o(.text.prvIdleTask)
    prvLowPriorityMutexTask                  0x001079b5   Thumb Code   570  GenQTest.o(.text.prvLowPriorityMutexTask)
    [Anonymous Symbol]                       0x001079b4   Section        0  GenQTest.o(.text.prvLowPriorityMutexTask)
    prvMediumPriorityMutexTask               0x00107bf1   Thumb Code    22  GenQTest.o(.text.prvMediumPriorityMutexTask)
    [Anonymous Symbol]                       0x00107bf0   Section        0  GenQTest.o(.text.prvMediumPriorityMutexTask)
    prvNotifyQueueSetContainer               0x00107c09   Thumb Code   168  queue.o(.text.prvNotifyQueueSetContainer)
    [Anonymous Symbol]                       0x00107c08   Section        0  queue.o(.text.prvNotifyQueueSetContainer)
    prvProcessExpiredTimer                   0x00107cb1   Thumb Code   124  timers.o(.text.prvProcessExpiredTimer)
    [Anonymous Symbol]                       0x00107cb0   Section        0  timers.o(.text.prvProcessExpiredTimer)
    prvQueueSetReceivingTask                 0x00107d2d   Thumb Code  1618  QueueSet.o(.text.prvQueueSetReceivingTask)
    [Anonymous Symbol]                       0x00107d2c   Section        0  QueueSet.o(.text.prvQueueSetReceivingTask)
    prvQueueSetSendingTask                   0x00108381   Thumb Code   274  QueueSet.o(.text.prvQueueSetSendingTask)
    [Anonymous Symbol]                       0x00108380   Section        0  QueueSet.o(.text.prvQueueSetSendingTask)
    prvSemaphoreTest                         0x00108495   Thumb Code   178  semtest.o(.text.prvSemaphoreTest)
    [Anonymous Symbol]                       0x00108494   Section        0  semtest.o(.text.prvSemaphoreTest)
    prvSendFrontAndBackTest                  0x00108549   Thumb Code   666  GenQTest.o(.text.prvSendFrontAndBackTest)
    [Anonymous Symbol]                       0x00108548   Section        0  GenQTest.o(.text.prvSendFrontAndBackTest)
    prvTaskExitError                         0x001087e5   Thumb Code    44  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x001087e4   Section        0  port.o(.text.prvTaskExitError)
    prvTimerTask                             0x00108811   Thumb Code   546  timers.o(.text.prvTimerTask)
    [Anonymous Symbol]                       0x00108810   Section        0  timers.o(.text.prvTimerTask)
    prvUnlockQueue                           0x00108a35   Thumb Code   132  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x00108a34   Section        0  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x00108ab8   Section        0  heap_2.o(.text.pvPortMalloc)
    [Anonymous Symbol]                       0x00108bc4   Section        0  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    [Anonymous Symbol]                       0x00108bdc   Section        0  port.o(.text.pxPortInitialiseStack)
    recv_tcp                                 0x00108c45   Thumb Code   228  api_msg.o(.text.recv_tcp)
    [Anonymous Symbol]                       0x00108c44   Section        0  api_msg.o(.text.recv_tcp)
    recv_udp                                 0x00108da5   Thumb Code   208  api_msg.o(.text.recv_udp)
    [Anonymous Symbol]                       0x00108da4   Section        0  api_msg.o(.text.recv_udp)
    sent_tcp                                 0x00108ed9   Thumb Code   118  api_msg.o(.text.sent_tcp)
    [Anonymous Symbol]                       0x00108ed8   Section        0  api_msg.o(.text.sent_tcp)
    [Anonymous Symbol]                       0x00108f50   Section        0  synopGMAC_plat.o(.text.synopGMACClearBits)
    [Anonymous Symbol]                       0x00108f7c   Section        0  synopGMAC_plat.o(.text.synopGMACReadReg)
    [Anonymous Symbol]                       0x00108f80   Section        0  synopGMAC_plat.o(.text.synopGMACSetBits)
    [Anonymous Symbol]                       0x00108fac   Section        0  synopGMAC_plat.o(.text.synopGMACWriteReg)
    [Anonymous Symbol]                       0x00108fd0   Section        0  synopGMAC_Dev.o(.text.synopGMAC_ES_is_IP_header_error)
    [Anonymous Symbol]                       0x00108fd8   Section        0  synopGMAC_Dev.o(.text.synopGMAC_ES_is_IP_payload_error)
    [Anonymous Symbol]                       0x00108fe0   Section        0  synopGMAC_Dev.o(.text.synopGMAC_ES_is_rx_checksum_bypassed)
    [Anonymous Symbol]                       0x00108fe8   Section        0  synopGMAC_Dev.o(.text.synopGMAC_attach)
    [Anonymous Symbol]                       0x001090c8   Section        0  synopGMAC_Dev.o(.text.synopGMAC_clear_interrupt)
    [Anonymous Symbol]                       0x001090e4   Section        0  synopGMAC_Dev.o(.text.synopGMAC_disable_dma_rx)
    [Anonymous Symbol]                       0x00109104   Section        0  synopGMAC_Dev.o(.text.synopGMAC_disable_dma_tx)
    [Anonymous Symbol]                       0x00109124   Section        0  synopGMAC_Dev.o(.text.synopGMAC_disable_interrupt_all)
    [Anonymous Symbol]                       0x00109130   Section        0  synopGMAC_Dev.o(.text.synopGMAC_dma_bus_mode_init)
    [Anonymous Symbol]                       0x00109140   Section        0  synopGMAC_Dev.o(.text.synopGMAC_dma_control_init)
    [Anonymous Symbol]                       0x00109150   Section        0  synopGMAC_Dev.o(.text.synopGMAC_enable_dma_rx)
    [Anonymous Symbol]                       0x00109170   Section        0  synopGMAC_Dev.o(.text.synopGMAC_enable_dma_tx)
    [Anonymous Symbol]                       0x00109190   Section        0  synopGMAC_Dev.o(.text.synopGMAC_enable_interrupt)
    [Anonymous Symbol]                       0x0010919c   Section        0  synopGMAC_Dev.o(.text.synopGMAC_get_interrupt_type)
    [Anonymous Symbol]                       0x001091d8   Section        0  synopGMAC_Dev.o(.text.synopGMAC_get_mdc_clk_div)
    [Anonymous Symbol]                       0x001091e8   Section        0  synopGMAC_Dev.o(.text.synopGMAC_get_rx_desc_frame_length)
    [Anonymous Symbol]                       0x001091f0   Section        0  synopGMAC_Dev.o(.text.synopGMAC_get_rx_qptr)
    [Anonymous Symbol]                       0x00109288   Section        0  synopGMAC_Dev.o(.text.synopGMAC_get_tx_collision_count)
    [Anonymous Symbol]                       0x00109290   Section        0  synopGMAC_Dev.o(.text.synopGMAC_get_tx_qptr)
    [Anonymous Symbol]                       0x00109328   Section        0  synopGMAC_Dev.o(.text.synopGMAC_init_rx_desc_base)
    [Anonymous Symbol]                       0x00109334   Section        0  synopGMAC_Dev.o(.text.synopGMAC_init_tx_desc_base)
    [Anonymous Symbol]                       0x00109340   Section        0  synopGMAC_Dev.o(.text.synopGMAC_init_tx_rx_desc_queue)
    [Anonymous Symbol]                       0x001093a8   Section        0  synopGMAC_Dev.o(.text.synopGMAC_is_desc_owned_by_dma)
    [Anonymous Symbol]                       0x001093b0   Section        0  synopGMAC_Dev.o(.text.synopGMAC_is_desc_valid)
    [Anonymous Symbol]                       0x001093bc   Section        0  synopGMAC_Dev.o(.text.synopGMAC_is_ext_status)
    [Anonymous Symbol]                       0x001093c4   Section        0  synopGMAC_Dev.o(.text.synopGMAC_is_frame_dribbling_errors)
    [Anonymous Symbol]                       0x001093cc   Section        0  synopGMAC_Dev.o(.text.synopGMAC_is_magic_packet_received)
    [Anonymous Symbol]                       0x001093dc   Section        0  synopGMAC_Dev.o(.text.synopGMAC_is_rx_checksum_error)
    [Anonymous Symbol]                       0x0010941c   Section        0  synopGMAC_Dev.o(.text.synopGMAC_is_rx_crc)
    [Anonymous Symbol]                       0x00109424   Section        0  synopGMAC_Dev.o(.text.synopGMAC_is_rx_desc_valid)
    [Anonymous Symbol]                       0x00109434   Section        0  synopGMAC_Dev.o(.text.synopGMAC_is_rx_frame_collision)
    [Anonymous Symbol]                       0x0010943c   Section        0  synopGMAC_Dev.o(.text.synopGMAC_is_rx_frame_length_errors)
    [Anonymous Symbol]                       0x00109444   Section        0  synopGMAC_Dev.o(.text.synopGMAC_is_tx_aborted)
    [Anonymous Symbol]                       0x00109450   Section        0  synopGMAC_Dev.o(.text.synopGMAC_is_tx_carrier_error)
    [Anonymous Symbol]                       0x0010945c   Section        0  synopGMAC_Dev.o(.text.synopGMAC_is_tx_ipv4header_checksum_error)
    [Anonymous Symbol]                       0x00109464   Section        0  synopGMAC_Dev.o(.text.synopGMAC_is_tx_payload_checksum_error)
    [Anonymous Symbol]                       0x0010946c   Section        0  synopGMAC_Dev.o(.text.synopGMAC_is_wakeup_frame_received)
    [Anonymous Symbol]                       0x0010947c   Section        0  synopGMAC_Dev.o(.text.synopGMAC_mac_init)
    [Anonymous Symbol]                       0x001096dc   Section        0  synopGMAC_Dev.o(.text.synopGMAC_pause_control)
    [Anonymous Symbol]                       0x00109718   Section        0  synopGMAC_Dev.o(.text.synopGMAC_pmt_int_disable)
    [Anonymous Symbol]                       0x00109724   Section        0  synopGMAC_network_interface.o(.text.synopGMAC_powerup_mac)
    [Anonymous Symbol]                       0x0010975c   Section        0  synopGMAC_Dev.o(.text.synopGMAC_promisc_enable)
    [Anonymous Symbol]                       0x00109768   Section        0  synopGMAC_Dev.o(.text.synopGMAC_read_phy_reg)
    [Anonymous Symbol]                       0x001097cc   Section        0  synopGMAC_Dev.o(.text.synopGMAC_read_version)
    [Anonymous Symbol]                       0x001097e0   Section        0  synopGMAC_Dev.o(.text.synopGMAC_reset)
    [Anonymous Symbol]                       0x00109808   Section        0  synopGMAC_Dev.o(.text.synopGMAC_resume_dma_rx)
    [Anonymous Symbol]                       0x00109814   Section        0  synopGMAC_Dev.o(.text.synopGMAC_resume_dma_tx)
    [Anonymous Symbol]                       0x00109820   Section        0  synopGMAC_Dev.o(.text.synopGMAC_rx_desc_init_ring)
    [Anonymous Symbol]                       0x00109834   Section        0  synopGMAC_Dev.o(.text.synopGMAC_rx_disable)
    [Anonymous Symbol]                       0x00109840   Section        0  synopGMAC_Dev.o(.text.synopGMAC_rx_enable)
    [Anonymous Symbol]                       0x0010984c   Section        0  synopGMAC_Dev.o(.text.synopGMAC_set_mac_addr)
    [Anonymous Symbol]                       0x0010986c   Section        0  synopGMAC_Dev.o(.text.synopGMAC_set_mdc_clk_div)
    [Anonymous Symbol]                       0x00109890   Section        0  synopGMAC_network_interface.o(.text.synopGMAC_set_mode)
    [Anonymous Symbol]                       0x001098f8   Section        0  synopGMAC_Dev.o(.text.synopGMAC_set_rx_qptr)
    [Anonymous Symbol]                       0x00109950   Section        0  synopGMAC_Dev.o(.text.synopGMAC_set_tx_qptr)
    [Anonymous Symbol]                       0x001099cc   Section        0  synopGMAC_network_interface.o(.text.synopGMAC_setup_rx_desc_queue)
    [Anonymous Symbol]                       0x00109a08   Section        0  synopGMAC_network_interface.o(.text.synopGMAC_setup_tx_desc_queue)
    [Anonymous Symbol]                       0x00109a44   Section        0  synopGMAC_Dev.o(.text.synopGMAC_take_desc_ownership_rx)
    [Anonymous Symbol]                       0x00109a64   Section        0  synopGMAC_Dev.o(.text.synopGMAC_take_desc_ownership_tx)
    [Anonymous Symbol]                       0x00109a84   Section        0  synopGMAC_Dev.o(.text.synopGMAC_tx_desc_init_ring)
    [Anonymous Symbol]                       0x00109a98   Section        0  synopGMAC_Dev.o(.text.synopGMAC_tx_disable)
    [Anonymous Symbol]                       0x00109aa4   Section        0  synopGMAC_Dev.o(.text.synopGMAC_tx_enable)
    [Anonymous Symbol]                       0x00109ab0   Section        0  synopGMAC_Dev.o(.text.synopGMAC_write_phy_reg)
    [Anonymous Symbol]                       0x00109b0c   Section        0  synopGMAC_network_interface.o(.text.synopGMAC_xmit_frames)
    [Anonymous Symbol]                       0x00109b8c   Section        0  synopGMAC_network_interface.o(.text.synop_handle_received_data)
    [Anonymous Symbol]                       0x00109cdc   Section        0  synopGMAC_network_interface.o(.text.synop_handle_transmit_over)
    [Anonymous Symbol]                       0x00109dc4   Section        0  sys_arch.o(.text.sys_arch_mbox_fetch)
    [Anonymous Symbol]                       0x00109e24   Section        0  sys_arch.o(.text.sys_arch_mbox_tryfetch)
    [Anonymous Symbol]                       0x00109e44   Section        0  sys_arch.o(.text.sys_arch_protect)
    [Anonymous Symbol]                       0x00109e50   Section        0  sys_arch.o(.text.sys_arch_sem_wait)
    [Anonymous Symbol]                       0x00109e98   Section        0  sys_arch.o(.text.sys_arch_unprotect)
    [Anonymous Symbol]                       0x00109e9c   Section        0  timeouts.o(.text.sys_check_timeouts)
    [Anonymous Symbol]                       0x00109eec   Section        0  sys_arch.o(.text.sys_init)
    [Anonymous Symbol]                       0x00109ef0   Section        0  sys_arch.o(.text.sys_mbox_free)
    [Anonymous Symbol]                       0x00109f0c   Section        0  sys_arch.o(.text.sys_mbox_new)
    [Anonymous Symbol]                       0x00109f28   Section        0  sys_arch.o(.text.sys_mbox_trypost)
    [Anonymous Symbol]                       0x00109f48   Section        0  sys_arch.o(.text.sys_mutex_lock)
    [Anonymous Symbol]                       0x00109f5c   Section        0  sys_arch.o(.text.sys_mutex_new)
    [Anonymous Symbol]                       0x00109f74   Section        0  sys_arch.o(.text.sys_mutex_unlock)
    [Anonymous Symbol]                       0x00109f80   Section        0  sys_arch.o(.text.sys_now)
    [Anonymous Symbol]                       0x00109f84   Section        0  sys_arch.o(.text.sys_sem_free)
    [Anonymous Symbol]                       0x00109f8c   Section        0  sys_arch.o(.text.sys_sem_new)
    [Anonymous Symbol]                       0x00109fc4   Section        0  sys_arch.o(.text.sys_sem_signal)
    [Anonymous Symbol]                       0x00109fd0   Section        0  sys_arch.o(.text.sys_thread_new)
    [Anonymous Symbol]                       0x00109ffc   Section        0  timeouts.o(.text.sys_timeout)
    [Anonymous Symbol]                       0x0010a0c8   Section        0  timeouts.o(.text.sys_timeouts_init)
    [Anonymous Symbol]                       0x0010a0f8   Section        0  timeouts.o(.text.sys_timeouts_sleeptime)
    [Anonymous Symbol]                       0x0010a120   Section        0  tcp.o(.text.tcp_abandon)
    [Anonymous Symbol]                       0x0010a334   Section        0  tcp.o(.text.tcp_abort)
    [Anonymous Symbol]                       0x0010a33c   Section        0  tcp.o(.text.tcp_accept)
    tcp_accept_null                          0x0010a34d   Thumb Code    48  tcp.o(.text.tcp_accept_null)
    [Anonymous Symbol]                       0x0010a34c   Section        0  tcp.o(.text.tcp_accept_null)
    [Anonymous Symbol]                       0x0010a39c   Section        0  tcp.o(.text.tcp_alloc)
    [Anonymous Symbol]                       0x0010a524   Section        0  tcp.o(.text.tcp_arg)
    [Anonymous Symbol]                       0x0010a52c   Section        0  tcp.o(.text.tcp_bind)
    [Anonymous Symbol]                       0x0010a6c4   Section        0  tcp.o(.text.tcp_close)
    tcp_close_shutdown                       0x0010a715   Thumb Code   428  tcp.o(.text.tcp_close_shutdown)
    [Anonymous Symbol]                       0x0010a714   Section        0  tcp.o(.text.tcp_close_shutdown)
    tcp_close_shutdown_fin                   0x0010a8f9   Thumb Code    78  tcp.o(.text.tcp_close_shutdown_fin)
    [Anonymous Symbol]                       0x0010a8f8   Section        0  tcp.o(.text.tcp_close_shutdown_fin)
    tcp_create_segment                       0x0010a949   Thumb Code   236  tcp_out.o(.text.tcp_create_segment)
    [Anonymous Symbol]                       0x0010a948   Section        0  tcp_out.o(.text.tcp_create_segment)
    [Anonymous Symbol]                       0x0010aa90   Section        0  tcp.o(.text.tcp_eff_send_mss_netif)
    [Anonymous Symbol]                       0x0010ab00   Section        0  tcp_out.o(.text.tcp_enqueue_flags)
    [Anonymous Symbol]                       0x0010acec   Section        0  tcp.o(.text.tcp_err)
    [Anonymous Symbol]                       0x0010ad54   Section        0  tcp.o(.text.tcp_fasttmr)
    [Anonymous Symbol]                       0x0010adec   Section        0  tcp.o(.text.tcp_free)
    tcp_free_acked_segments                  0x0010ae21   Thumb Code   208  tcp_in.o(.text.tcp_free_acked_segments)
    [Anonymous Symbol]                       0x0010ae20   Section        0  tcp_in.o(.text.tcp_free_acked_segments)
    [Anonymous Symbol]                       0x0010af38   Section        0  tcp.o(.text.tcp_free_ooseq)
    [Anonymous Symbol]                       0x0010af68   Section        0  tcp.o(.text.tcp_init)
    [Anonymous Symbol]                       0x0010af80   Section        0  tcp_in.o(.text.tcp_input)
    tcp_input_delayed_close                  0x0010b629   Thumb Code    66  tcp_in.o(.text.tcp_input_delayed_close)
    [Anonymous Symbol]                       0x0010b628   Section        0  tcp_in.o(.text.tcp_input_delayed_close)
    [Anonymous Symbol]                       0x0010b66c   Section        0  tcp_out.o(.text.tcp_keepalive)
    tcp_kill_prio                            0x0010b715   Thumb Code   104  tcp.o(.text.tcp_kill_prio)
    [Anonymous Symbol]                       0x0010b714   Section        0  tcp.o(.text.tcp_kill_prio)
    tcp_listen_input                         0x0010b77d   Thumb Code   352  tcp_in.o(.text.tcp_listen_input)
    [Anonymous Symbol]                       0x0010b77c   Section        0  tcp_in.o(.text.tcp_listen_input)
    [Anonymous Symbol]                       0x0010b8dc   Section        0  tcp.o(.text.tcp_listen_with_backlog_and_err)
    [Anonymous Symbol]                       0x0010ba68   Section        0  tcp.o(.text.tcp_netif_ip_addr_changed)
    [Anonymous Symbol]                       0x0010baf0   Section        0  tcp.o(.text.tcp_new_ip_type)
    [Anonymous Symbol]                       0x0010baf8   Section        0  tcp.o(.text.tcp_next_iss)
    tcp_oos_insert_segment                   0x0010bb51   Thumb Code   124  tcp_in.o(.text.tcp_oos_insert_segment)
    [Anonymous Symbol]                       0x0010bb50   Section        0  tcp_in.o(.text.tcp_oos_insert_segment)
    [Anonymous Symbol]                       0x0010bbcc   Section        0  tcp_out.o(.text.tcp_output)
    tcp_output_alloc_header_common           0x0010c001   Thumb Code   132  tcp_out.o(.text.tcp_output_alloc_header_common)
    [Anonymous Symbol]                       0x0010c000   Section        0  tcp_out.o(.text.tcp_output_alloc_header_common)
    tcp_output_control_segment               0x0010c0b5   Thumb Code   108  tcp_out.o(.text.tcp_output_control_segment)
    [Anonymous Symbol]                       0x0010c0b4   Section        0  tcp_out.o(.text.tcp_output_control_segment)
    tcp_parseopt                             0x0010c121   Thumb Code   292  tcp_in.o(.text.tcp_parseopt)
    [Anonymous Symbol]                       0x0010c120   Section        0  tcp_in.o(.text.tcp_parseopt)
    tcp_pbuf_prealloc                        0x0010c245   Thumb Code   168  tcp_out.o(.text.tcp_pbuf_prealloc)
    [Anonymous Symbol]                       0x0010c244   Section        0  tcp_out.o(.text.tcp_pbuf_prealloc)
    [Anonymous Symbol]                       0x0010c310   Section        0  tcp.o(.text.tcp_pcb_purge)
    [Anonymous Symbol]                       0x0010c3ec   Section        0  tcp.o(.text.tcp_pcb_remove)
    [Anonymous Symbol]                       0x0010c568   Section        0  tcp.o(.text.tcp_poll)
    tcp_process                              0x0010c5fd   Thumb Code  1304  tcp_in.o(.text.tcp_process)
    [Anonymous Symbol]                       0x0010c5fc   Section        0  tcp_in.o(.text.tcp_process)
    [Anonymous Symbol]                       0x0010cb80   Section        0  tcp.o(.text.tcp_process_refused_data)
    tcp_receive                              0x0010cc61   Thumb Code  2156  tcp_in.o(.text.tcp_receive)
    [Anonymous Symbol]                       0x0010cc60   Section        0  tcp_in.o(.text.tcp_receive)
    [Anonymous Symbol]                       0x0010d554   Section        0  tcp.o(.text.tcp_recv)
    [Anonymous Symbol]                       0x0010d5bc   Section        0  tcp.o(.text.tcp_recv_null)
    [Anonymous Symbol]                       0x0010d634   Section        0  tcp.o(.text.tcp_recved)
    [Anonymous Symbol]                       0x0010d748   Section        0  tcp_out.o(.text.tcp_rexmit)
    [Anonymous Symbol]                       0x0010d7f4   Section        0  tcp_out.o(.text.tcp_rexmit_fast)
    [Anonymous Symbol]                       0x0010d88c   Section        0  tcp_out.o(.text.tcp_rexmit_rto)
    [Anonymous Symbol]                       0x0010d910   Section        0  tcp_out.o(.text.tcp_rexmit_rto_commit)
    [Anonymous Symbol]                       0x0010d954   Section        0  tcp_out.o(.text.tcp_rexmit_rto_prepare)
    [Anonymous Symbol]                       0x0010d9f8   Section        0  tcp_out.o(.text.tcp_rst)
    [Anonymous Symbol]                       0x0010dac0   Section        0  tcp.o(.text.tcp_seg_copy)
    [Anonymous Symbol]                       0x0010db28   Section        0  tcp.o(.text.tcp_seg_free)
    [Anonymous Symbol]                       0x0010db48   Section        0  tcp.o(.text.tcp_segs_free)
    [Anonymous Symbol]                       0x0010db78   Section        0  tcp_out.o(.text.tcp_send_empty_ack)
    [Anonymous Symbol]                       0x0010dc34   Section        0  tcp_out.o(.text.tcp_send_fin)
    [Anonymous Symbol]                       0x0010dcb4   Section        0  tcp.o(.text.tcp_sent)
    [Anonymous Symbol]                       0x0010dd1c   Section        0  tcp.o(.text.tcp_shutdown)
    [Anonymous Symbol]                       0x0010ddc0   Section        0  tcp.o(.text.tcp_slowtmr)
    [Anonymous Symbol]                       0x0010e410   Section        0  tcp_out.o(.text.tcp_split_unsent_seg)
    [Anonymous Symbol]                       0x0010e62c   Section        0  timeouts.o(.text.tcp_timer_needed)
    tcp_timewait_input                       0x0010e6c9   Thumb Code   164  tcp_in.o(.text.tcp_timewait_input)
    [Anonymous Symbol]                       0x0010e6c8   Section        0  tcp_in.o(.text.tcp_timewait_input)
    [Anonymous Symbol]                       0x0010e76c   Section        0  tcp.o(.text.tcp_tmr)
    [Anonymous Symbol]                       0x0010e790   Section        0  tcp_in.o(.text.tcp_trigger_input_pcb_close)
    [Anonymous Symbol]                       0x0010e7a4   Section        0  tcp.o(.text.tcp_update_rcv_ann_wnd)
    [Anonymous Symbol]                       0x0010e844   Section        0  tcp_out.o(.text.tcp_write)
    [Anonymous Symbol]                       0x0010efc0   Section        0  tcp_out.o(.text.tcp_zero_window_probe)
    [Anonymous Symbol]                       0x0010f0ec   Section        0  tcpip.o(.text.tcpip_init)
    [Anonymous Symbol]                       0x0010f1d4   Section        0  tcpip.o(.text.tcpip_input)
    [Anonymous Symbol]                       0x0010f288   Section        0  tcpip.o(.text.tcpip_send_msg_wait_sem)
    tcpip_tcp_timer                          0x0010f2ad   Thumb Code   162  timeouts.o(.text.tcpip_tcp_timer)
    [Anonymous Symbol]                       0x0010f2ac   Section        0  timeouts.o(.text.tcpip_tcp_timer)
    tcpip_thread                             0x0010f351   Thumb Code   234  tcpip.o(.text.tcpip_thread)
    [Anonymous Symbol]                       0x0010f350   Section        0  tcpip.o(.text.tcpip_thread)
    [Anonymous Symbol]                       0x0010f43c   Section        0  tcpip.o(.text.tcpip_try_callback)
    [Anonymous Symbol]                       0x0010f4a4   Section        0  udp.o(.text.udp_bind)
    [Anonymous Symbol]                       0x0010f5c8   Section        0  udp.o(.text.udp_init)
    [Anonymous Symbol]                       0x0010f5e0   Section        0  udp.o(.text.udp_input)
    [Anonymous Symbol]                       0x0010f890   Section        0  udp.o(.text.udp_netif_ip_addr_changed)
    [Anonymous Symbol]                       0x0010f8d0   Section        0  udp.o(.text.udp_new_ip_type)
    [Anonymous Symbol]                       0x0010f8f8   Section        0  udp.o(.text.udp_recv)
    [Anonymous Symbol]                       0x0010f934   Section        0  udp.o(.text.udp_remove)
    [Anonymous Symbol]                       0x0010f994   Section        0  portasm.o(.text.ulSetInterruptMask)
    [Anonymous Symbol]                       0x0010f9ac   Section        0  list.o(.text.uxListRemove)
    [Anonymous Symbol]                       0x0010f9d0   Section        0  queue.o(.text.uxQueueMessagesWaiting)
    [Anonymous Symbol]                       0x0010f9ec   Section        0  tasks.o(.text.uxTaskGetNumberOfTasks)
    [Anonymous Symbol]                       0x0010f9f8   Section        0  tasks.o(.text.uxTaskPriorityGet)
    [Anonymous Symbol]                       0x0010fa18   Section        0  main.o(.text.vApplicationMallocFailedHook)
    [Anonymous Symbol]                       0x0010fa20   Section        0  main.o(.text.vApplicationStackOverflowHook)
    [Anonymous Symbol]                       0x0010fa28   Section        0  main.o(.text.vApplicationTickHook)
    [Anonymous Symbol]                       0x0010fa2c   Section        0  portasm.o(.text.vClearInterruptMask)
    [Anonymous Symbol]                       0x0010fa3c   Section        0  list.o(.text.vListInitialise)
    [Anonymous Symbol]                       0x0010fa54   Section        0  list.o(.text.vListInitialiseItem)
    [Anonymous Symbol]                       0x0010fa5c   Section        0  list.o(.text.vListInsert)
    [Anonymous Symbol]                       0x0010fa98   Section        0  list.o(.text.vListInsertEnd)
    vPolledQueueConsumer                     0x0010fab5   Thumb Code   100  PollQ.o(.text.vPolledQueueConsumer)
    [Anonymous Symbol]                       0x0010fab4   Section        0  PollQ.o(.text.vPolledQueueConsumer)
    vPolledQueueProducer                     0x0010fb19   Thumb Code    90  PollQ.o(.text.vPolledQueueProducer)
    [Anonymous Symbol]                       0x0010fb18   Section        0  PollQ.o(.text.vPolledQueueProducer)
    [Anonymous Symbol]                       0x0010fb74   Section        0  port.o(.text.vPortEnterCritical)
    [Anonymous Symbol]                       0x0010fb94   Section        0  port.o(.text.vPortExitCritical)
    [Anonymous Symbol]                       0x0010fbc4   Section        0  heap_2.o(.text.vPortFree)
    __tagsym$$used.0                         0x0010fc28   Number         0  port.o(.text.vPortSVCHandler_C)
    [Anonymous Symbol]                       0x0010fc28   Section        0  port.o(.text.vPortSVCHandler_C)
    [Anonymous Symbol]                       0x0010fc60   Section        0  port.o(.text.vPortSetupTimerInterrupt)
    [Anonymous Symbol]                       0x0010fca0   Section        0  port.o(.text.vPortSuppressTicksAndSleep)
    [Anonymous Symbol]                       0x0010fdf4   Section        0  port.o(.text.vPortYield)
    [Anonymous Symbol]                       0x0010fe0c   Section        0  queue.o(.text.vQueueAddToRegistry)
    [Anonymous Symbol]                       0x0010fe64   Section        0  queue.o(.text.vQueueDelete)
    [Anonymous Symbol]                       0x0010fea4   Section        0  QueueSet.o(.text.vQueueSetAccessQueueSetFromISR)
    [Anonymous Symbol]                       0x0010ff54   Section        0  queue.o(.text.vQueueWaitForMessageRestricted)
    [Anonymous Symbol]                       0x0010ffa0   Section        0  portasm.o(.text.vRestoreContextOfFirstTask)
    pxCurrentTCBConst2                       0x0010ffd0   Number         0  portasm.o(.text.vRestoreContextOfFirstTask)
    [Anonymous Symbol]                       0x0010ffe0   Section        0  portasm.o(.text.vStartFirstTask)
    xVTORConst                               0x00110000   Number         0  portasm.o(.text.vStartFirstTask)
    [Anonymous Symbol]                       0x00110004   Section        0  GenQTest.o(.text.vStartGenericQueueTasks)
    [Anonymous Symbol]                       0x001100e4   Section        0  PollQ.o(.text.vStartPolledQueueTasks)
    [Anonymous Symbol]                       0x00110160   Section        0  QueueSet.o(.text.vStartQueueSetTasks)
    [Anonymous Symbol]                       0x001101c8   Section        0  semtest.o(.text.vStartSemaphoreTasks)
    [Anonymous Symbol]                       0x001102e0   Section        0  tasks.o(.text.vTaskDelay)
    [Anonymous Symbol]                       0x00110370   Section        0  tasks.o(.text.vTaskInternalSetTimeOutState)
    [Anonymous Symbol]                       0x0011038c   Section        0  tasks.o(.text.vTaskMissedYield)
    [Anonymous Symbol]                       0x0011039c   Section        0  tasks.o(.text.vTaskPlaceOnEventList)
    [Anonymous Symbol]                       0x001103c8   Section        0  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    [Anonymous Symbol]                       0x00110430   Section        0  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    [Anonymous Symbol]                       0x001104d0   Section        0  tasks.o(.text.vTaskPrioritySet)
    [Anonymous Symbol]                       0x0011059c   Section        0  tasks.o(.text.vTaskResume)
    [Anonymous Symbol]                       0x00110630   Section        0  tasks.o(.text.vTaskStartScheduler)
    [Anonymous Symbol]                       0x001106b4   Section        0  tasks.o(.text.vTaskStepTick)
    [Anonymous Symbol]                       0x00110720   Section        0  tasks.o(.text.vTaskSuspend)
    [Anonymous Symbol]                       0x001107f8   Section        0  tasks.o(.text.vTaskSuspendAll)
    __tagsym$$used.0                         0x00110808   Number         0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x00110808   Section        0  tasks.o(.text.vTaskSwitchContext)
    vWebTask                                 0x001108c1   Thumb Code   172  main.o(.text.vWebTask)
    [Anonymous Symbol]                       0x001108c0   Section        0  main.o(.text.vWebTask)
    [Anonymous Symbol]                       0x001109d4   Section        0  port.o(.text.xPortStartScheduler)
    [Anonymous Symbol]                       0x00110a28   Section        0  queue.o(.text.xQueueAddToSet)
    [Anonymous Symbol]                       0x00110a50   Section        0  queue.o(.text.xQueueCreateMutex)
    [Anonymous Symbol]                       0x00110ac8   Section        0  queue.o(.text.xQueueCreateSet)
    [Anonymous Symbol]                       0x00110ad0   Section        0  queue.o(.text.xQueueGenericCreate)
    [Anonymous Symbol]                       0x00110b5c   Section        0  queue.o(.text.xQueueGenericSend)
    [Anonymous Symbol]                       0x00110d18   Section        0  queue.o(.text.xQueueGenericSendFromISR)
    [Anonymous Symbol]                       0x00110e44   Section        0  queue.o(.text.xQueueGiveFromISR)
    [Anonymous Symbol]                       0x00110ef8   Section        0  queue.o(.text.xQueuePeek)
    [Anonymous Symbol]                       0x0011104c   Section        0  queue.o(.text.xQueueReceive)
    [Anonymous Symbol]                       0x001111ac   Section        0  queue.o(.text.xQueueReceiveFromISR)
    [Anonymous Symbol]                       0x00111254   Section        0  queue.o(.text.xQueueRemoveFromSet)
    [Anonymous Symbol]                       0x00111288   Section        0  queue.o(.text.xQueueSelectFromSet)
    [Anonymous Symbol]                       0x001112a0   Section        0  queue.o(.text.xQueueSelectFromSetFromISR)
    [Anonymous Symbol]                       0x001112b8   Section        0  queue.o(.text.xQueueSemaphoreTake)
    [Anonymous Symbol]                       0x0011142c   Section        0  tasks.o(.text.xTaskCheckForTimeOut)
    [Anonymous Symbol]                       0x001114a0   Section        0  tasks.o(.text.xTaskCreate)
    [Anonymous Symbol]                       0x00111688   Section        0  tasks.o(.text.xTaskGetSchedulerState)
    [Anonymous Symbol]                       0x001116b0   Section        0  tasks.o(.text.xTaskGetTickCount)
    [Anonymous Symbol]                       0x001116bc   Section        0  tasks.o(.text.xTaskIncrementTick)
    [Anonymous Symbol]                       0x0011186c   Section        0  tasks.o(.text.xTaskPriorityDisinherit)
    [Anonymous Symbol]                       0x00111900   Section        0  tasks.o(.text.xTaskPriorityInherit)
    [Anonymous Symbol]                       0x001119a8   Section        0  tasks.o(.text.xTaskRemoveFromEventList)
    [Anonymous Symbol]                       0x00111ac4   Section        0  tasks.o(.text.xTaskResumeAll)
    [Anonymous Symbol]                       0x00111c2c   Section        0  timers.o(.text.xTimerCreateTimerTask)
    i.__0printf$8                            0x00111c80   Section        0  printf8.o(i.__0printf$8)
    i.__scatterload_copy                     0x00111ca0   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x00111cae   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x00111cb0   Section       14  handlers.o(i.__scatterload_zeroinit)
    _printf_core                             0x00111cc1   Thumb Code   996  printf8.o(i._printf_core)
    i._printf_core                           0x00111cc0   Section        0  printf8.o(i._printf_core)
    _printf_post_padding                     0x001120d1   Thumb Code    36  printf8.o(i._printf_post_padding)
    i._printf_post_padding                   0x001120d0   Section        0  printf8.o(i._printf_post_padding)
    _printf_pre_padding                      0x001120f5   Thumb Code    46  printf8.o(i._printf_pre_padding)
    i._printf_pre_padding                    0x001120f4   Section        0  printf8.o(i._printf_pre_padding)
    i.puts                                   0x00112124   Section        0  puts.o(i.puts)
    .L__const.UART_SelectIrDAMode.u32ClkTbl  0x00112148   Data          20  uart.o(.rodata..L__const.UART_SelectIrDAMode.u32ClkTbl)
    .Lswitch.table.CLK_SystemClockUpdate     0x0011215c   Data          16  clk.o(.rodata.cst16)
    .L__const.CLK_GetAPLL1ClockFreq.au8NoTbl 0x0011216c   Data           4  clk.o(.rodata.cst4)
    data_404_html                            0x00112170   Data         834  fs.o(.rodata.data_404_html)
    [Anonymous Symbol]                       0x00112170   Section        0  fs.o(.rodata.data_404_html)
    data_img_m4_jpg                          0x001124b2   Data       84994  fs.o(.rodata.data_img_m4_jpg)
    [Anonymous Symbol]                       0x001124b2   Section        0  fs.o(.rodata.data_img_m4_jpg)
    data_index_html                          0x001270b4   Data        2523  fs.o(.rodata.data_index_html)
    [Anonymous Symbol]                       0x001270b4   Section        0  fs.o(.rodata.data_index_html)
    .L.str.5                                 0x00127bd3   Data          12  httpserver-netconn.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00127bd3   Section        0  httpserver-netconn.o(.rodata.str1.1)
    .L.str.5                                 0x00127bdf   Data          32  retarget.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00127bdf   Section        0  retarget.o(.rodata.str1.1)
    .L.str.9                                 0x00127bff   Data          31  retarget.o(.rodata.str1.1)
    .L.str.8                                 0x00127c1e   Data          29  retarget.o(.rodata.str1.1)
    .L.str.10                                0x00127c3b   Data          25  retarget.o(.rodata.str1.1)
    .L.str.4                                 0x00127c54   Data          27  retarget.o(.rodata.str1.1)
    .Lstr                                    0x00127c6f   Data          21  retarget.o(.rodata.str1.1)
    .L.str.6                                 0x00127c84   Data           4  retarget.o(.rodata.str1.1)
    .L.str.7                                 0x00127c88   Data           4  retarget.o(.rodata.str1.1)
    .Lstr.16                                 0x00127c8c   Data          23  retarget.o(.rodata.str1.1)
    .L.str.2                                 0x00127ca3   Data          91  ethernetif.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00127ca3   Section        0  ethernetif.o(.rodata.str1.1)
    .L.str                                   0x00127cfe   Data          40  mem.o(.rodata.str1.1)
    .L.str                                   0x00127cfe   Data          40  mem.o(.rodata.str1.1)
    .L.str                                   0x00127cfe   Data          40  mem.o(.rodata.str1.1)
    .L.str                                   0x00127cfe   Data          40  mem.o(.rodata.str1.1)
    .L.str                                   0x00127cfe   Data          40  mem.o(.rodata.str1.1)
    .L.str                                   0x00127cfe   Data          40  mem.o(.rodata.str1.1)
    .L.str                                   0x00127cfe   Data          40  mem.o(.rodata.str1.1)
    .L.str                                   0x00127cfe   Data          40  mem.o(.rodata.str1.1)
    .L.str                                   0x00127cfe   Data          40  mem.o(.rodata.str1.1)
    .L.str                                   0x00127cfe   Data          40  mem.o(.rodata.str1.1)
    .L.str                                   0x00127cfe   Data          40  mem.o(.rodata.str1.1)
    .L.str                                   0x00127cfe   Data          40  mem.o(.rodata.str1.1)
    .L.str                                   0x00127cfe   Data          40  mem.o(.rodata.str1.1)
    .L.str                                   0x00127cfe   Data          40  mem.o(.rodata.str1.1)
    .L.str                                   0x00127cfe   Data          40  mem.o(.rodata.str1.1)
    .L.str                                   0x00127cfe   Data          40  mem.o(.rodata.str1.1)
    .L.str                                   0x00127cfe   Data          40  mem.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00127cfe   Section        0  mem.o(.rodata.str1.1)
    .L.str.12                                0x00127d26   Data          47  mem.o(.rodata.str1.1)
    .L.str.17                                0x00127d55   Data          42  mem.o(.rodata.str1.1)
    .L.str.2                                 0x00127d7f   Data          73  mem.o(.rodata.str1.1)
    .L.str.6                                 0x00127dc8   Data          50  mem.o(.rodata.str1.1)
    .L.str.5                                 0x00127dfa   Data          38  mem.o(.rodata.str1.1)
    .L.str.9                                 0x00127e20   Data          17  mem.o(.rodata.str1.1)
    .L.str.2                                 0x00127e31   Data          74  memp.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00127e31   Section        0  memp.o(.rodata.str1.1)
    .L.str.1                                 0x00127e7b   Data          18  memp.o(.rodata.str1.1)
    .L.str.6                                 0x00127e8d   Data          32  memp.o(.rodata.str1.1)
    .L.str.5                                 0x00127ead   Data          35  memp.o(.rodata.str1.1)
    .L.str.2                                 0x00127ed0   Data          75  netif.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00127ed0   Section        0  netif.o(.rodata.str1.1)
    .L.str.25                                0x00127f1b   Data          42  pbuf.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00127f1b   Section        0  pbuf.o(.rodata.str1.1)
    .L.str.10                                0x00127f45   Data          10  pbuf.o(.rodata.str1.1)
    .L.str.2                                 0x00127f4f   Data          74  pbuf.o(.rodata.str1.1)
    .L.str.36                                0x00127f99   Data          17  pbuf.o(.rodata.str1.1)
    .L.str.6                                 0x00127faa   Data          18  pbuf.o(.rodata.str1.1)
    .L.str.11                                0x00127fbc   Data          30  pbuf.o(.rodata.str1.1)
    .L.str.15                                0x00127fff   Data          18  pbuf.o(.rodata.str1.1)
    .L.str.29                                0x00128003   Data          37  pbuf.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00128011   Section        0  tcp.o(.rodata.str1.1)
    .L.str.1                                 0x00128054   Data          17  tcp.o(.rodata.str1.1)
    .L.str.25                                0x00128065   Data          47  tcp.o(.rodata.str1.1)
    .L.str.21                                0x001280b2   Data          50  tcp.o(.rodata.str1.1)
    .L.str.2                                 0x001280e4   Data          73  tcp.o(.rodata.str1.1)
    .L.str.12                                0x0012812d   Data          26  tcp.o(.rodata.str1.1)
    .L.str.22                                0x00128147   Data          53  tcp.o(.rodata.str1.1)
    .L.str.23                                0x0012817c   Data          43  tcp.o(.rodata.str1.1)
    .L.str.24                                0x001281a7   Data          42  tcp.o(.rodata.str1.1)
    .L.str.26                                0x001281d1   Data          39  tcp.o(.rodata.str1.1)
    .L.str.27                                0x001281f8   Data          38  tcp.o(.rodata.str1.1)
    .L.str.31                                0x0012821e   Data          31  tcp_in.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x0012821e   Section        0  tcp_in.o(.rodata.str1.1)
    .L.str.32                                0x0012823d   Data          37  tcp_in.o(.rodata.str1.1)
    .L.str.29                                0x00128262   Data          55  tcp_in.o(.rodata.str1.1)
    .L.str.9                                 0x00128299   Data          43  tcp_in.o(.rodata.str1.1)
    .L.str.10                                0x001282c4   Data          42  tcp_in.o(.rodata.str1.1)
    .L.str.12                                0x001282ee   Data          26  tcp_in.o(.rodata.str1.1)
    .L.str.8                                 0x00128308   Data          39  tcp_in.o(.rodata.str1.1)
    .L.str.7                                 0x0012832f   Data          42  tcp_in.o(.rodata.str1.1)
    .L.str.11                                0x00128359   Data          45  tcp_in.o(.rodata.str1.1)
    .L.str.2                                 0x00128386   Data          76  tcp_in.o(.rodata.str1.1)
    .L.str.3                                 0x001283d2   Data          49  tcp_out.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x001283d2   Section        0  tcp_out.o(.rodata.str1.1)
    .L.str.21                                0x00128403   Data          85  tcp_out.o(.rodata.str1.1)
    .L.str.8                                 0x00128458   Data          47  tcp_out.o(.rodata.str1.1)
    .L.str.10                                0x00128487   Data          14  tcp_out.o(.rodata.str1.1)
    .L.str.11                                0x00128495   Data          17  tcp_out.o(.rodata.str1.1)
    .L.str.1                                 0x001284a6   Data          23  tcp_out.o(.rodata.str1.1)
    .L.str.57                                0x001284bd   Data          37  tcp_out.o(.rodata.str1.1)
    .L.str.31                                0x001284e2   Data          35  tcp_out.o(.rodata.str1.1)
    .L.str.2                                 0x00128505   Data          77  tcp_out.o(.rodata.str1.1)
    .L.str.7                                 0x00128552   Data          41  tcp_out.o(.rodata.str1.1)
    .L.str.5                                 0x0012857b   Data          32  tcp_out.o(.rodata.str1.1)
    .L.str.13                                0x0012859b   Data          53  tcp_out.o(.rodata.str1.1)
    .L.str.45                                0x001285d0   Data          20  tcp_out.o(.rodata.str1.1)
    .L.str.14                                0x001285e4   Data          30  tcp_out.o(.rodata.str1.1)
    .L.str.26                                0x00128602   Data          40  tcp_out.o(.rodata.str1.1)
    .L.str.25                                0x0012862a   Data          42  tcp_out.o(.rodata.str1.1)
    .L.str.6                                 0x00128654   Data          30  tcp_out.o(.rodata.str1.1)
    .L.str.9                                 0x00128672   Data          62  tcp_out.o(.rodata.str1.1)
    .L.str.12                                0x001286b0   Data          56  tcp_out.o(.rodata.str1.1)
    .L.str.2                                 0x001286e8   Data          78  timeouts.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x001286e8   Section        0  timeouts.o(.rodata.str1.1)
    .L.str.4                                 0x00128736   Data          61  timeouts.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00128773   Section        0  udp.o(.rodata.str1.1)
    .L.str.2                                 0x00128792   Data          73  udp.o(.rodata.str1.1)
    .L.str.14                                0x001287e4   Data          31  udp.o(.rodata.str1.1)
    .L.str.15                                0x00128803   Data          32  udp.o(.rodata.str1.1)
    .L.str.17                                0x0012881d   Data          65  etharp.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x0012881d   Section        0  etharp.o(.rodata.str1.1)
    .L.str.16                                0x00128823   Data          34  udp.o(.rodata.str1.1)
    .L.str.12                                0x0012885e   Data          19  etharp.o(.rodata.str1.1)
    .L.str.4                                 0x00128871   Data          14  etharp.o(.rodata.str1.1)
    .L.str.6                                 0x0012887f   Data          10  etharp.o(.rodata.str1.1)
    .L.str.3                                 0x00128889   Data          15  etharp.o(.rodata.str1.1)
    .L.str.2                                 0x00128898   Data          81  etharp.o(.rodata.str1.1)
    .L.str.2                                 0x001288e9   Data          79  icmp.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x001288e9   Section        0  icmp.o(.rodata.str1.1)
    .L.str.1                                 0x00128938   Data          12  ip4.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00128938   Section        0  ip4.o(.rodata.str1.1)
    .L.str.2                                 0x00128944   Data          78  ip4.o(.rodata.str1.1)
    .L.str.2                                 0x00128992   Data          83  ip4_frag.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00128992   Section        0  ip4_frag.o(.rodata.str1.1)
    .L.str.4                                 0x001289e5   Data          32  ip4_frag.o(.rodata.str1.1)
    .L.str.1                                 0x00128a05   Data          27  ip4_frag.o(.rodata.str1.1)
    .L.str.16                                0x00128a20   Data          25  ip4_frag.o(.rodata.str1.1)
    .L.str.2                                 0x00128a39   Data          76  api_lib.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00128a39   Section        0  api_lib.o(.rodata.str1.1)
    .L.str.26                                0x00128aa0   Data          28  api_lib.o(.rodata.str1.1)
    .L.str.16                                0x00128abc   Data          36  api_lib.o(.rodata.str1.1)
    .L.str.17                                0x00128ad1   Data          42  api_lib.o(.rodata.str1.1)
    .L.str.18                                0x00128b0a   Data          30  api_lib.o(.rodata.str1.1)
    .L.str.15                                0x00128b18   Data          16  api_lib.o(.rodata.str1.1)
    .L.str.21                                0x00128b19   Data          27  api_lib.o(.rodata.str1.1)
    .L.str.10                                0x00128b28   Data           7  api_msg.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00128b28   Section        0  api_msg.o(.rodata.str1.1)
    .L.str.41                                0x00128b2f   Data          43  api_msg.o(.rodata.str1.1)
    .L.str.40                                0x00128b5a   Data          40  api_msg.o(.rodata.str1.1)
    .L.str.24                                0x00128b82   Data          14  api_msg.o(.rodata.str1.1)
    .L.str.22                                0x00128b90   Data          26  api_msg.o(.rodata.str1.1)
    .L.str.25                                0x00128baa   Data          13  api_msg.o(.rodata.str1.1)
    .L.str.2                                 0x00128bb7   Data          76  api_msg.o(.rodata.str1.1)
    .L.str.9                                 0x00128c03   Data          27  api_msg.o(.rodata.str1.1)
    .L.str.6                                 0x00128c1e   Data          60  api_msg.o(.rodata.str1.1)
    .L.str.2                                 0x00128c5a   Data          75  netbuf.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00128c5a   Section        0  netbuf.o(.rodata.str1.1)
    .L.str.2                                 0x00128ca5   Data          74  tcpip.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00128ca5   Section        0  tcpip.o(.rodata.str1.1)
    .L.str.6                                 0x00128cef   Data          30  tcpip.o(.rodata.str1.1)
    .L.str.1                                 0x00128d0d   Data          13  tcpip.o(.rodata.str1.1)
    .L.str.2                                 0x00128d1a   Data          79  ethernet.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00128d1a   Section        0  ethernet.o(.rodata.str1.1)
    tcp_backoff                              0x00128d69   Data          13  tcp.o(.rodata.tcp_backoff)
    [Anonymous Symbol]                       0x00128d69   Section        0  tcp.o(.rodata.tcp_backoff)
    tcp_persist_backoff                      0x00128d88   Data           7  tcp.o(.rodata.tcp_persist_backoff)
    [Anonymous Symbol]                       0x00128d88   Section        0  tcp.o(.rodata.tcp_persist_backoff)
    .init_array                              0x00128de8   Section        0  cpp_init.o(.init_array)
    .data                                    0x20100000   Section        4  stdout.o(.data)
    prvCheckReceivedValue.ulExpectedReceivedFromISR 0x20100018   Data           4  QueueSet.o(.data.prvCheckReceivedValue.ulExpectedReceivedFromISR)
    [Anonymous Symbol]                       0x20100018   Section        0  QueueSet.o(.data.prvCheckReceivedValue.ulExpectedReceivedFromISR)
    tcp_next_iss.iss                         0x2010001c   Data           4  tcp.o(.data.tcp_next_iss.iss)
    [Anonymous Symbol]                       0x2010001c   Section        0  tcp.o(.data.tcp_next_iss.iss)
    tcp_port                                 0x20100020   Data           2  tcp.o(.data.tcp_port)
    [Anonymous Symbol]                       0x20100020   Section        0  tcp.o(.data.tcp_port)
    udp_port                                 0x20100022   Data           2  udp.o(.data.udp_port)
    [Anonymous Symbol]                       0x20100022   Section        0  udp.o(.data.udp_port)
    ulCriticalNesting                        0x20100024   Data           4  port.o(.data.ulCriticalNesting)
    [Anonymous Symbol]                       0x20100024   Section        0  port.o(.data.ulCriticalNesting)
    ulISRTxValue                             0x20100028   Data           4  QueueSet.o(.data.ulISRTxValue)
    [Anonymous Symbol]                       0x20100028   Section        0  QueueSet.o(.data.ulISRTxValue)
    xFreeBytesRemaining                      0x2010002c   Data           4  heap_2.o(.data.xFreeBytesRemaining)
    [Anonymous Symbol]                       0x2010002c   Section        0  heap_2.o(.data.xFreeBytesRemaining)
    xQueueSetTasksStatus                     0x20100030   Data           4  QueueSet.o(.data.xQueueSetTasksStatus)
    [Anonymous Symbol]                       0x20100030   Section        0  QueueSet.o(.data.xQueueSetTasksStatus)
    GMACdev                                  0x20100034   Data         204  emac.o(.bss.GMACdev)
    [Anonymous Symbol]                       0x20100034   Section        0  emac.o(.bss.GMACdev)
    ackno                                    0x20100104   Data           4  tcp_in.o(.bss.ackno)
    [Anonymous Symbol]                       0x20100104   Section        0  tcp_in.o(.bss.ackno)
    arp_table                                0x20100108   Data         240  etharp.o(.bss.arp_table)
    [Anonymous Symbol]                       0x20100108   Section        0  etharp.o(.bss.arp_table)
    current_timeout_due_time                 0x201001f8   Data           4  timeouts.o(.bss.current_timeout_due_time)
    [Anonymous Symbol]                       0x201001f8   Section        0  timeouts.o(.bss.current_timeout_due_time)
    etharp_cached_entry                      0x201001fc   Data           1  etharp.o(.bss.etharp_cached_entry)
    [Anonymous Symbol]                       0x201001fc   Section        0  etharp.o(.bss.etharp_cached_entry)
    flags                                    0x201001fd   Data           1  tcp_in.o(.bss.flags)
    [Anonymous Symbol]                       0x201001fd   Section        0  tcp_in.o(.bss.flags)
    inseg                                    0x201002f8   Data          16  tcp_in.o(.bss.inseg)
    [Anonymous Symbol]                       0x201002f8   Section        0  tcp_in.o(.bss.inseg)
    ip4addr_ntoa.str                         0x20100308   Data          16  ip4_addr.o(.bss.ip4addr_ntoa.str)
    [Anonymous Symbol]                       0x20100308   Section        0  ip4_addr.o(.bss.ip4addr_ntoa.str)
    ip_id                                    0x20100330   Data           2  ip4.o(.bss.ip_id)
    [Anonymous Symbol]                       0x20100330   Section        0  ip4.o(.bss.ip_id)
    ip_reass_pbufcount                       0x20100332   Data           2  ip4_frag.o(.bss.ip_reass_pbufcount)
    [Anonymous Symbol]                       0x20100332   Section        0  ip4_frag.o(.bss.ip_reass_pbufcount)
    lfree                                    0x20100334   Data           4  mem.o(.bss.lfree)
    [Anonymous Symbol]                       0x20100334   Section        0  mem.o(.bss.lfree)
    mem_mutex                                0x2010033c   Data           4  mem.o(.bss.mem_mutex)
    [Anonymous Symbol]                       0x2010033c   Section        0  mem.o(.bss.mem_mutex)
    memp_tab_FRAG_PBUF                       0x201099d0   Data           4  memp.o(.bss.memp_tab_FRAG_PBUF)
    [Anonymous Symbol]                       0x201099d0   Section        0  memp.o(.bss.memp_tab_FRAG_PBUF)
    memp_tab_NETBUF                          0x201099d4   Data           4  memp.o(.bss.memp_tab_NETBUF)
    [Anonymous Symbol]                       0x201099d4   Section        0  memp.o(.bss.memp_tab_NETBUF)
    memp_tab_NETCONN                         0x201099d8   Data           4  memp.o(.bss.memp_tab_NETCONN)
    [Anonymous Symbol]                       0x201099d8   Section        0  memp.o(.bss.memp_tab_NETCONN)
    memp_tab_PBUF                            0x201099dc   Data           4  memp.o(.bss.memp_tab_PBUF)
    [Anonymous Symbol]                       0x201099dc   Section        0  memp.o(.bss.memp_tab_PBUF)
    memp_tab_PBUF_POOL                       0x201099e0   Data           4  memp.o(.bss.memp_tab_PBUF_POOL)
    [Anonymous Symbol]                       0x201099e0   Section        0  memp.o(.bss.memp_tab_PBUF_POOL)
    memp_tab_REASSDATA                       0x201099e4   Data           4  memp.o(.bss.memp_tab_REASSDATA)
    [Anonymous Symbol]                       0x201099e4   Section        0  memp.o(.bss.memp_tab_REASSDATA)
    memp_tab_SYS_TIMEOUT                     0x201099e8   Data           4  memp.o(.bss.memp_tab_SYS_TIMEOUT)
    [Anonymous Symbol]                       0x201099e8   Section        0  memp.o(.bss.memp_tab_SYS_TIMEOUT)
    memp_tab_TCPIP_MSG_API                   0x201099ec   Data           4  memp.o(.bss.memp_tab_TCPIP_MSG_API)
    [Anonymous Symbol]                       0x201099ec   Section        0  memp.o(.bss.memp_tab_TCPIP_MSG_API)
    memp_tab_TCPIP_MSG_INPKT                 0x201099f0   Data           4  memp.o(.bss.memp_tab_TCPIP_MSG_INPKT)
    [Anonymous Symbol]                       0x201099f0   Section        0  memp.o(.bss.memp_tab_TCPIP_MSG_INPKT)
    memp_tab_TCP_PCB                         0x201099f4   Data           4  memp.o(.bss.memp_tab_TCP_PCB)
    [Anonymous Symbol]                       0x201099f4   Section        0  memp.o(.bss.memp_tab_TCP_PCB)
    memp_tab_TCP_PCB_LISTEN                  0x201099f8   Data           4  memp.o(.bss.memp_tab_TCP_PCB_LISTEN)
    [Anonymous Symbol]                       0x201099f8   Section        0  memp.o(.bss.memp_tab_TCP_PCB_LISTEN)
    memp_tab_TCP_SEG                         0x201099fc   Data           4  memp.o(.bss.memp_tab_TCP_SEG)
    [Anonymous Symbol]                       0x201099fc   Section        0  memp.o(.bss.memp_tab_TCP_SEG)
    memp_tab_UDP_PCB                         0x20109a00   Data           4  memp.o(.bss.memp_tab_UDP_PCB)
    [Anonymous Symbol]                       0x20109a00   Section        0  memp.o(.bss.memp_tab_UDP_PCB)
    memp_tab_emac_rx                         0x20109a04   Data           4  emac.o(.bss.memp_tab_emac_rx)
    [Anonymous Symbol]                       0x20109a04   Section        0  emac.o(.bss.memp_tab_emac_rx)
    netif_num                                0x20109a40   Data           1  netif.o(.bss.netif_num)
    [Anonymous Symbol]                       0x20109a40   Section        0  netif.o(.bss.netif_num)
    next_timeout                             0x20109a44   Data           4  timeouts.o(.bss.next_timeout)
    [Anonymous Symbol]                       0x20109a44   Section        0  timeouts.o(.bss.next_timeout)
    prvChangeRelativePriorities.ePriorities  0x20109a49   Data           1  QueueSet.o(.bss.prvChangeRelativePriorities.ePriorities)
    [Anonymous Symbol]                       0x20109a49   Section        0  QueueSet.o(.bss.prvChangeRelativePriorities.ePriorities)
    prvChangeRelativePriorities.ulLoops      0x20109a4c   Data           4  QueueSet.o(.bss.prvChangeRelativePriorities.ulLoops)
    [Anonymous Symbol]                       0x20109a4c   Section        0  QueueSet.o(.bss.prvChangeRelativePriorities.ulLoops)
    prvCheckReceivedValue.ulExpectedReceivedFromTask 0x20109a50   Data           4  QueueSet.o(.bss.prvCheckReceivedValue.ulExpectedReceivedFromTask)
    [Anonymous Symbol]                       0x20109a50   Section        0  QueueSet.o(.bss.prvCheckReceivedValue.ulExpectedReceivedFromTask)
    prvSampleTimeNow.xLastTime               0x20109a54   Data           4  timers.o(.bss.prvSampleTimeNow.xLastTime)
    [Anonymous Symbol]                       0x20109a54   Section        0  timers.o(.bss.prvSampleTimeNow.xLastTime)
    prvSendToQueueInSetFromISR.xQueueToWriteTo 0x20109a58   Data           4  QueueSet.o(.bss.prvSendToQueueInSetFromISR.xQueueToWriteTo)
    [Anonymous Symbol]                       0x20109a58   Section        0  QueueSet.o(.bss.prvSendToQueueInSetFromISR.xQueueToWriteTo)
    pvPortMalloc.xHeapHasBeenInitialised     0x20109a5c   Data           1  heap_2.o(.bss.pvPortMalloc.xHeapHasBeenInitialised)
    [Anonymous Symbol]                       0x20109a5c   Section        0  heap_2.o(.bss.pvPortMalloc.xHeapHasBeenInitialised)
    __tagsym$$used.1                         0x20109a60   Number         0  tasks.o(.bss.pxCurrentTCB)
    pxCurrentTimerList                       0x20109a64   Data           4  timers.o(.bss.pxCurrentTimerList)
    [Anonymous Symbol]                       0x20109a64   Section        0  timers.o(.bss.pxCurrentTimerList)
    pxDelayedTaskList                        0x20109a68   Data           4  tasks.o(.bss.pxDelayedTaskList)
    [Anonymous Symbol]                       0x20109a68   Section        0  tasks.o(.bss.pxDelayedTaskList)
    pxOverflowDelayedTaskList                0x20109a6c   Data           4  tasks.o(.bss.pxOverflowDelayedTaskList)
    [Anonymous Symbol]                       0x20109a6c   Section        0  tasks.o(.bss.pxOverflowDelayedTaskList)
    pxOverflowTimerList                      0x20109a70   Data           4  timers.o(.bss.pxOverflowTimerList)
    [Anonymous Symbol]                       0x20109a70   Section        0  timers.o(.bss.pxOverflowTimerList)
    pxReadyTasksLists                        0x20109a74   Data         160  tasks.o(.bss.pxReadyTasksLists)
    [Anonymous Symbol]                       0x20109a74   Section        0  tasks.o(.bss.pxReadyTasksLists)
    ram                                      0x20109b14   Data           4  mem.o(.bss.ram)
    [Anonymous Symbol]                       0x20109b14   Section        0  mem.o(.bss.ram)
    ram_end                                  0x20109b18   Data           4  mem.o(.bss.ram_end)
    [Anonymous Symbol]                       0x20109b18   Section        0  mem.o(.bss.ram_end)
    reassdatagrams                           0x20111060   Data           4  ip4_frag.o(.bss.reassdatagrams)
    [Anonymous Symbol]                       0x20111060   Section        0  ip4_frag.o(.bss.reassdatagrams)
    recv_acked                               0x20111064   Data           2  tcp_in.o(.bss.recv_acked)
    [Anonymous Symbol]                       0x20111064   Section        0  tcp_in.o(.bss.recv_acked)
    recv_data                                0x20111068   Data           4  tcp_in.o(.bss.recv_data)
    [Anonymous Symbol]                       0x20111068   Section        0  tcp_in.o(.bss.recv_data)
    recv_flags                               0x2011106c   Data           1  tcp_in.o(.bss.recv_flags)
    [Anonymous Symbol]                       0x2011106c   Section        0  tcp_in.o(.bss.recv_flags)
    sCheckVariables                          0x2011106e   Data           8  semtest.o(.bss.sCheckVariables)
    [Anonymous Symbol]                       0x2011106e   Section        0  semtest.o(.bss.sCheckVariables)
    sNextCheckVariable                       0x20111076   Data           2  semtest.o(.bss.sNextCheckVariable)
    [Anonymous Symbol]                       0x20111076   Section        0  semtest.o(.bss.sNextCheckVariable)
    seqno                                    0x20111078   Data           4  tcp_in.o(.bss.seqno)
    [Anonymous Symbol]                       0x20111078   Section        0  tcp_in.o(.bss.seqno)
    tcp_timer                                0x20111094   Data           1  tcp.o(.bss.tcp_timer)
    [Anonymous Symbol]                       0x20111094   Section        0  tcp.o(.bss.tcp_timer)
    tcp_timer_ctr                            0x20111095   Data           1  tcp.o(.bss.tcp_timer_ctr)
    [Anonymous Symbol]                       0x20111095   Section        0  tcp.o(.bss.tcp_timer_ctr)
    tcphdr                                   0x2011109c   Data           4  tcp_in.o(.bss.tcphdr)
    [Anonymous Symbol]                       0x2011109c   Section        0  tcp_in.o(.bss.tcphdr)
    tcphdr_opt1len                           0x201110a0   Data           2  tcp_in.o(.bss.tcphdr_opt1len)
    [Anonymous Symbol]                       0x201110a0   Section        0  tcp_in.o(.bss.tcphdr_opt1len)
    tcphdr_opt2                              0x201110a4   Data           4  tcp_in.o(.bss.tcphdr_opt2)
    [Anonymous Symbol]                       0x201110a4   Section        0  tcp_in.o(.bss.tcphdr_opt2)
    tcphdr_optlen                            0x201110a8   Data           2  tcp_in.o(.bss.tcphdr_optlen)
    [Anonymous Symbol]                       0x201110a8   Section        0  tcp_in.o(.bss.tcphdr_optlen)
    tcpip_init_done                          0x201110ac   Data           4  tcpip.o(.bss.tcpip_init_done)
    [Anonymous Symbol]                       0x201110ac   Section        0  tcpip.o(.bss.tcpip_init_done)
    tcpip_init_done_arg                      0x201110b0   Data           4  tcpip.o(.bss.tcpip_init_done_arg)
    [Anonymous Symbol]                       0x201110b0   Section        0  tcpip.o(.bss.tcpip_init_done_arg)
    tcpip_mbox                               0x201110b4   Data           4  tcpip.o(.bss.tcpip_mbox)
    [Anonymous Symbol]                       0x201110b4   Section        0  tcpip.o(.bss.tcpip_mbox)
    tcpip_tcp_timer_active                   0x201110b8   Data           1  timeouts.o(.bss.tcpip_tcp_timer_active)
    [Anonymous Symbol]                       0x201110b8   Section        0  timeouts.o(.bss.tcpip_tcp_timer_active)
    tcplen                                   0x201110ba   Data           2  tcp_in.o(.bss.tcplen)
    [Anonymous Symbol]                       0x201110ba   Section        0  tcp_in.o(.bss.tcplen)
    ucHeap                                   0x201110bc   Data       51200  heap_2.o(.bss.ucHeap)
    [Anonymous Symbol]                       0x201110bc   Section        0  heap_2.o(.bss.ucHeap)
    ulCycleCounter                           0x2011d8c0   Data           4  QueueSet.o(.bss.ulCycleCounter)
    [Anonymous Symbol]                       0x2011d8c0   Section        0  QueueSet.o(.bss.ulCycleCounter)
    ulGuardedVariable                        0x2011d8c4   Data           4  GenQTest.o(.bss.ulGuardedVariable)
    [Anonymous Symbol]                       0x2011d8c4   Section        0  GenQTest.o(.bss.ulGuardedVariable)
    ulLoopCounter                            0x2011d8c8   Data           4  GenQTest.o(.bss.ulLoopCounter)
    [Anonymous Symbol]                       0x2011d8c8   Section        0  GenQTest.o(.bss.ulLoopCounter)
    ulLoopCounter2                           0x2011d8cc   Data           4  GenQTest.o(.bss.ulLoopCounter2)
    [Anonymous Symbol]                       0x2011d8cc   Section        0  GenQTest.o(.bss.ulLoopCounter2)
    ulQueueUsedCounter                       0x2011d8d0   Data          12  QueueSet.o(.bss.ulQueueUsedCounter)
    [Anonymous Symbol]                       0x2011d8d0   Section        0  QueueSet.o(.bss.ulQueueUsedCounter)
    ulStoppedTimerCompensation               0x2011d8dc   Data           1  port.o(.bss.ulStoppedTimerCompensation)
    [Anonymous Symbol]                       0x2011d8dc   Section        0  port.o(.bss.ulStoppedTimerCompensation)
    ulTimerCountsForOneTick                  0x2011d8e0   Data           1  port.o(.bss.ulTimerCountsForOneTick)
    [Anonymous Symbol]                       0x2011d8e0   Section        0  port.o(.bss.ulTimerCountsForOneTick)
    uxCurrentNumberOfTasks                   0x2011d8e4   Data           4  tasks.o(.bss.uxCurrentNumberOfTasks)
    [Anonymous Symbol]                       0x2011d8e4   Section        0  tasks.o(.bss.uxCurrentNumberOfTasks)
    uxDeletedTasksWaitingCleanUp             0x2011d8e8   Data           4  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    [Anonymous Symbol]                       0x2011d8e8   Section        0  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    uxNextRand                               0x2011d8ec   Data           4  QueueSet.o(.bss.uxNextRand)
    [Anonymous Symbol]                       0x2011d8ec   Section        0  QueueSet.o(.bss.uxNextRand)
    uxSchedulerSuspended                     0x2011d8f0   Data           4  tasks.o(.bss.uxSchedulerSuspended)
    [Anonymous Symbol]                       0x2011d8f0   Section        0  tasks.o(.bss.uxSchedulerSuspended)
    uxTaskNumber                             0x2011d8f4   Data           4  tasks.o(.bss.uxTaskNumber)
    [Anonymous Symbol]                       0x2011d8f4   Section        0  tasks.o(.bss.uxTaskNumber)
    uxTopReadyPriority                       0x2011d8f8   Data           4  tasks.o(.bss.uxTopReadyPriority)
    [Anonymous Symbol]                       0x2011d8f8   Section        0  tasks.o(.bss.uxTopReadyPriority)
    vQueueSetAccessQueueSetFromISR.ulCallCount 0x2011d8fc   Data           4  QueueSet.o(.bss.vQueueSetAccessQueueSetFromISR.ulCallCount)
    [Anonymous Symbol]                       0x2011d8fc   Section        0  QueueSet.o(.bss.vQueueSetAccessQueueSetFromISR.ulCallCount)
    vStartPolledQueueTasks.xPolledQueue      0x2011d900   Data           4  PollQ.o(.bss.vStartPolledQueueTasks.xPolledQueue)
    [Anonymous Symbol]                       0x2011d900   Section        0  PollQ.o(.bss.vStartPolledQueueTasks.xPolledQueue)
    xActiveTimerList1                        0x2011d904   Data          20  timers.o(.bss.xActiveTimerList1)
    [Anonymous Symbol]                       0x2011d904   Section        0  timers.o(.bss.xActiveTimerList1)
    xActiveTimerList2                        0x2011d918   Data          20  timers.o(.bss.xActiveTimerList2)
    [Anonymous Symbol]                       0x2011d918   Section        0  timers.o(.bss.xActiveTimerList2)
    xBlockWasAborted                         0x2011d92c   Data           4  GenQTest.o(.bss.xBlockWasAborted)
    [Anonymous Symbol]                       0x2011d92c   Section        0  GenQTest.o(.bss.xBlockWasAborted)
    xDelayedTaskList1                        0x2011d930   Data          20  tasks.o(.bss.xDelayedTaskList1)
    [Anonymous Symbol]                       0x2011d930   Section        0  tasks.o(.bss.xDelayedTaskList1)
    xDelayedTaskList2                        0x2011d944   Data          20  tasks.o(.bss.xDelayedTaskList2)
    [Anonymous Symbol]                       0x2011d944   Section        0  tasks.o(.bss.xDelayedTaskList2)
    xEnd                                     0x2011d958   Data           8  heap_2.o(.bss.xEnd)
    [Anonymous Symbol]                       0x2011d958   Section        0  heap_2.o(.bss.xEnd)
    xErrorDetected                           0x2011d960   Data           4  GenQTest.o(.bss.xErrorDetected)
    [Anonymous Symbol]                       0x2011d960   Section        0  GenQTest.o(.bss.xErrorDetected)
    xHighPriorityMutexTask                   0x2011d964   Data           4  GenQTest.o(.bss.xHighPriorityMutexTask)
    [Anonymous Symbol]                       0x2011d964   Section        0  GenQTest.o(.bss.xHighPriorityMutexTask)
    xIdleTaskHandle                          0x2011d968   Data           4  tasks.o(.bss.xIdleTaskHandle)
    [Anonymous Symbol]                       0x2011d968   Section        0  tasks.o(.bss.xIdleTaskHandle)
    xMaximumPossibleSuppressedTicks          0x2011d96c   Data           1  port.o(.bss.xMaximumPossibleSuppressedTicks)
    [Anonymous Symbol]                       0x2011d96c   Section        0  port.o(.bss.xMaximumPossibleSuppressedTicks)
    xMediumPriorityMutexTask                 0x2011d970   Data           4  GenQTest.o(.bss.xMediumPriorityMutexTask)
    [Anonymous Symbol]                       0x2011d970   Section        0  GenQTest.o(.bss.xMediumPriorityMutexTask)
    xNextTaskUnblockTime                     0x2011d974   Data           4  tasks.o(.bss.xNextTaskUnblockTime)
    [Anonymous Symbol]                       0x2011d974   Section        0  tasks.o(.bss.xNextTaskUnblockTime)
    xNumOfOverflows                          0x2011d978   Data           4  tasks.o(.bss.xNumOfOverflows)
    [Anonymous Symbol]                       0x2011d978   Section        0  tasks.o(.bss.xNumOfOverflows)
    xPendedTicks                             0x2011d97c   Data           4  tasks.o(.bss.xPendedTicks)
    [Anonymous Symbol]                       0x2011d97c   Section        0  tasks.o(.bss.xPendedTicks)
    xPendingReadyList                        0x2011d980   Data          20  tasks.o(.bss.xPendingReadyList)
    [Anonymous Symbol]                       0x2011d980   Section        0  tasks.o(.bss.xPendingReadyList)
    xPollingConsumerCount                    0x2011d994   Data           4  PollQ.o(.bss.xPollingConsumerCount)
    [Anonymous Symbol]                       0x2011d994   Section        0  PollQ.o(.bss.xPollingConsumerCount)
    xPollingProducerCount                    0x2011d998   Data           4  PollQ.o(.bss.xPollingProducerCount)
    [Anonymous Symbol]                       0x2011d998   Section        0  PollQ.o(.bss.xPollingProducerCount)
    xQueueSet                                0x2011d9dc   Data           4  QueueSet.o(.bss.xQueueSet)
    [Anonymous Symbol]                       0x2011d9dc   Section        0  QueueSet.o(.bss.xQueueSet)
    xQueues                                  0x2011d9e8   Data          12  QueueSet.o(.bss.xQueues)
    [Anonymous Symbol]                       0x2011d9e8   Section        0  QueueSet.o(.bss.xQueues)
    xSchedulerRunning                        0x2011d9fc   Data           4  tasks.o(.bss.xSchedulerRunning)
    [Anonymous Symbol]                       0x2011d9fc   Section        0  tasks.o(.bss.xSchedulerRunning)
    xSetupComplete                           0x2011da00   Data           4  QueueSet.o(.bss.xSetupComplete)
    [Anonymous Symbol]                       0x2011da00   Section        0  QueueSet.o(.bss.xSetupComplete)
    xStart                                   0x2011da04   Data           8  heap_2.o(.bss.xStart)
    [Anonymous Symbol]                       0x2011da04   Section        0  heap_2.o(.bss.xStart)
    xSuspendedTaskList                       0x2011da0c   Data          20  tasks.o(.bss.xSuspendedTaskList)
    [Anonymous Symbol]                       0x2011da0c   Section        0  tasks.o(.bss.xSuspendedTaskList)
    xTasksWaitingTermination                 0x2011da20   Data          20  tasks.o(.bss.xTasksWaitingTermination)
    [Anonymous Symbol]                       0x2011da20   Section        0  tasks.o(.bss.xTasksWaitingTermination)
    xTickCount                               0x2011da34   Data           4  tasks.o(.bss.xTickCount)
    [Anonymous Symbol]                       0x2011da34   Section        0  tasks.o(.bss.xTickCount)
    xTimerQueue                              0x2011da38   Data           4  timers.o(.bss.xTimerQueue)
    [Anonymous Symbol]                       0x2011da38   Section        0  timers.o(.bss.xTimerQueue)
    xTimerTaskHandle                         0x2011da3c   Data           4  timers.o(.bss.xTimerTaskHandle)
    [Anonymous Symbol]                       0x2011da3c   Section        0  timers.o(.bss.xTimerTaskHandle)
    xYieldPending                            0x2011da40   Data           4  tasks.o(.bss.xYieldPending)
    [Anonymous Symbol]                       0x2011da40   Section        0  tasks.o(.bss.xYieldPending)
    tx_desc                                  0x20230000   Data         512  emac.o(.bss.NonCacheable.ZeroInit)
    [Anonymous Symbol]                       0x20230000   Section        0  emac.o(.bss.NonCacheable.ZeroInit)
    rx_desc                                  0x20230200   Data        1024  emac.o(.bss.NonCacheable.ZeroInit)
    rx_buf                                   0x20230600   Data       49152  emac.o(.bss.NonCacheable.ZeroInit)
    tx_buf                                   0x2023c600   Data       24576  emac.o(.bss.NonCacheable.ZeroInit)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$v8.1M$VFPv5_D16_FP16$PE$MVEf$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    EMAC0_IRQHandler                         0x00000001   Thumb Code   448  emac.o(ITCM)
    _printf_a                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_c                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_charcount                        0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_d                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_e                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_f                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_flags                            0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_fp_dec                           0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_fp_hex                           0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_g                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_i                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_int_dec                          0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_l                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_lc                               0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_ll                               0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_lld                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_lli                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_llo                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_llu                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_llx                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_longlong_dec                     0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_longlong_hex                     0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_longlong_oct                     0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_ls                               0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_mbtowc                           0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_n                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_o                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_p                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_percent                          0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_pre_padding                      0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_return_value                     0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_s                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_sizespec                         0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_str                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_truncate_signed                  0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_truncate_unsigned                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_u                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_wc                               0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_wctomb                           0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_widthprec                        0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_x                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __Vectors                                0x00100000   Data          32  startup_M55M1.o(RESET)
    __main                                   0x00100021   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x00100021   Thumb Code     0  entry4.o(.ARM.Collect$$$$00000003)
    _main_scatterload                        0x00100025   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x00100029   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x00100029   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init$empty                     0x00100029   Thumb Code     0  entry8a.o(.ARM.Collect$$$$00000009)
    _main_cpp_init                           0x0010002d   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x0010002d   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x00100035   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x00100035   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    ___aeabi_memcpy4$move                    0x00100039   Thumb Code     0  memmovea.o(.text)
    ___aeabi_memcpy8$move                    0x00100039   Thumb Code     0  memmovea.o(.text)
    __aeabi_memcpy                           0x00100039   Thumb Code    64  memmovea.o(.text)
    __aeabi_memmove                          0x00100039   Thumb Code     0  memmovea.o(.text)
    __aeabi_memmove4                         0x00100039   Thumb Code     0  memmovea.o(.text)
    __aeabi_memmove8                         0x00100039   Thumb Code     0  memmovea.o(.text)
    __aeabi_memset                           0x00100079   Thumb Code    14  memseta.o(.text)
    __aeabi_memset4                          0x00100079   Thumb Code     0  memseta.o(.text)
    __aeabi_memset8                          0x00100079   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr                           0x00100087   Thumb Code     4  memseta.o(.text)
    __aeabi_memclr4                          0x00100087   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr8                          0x00100087   Thumb Code     0  memseta.o(.text)
    _memset$wrapper                          0x0010008b   Thumb Code    18  memseta.o(.text)
    strcmp                                   0x0010009d   Thumb Code    28  strcmp.o(.text)
    memcmp                                   0x001000b9   Thumb Code    26  memcmp.o(.text)
    strncmp                                  0x001000d3   Thumb Code    30  strncmp.o(.text)
    __cpp_initialize__aeabi_                 0x001000f1   Thumb Code    32  cpp_init.o(.text)
    __aeabi_uldivmod                         0x00100119   Thumb Code    98  uldiv.o(.text)
    __scatterload                            0x0010017d   Thumb Code    38  init.o(.text)
    __scatterload_rt2                        0x0010017d   Thumb Code     0  init.o(.text)
    __aeabi_llsl                             0x001001ad   Thumb Code    30  llshl.o(.text)
    _ll_shift_l                              0x001001ad   Thumb Code     0  llshl.o(.text)
    __aeabi_llsr                             0x001001cb   Thumb Code    32  llushr.o(.text)
    _ll_ushift_r                             0x001001cb   Thumb Code     0  llushr.o(.text)
    CLK_EnableAPLL                           0x001001ed   Thumb Code   674  clk.o(.text.CLK_EnableAPLL)
    CLK_EnableModuleClock                    0x00100491   Thumb Code    36  clk.o(.text.CLK_EnableModuleClock)
    CLK_EnableXtalRC                         0x001004b5   Thumb Code    16  clk.o(.text.CLK_EnableXtalRC)
    CLK_GetAPLL0ClockFreq                    0x001004c5   Thumb Code   130  clk.o(.text.CLK_GetAPLL0ClockFreq)
    CLK_SetBusClock                          0x00100549   Thumb Code   280  clk.o(.text.CLK_SetBusClock)
    CLK_SetModuleClock                       0x00100661   Thumb Code   110  clk.o(.text.CLK_SetModuleClock)
    CLK_SetSCLK                              0x001006d1   Thumb Code   704  clk.o(.text.CLK_SetSCLK)
    CLK_SystemClockUpdate                    0x00100991   Thumb Code   196  clk.o(.text.CLK_SystemClockUpdate)
    CLK_WaitClockReady                       0x00100a69   Thumb Code    42  clk.o(.text.CLK_WaitClockReady)
    ACMP01_IRQHandler                        0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    ACMP23_IRQHandler                        0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    AWF_IRQHandler                           0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    BODOUT_IRQHandler                        0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    BPWM0_IRQHandler                         0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    BPWM1_IRQHandler                         0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    BRAKE0_IRQHandler                        0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    BRAKE1_IRQHandler                        0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    BusFault_Handler                         0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    CANFD00_IRQHandler                       0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    CANFD01_IRQHandler                       0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    CANFD10_IRQHandler                       0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    CANFD11_IRQHandler                       0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    CCAP_IRQHandler                          0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    CKFAIL_IRQHandler                        0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    CRC_IRQHandler                           0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    CRYPTO_IRQHandler                        0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    DAC01_IRQHandler                         0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    DMIC0VAD_IRQHandler                      0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    DMIC0_IRQHandler                         0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    DebugMon_Handler                         0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    Default_Handler                          0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    EADC00_IRQHandler                        0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    EADC01_IRQHandler                        0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    EADC02_IRQHandler                        0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    EADC03_IRQHandler                        0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    ECAP0_IRQHandler                         0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    ECAP1_IRQHandler                         0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    ECAP2_IRQHandler                         0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    ECAP3_IRQHandler                         0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    EINT0_IRQHandler                         0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    EINT1_IRQHandler                         0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    EINT2_IRQHandler                         0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    EINT3_IRQHandler                         0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    EINT4_IRQHandler                         0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    EINT5_IRQHandler                         0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    EINT6_IRQHandler                         0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    EINT7_IRQHandler                         0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    EPWM0P0_IRQHandler                       0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    EPWM0P1_IRQHandler                       0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    EPWM0P2_IRQHandler                       0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    EPWM1P0_IRQHandler                       0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    EPWM1P1_IRQHandler                       0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    EPWM1P2_IRQHandler                       0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    EQEI0_IRQHandler                         0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    EQEI1_IRQHandler                         0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    EQEI2_IRQHandler                         0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    EQEI3_IRQHandler                         0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    GDMACH0_IRQHandler                       0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    GDMACH1_IRQHandler                       0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    GPA_IRQHandler                           0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    GPB_IRQHandler                           0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    GPC_IRQHandler                           0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    GPD_IRQHandler                           0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    GPE_IRQHandler                           0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    GPF_IRQHandler                           0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    GPG_IRQHandler                           0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    GPH_IRQHandler                           0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    GPI_IRQHandler                           0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    GPJ_IRQHandler                           0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    HSOTG_IRQHandler                         0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    HSUSBD_IRQHandler                        0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    HSUSBH_IRQHandler                        0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    I2C0_IRQHandler                          0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    I2C1_IRQHandler                          0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    I2C2_IRQHandler                          0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    I2C3_IRQHandler                          0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    I2S0_IRQHandler                          0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    I2S1_IRQHandler                          0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    I3C0_IRQHandler                          0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    IRC_IRQHandler                           0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    ISP_IRQHandler                           0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    KPI_IRQHandler                           0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    KS_IRQHandler                            0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    LPADC0_IRQHandler                        0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    LPI2C0_IRQHandler                        0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    LPPDMA_IRQHandler                        0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    LPSPI0_IRQHandler                        0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    LPTMR0_IRQHandler                        0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    LPTMR1_IRQHandler                        0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    LPUART0_IRQHandler                       0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    MemManage_Handler                        0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    NMI_Handler                              0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    NPU_IRQHandler                           0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    OTFC0_IRQHandler                         0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    PDMA0_IRQHandler                         0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    PDMA1_IRQHandler                         0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    PMC_IRQHandler                           0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    PSIO_IRQHandler                          0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    QSPI0_IRQHandler                         0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    QSPI1_IRQHandler                         0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    RTCTAMPER_IRQHandler                     0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    RTC_IRQHandler                           0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    SC0_IRQHandler                           0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    SC1_IRQHandler                           0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    SC2_IRQHandler                           0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    SCU_IRQHandler                           0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    SDH0_IRQHandler                          0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    SDH1_IRQHandler                          0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    SPI0_IRQHandler                          0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    SPI1_IRQHandler                          0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    SPI2_IRQHandler                          0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    SPI3_IRQHandler                          0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    SPIM0_IRQHandler                         0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    SRAMPERR_IRQHandler                      0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    SecureFault_Handler                      0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    TIMER0_IRQHandler                        0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    TIMER1_IRQHandler                        0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    TIMER2_IRQHandler                        0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    TIMER3_IRQHandler                        0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    TRNG_IRQHandler                          0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    TTMR0_IRQHandler                         0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    TTMR1_IRQHandler                         0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    UART0_IRQHandler                         0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    UART1_IRQHandler                         0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    UART2_IRQHandler                         0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    UART3_IRQHandler                         0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    UART4_IRQHandler                         0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    UART5_IRQHandler                         0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    UART6_IRQHandler                         0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    UART7_IRQHandler                         0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    UART8_IRQHandler                         0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    UART9_IRQHandler                         0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    USBD_IRQHandler                          0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    USBH0_IRQHandler                         0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    USBH1_IRQHandler                         0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    USBOTG_IRQHandler                        0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    USCI0_IRQHandler                         0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    UTCPD_IRQHandler                         0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    UsageFault_Handler                       0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    WDT0_IRQHandler                          0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    WDT1_IRQHandler                          0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    WWDT0_IRQHandler                         0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    WWDT1_IRQHandler                         0x00100a95   Thumb Code     2  startup_M55M1.o(.text.Default_Handler)
    EMAC_AllocatePktBuf                      0x00100a99   Thumb Code    28  emac.o(.text.EMAC_AllocatePktBuf)
    EMAC_Open                                0x00100ab5   Thumb Code   436  emac.o(.text.EMAC_Open)
    EMAC_ReceivePkt                          0x00100cb5   Thumb Code   144  emac.o(.text.EMAC_ReceivePkt)
    EMAC_TransmitPkt                         0x00100d89   Thumb Code    68  emac.o(.text.EMAC_TransmitPkt)
    GPIO_SetMode                             0x00100dcd   Thumb Code    60  gpio.o(.text.GPIO_SetMode)
    GPIO_SetSlewCtl                          0x00100e09   Thumb Code    60  gpio.o(.text.GPIO_SetSlewCtl)
    HardFault_Handler                        0x00100e45   Thumb Code    26  startup_M55M1.o(.text.HardFault_Handler)
    InitDebugUart                            0x00100e61   Thumb Code    16  system_M55M1.o(.text.InitDebugUart)
    InitPreDefMPURegion                      0x00100e71   Thumb Code   668  system_M55M1.o(.text.InitPreDefMPURegion)
    PendSV_Handler                           0x00101111   Thumb Code   100  portasm.o(.text.PendSV_Handler)
    ProcessHardFault                         0x00101175   Thumb Code   328  retarget.o(.text.ProcessHardFault)
    Reset_Handler                            0x00101335   Thumb Code   452  startup_M55M1.o(.text.Reset_Handler)
    Reset_Handler_PreInit                    0x001014f9   Thumb Code    26  startup_M55M1.o(.text.Reset_Handler_PreInit)
    SVC_Handler                              0x00101521   Thumb Code    36  portasm.o(.text.SVC_Handler)
    SYS_ResetModule                          0x00101545   Thumb Code    34  sys.o(.text.SYS_ResetModule)
    SetDebugUartCLK                          0x00101569   Thumb Code    62  system_M55M1.o(.text.SetDebugUartCLK)
    SetDebugUartMFP                          0x001015a9   Thumb Code    28  system_M55M1.o(.text.SetDebugUartMFP)
    SysTick_Handler                          0x001015c5   Thumb Code    40  port.o(.text.SysTick_Handler)
    SystemCoreClockUpdate                    0x001015ed   Thumb Code    50  system_M55M1.o(.text.SystemCoreClockUpdate)
    SystemInit                               0x00101621   Thumb Code   124  system_M55M1.o(.text.SystemInit)
    UART_Open                                0x0010169d   Thumb Code   510  uart.o(.text.UART_Open)
    eTaskConfirmSleepModeStatus              0x00101a01   Thumb Code    72  tasks.o(.text.eTaskConfirmSleepModeStatus)
    eTaskGetState                            0x00101a49   Thumb Code   142  tasks.o(.text.eTaskGetState)
    etharp_input                             0x00101ef5   Thumb Code   344  etharp.o(.text.etharp_input)
    etharp_output                            0x00102071   Thumb Code   374  etharp.o(.text.etharp_output)
    etharp_query                             0x001022d5   Thumb Code   452  etharp.o(.text.etharp_query)
    etharp_request                           0x00102619   Thumb Code    50  etharp.o(.text.etharp_request)
    etharp_tmr                               0x0010264d   Thumb Code   174  etharp.o(.text.etharp_tmr)
    ethernet_input                           0x001026fd   Thumb Code   172  ethernet.o(.text.ethernet_input)
    ethernet_output                          0x001027a9   Thumb Code   108  ethernet.o(.text.ethernet_output)
    ethernetif_init                          0x00102871   Thumb Code   196  ethernetif.o(.text.ethernetif_init)
    fputc                                    0x00102975   Thumb Code    38  retarget.o(.text.fputc)
    fs_close                                 0x0010299d   Thumb Code    32  fs.o(.text.fs_close)
    fs_open                                  0x001029bd   Thumb Code   128  fs.o(.text.fs_open)
    http_server_netconn_init                 0x00102a3d   Thumb Code    36  httpserver-netconn.o(.text.http_server_netconn_init)
    http_server_serve                        0x00102aed   Thumb Code   160  httpserver-netconn.o(.text.http_server_serve)
    icmp_dest_unreach                        0x00102bd5   Thumb Code     8  icmp.o(.text.icmp_dest_unreach)
    icmp_input                               0x00102bdd   Thumb Code   388  icmp.o(.text.icmp_input)
    icmp_time_exceeded                       0x00102e91   Thumb Code     8  icmp.o(.text.icmp_time_exceeded)
    inet_chksum                              0x00102e99   Thumb Code   114  inet_chksum.o(.text.inet_chksum)
    inet_chksum_pbuf                         0x00102f0d   Thumb Code   204  inet_chksum.o(.text.inet_chksum_pbuf)
    inet_chksum_pseudo                       0x00102fd9   Thumb Code   266  inet_chksum.o(.text.inet_chksum_pseudo)
    ip4_addr_isbroadcast_u32                 0x001030e5   Thumb Code    48  ip4_addr.o(.text.ip4_addr_isbroadcast_u32)
    ip4_frag                                 0x00103115   Thumb Code   528  ip4_frag.o(.text.ip4_frag)
    ip4_input                                0x00103371   Thumb Code   442  ip4.o(.text.ip4_input)
    ip4_output_if                            0x0010352d   Thumb Code    38  ip4.o(.text.ip4_output_if)
    ip4_output_if_src                        0x00103555   Thumb Code   300  ip4.o(.text.ip4_output_if_src)
    ip4_reass                                0x001036b1   Thumb Code  1576  ip4_frag.o(.text.ip4_reass)
    ip4_route                                0x00103d65   Thumb Code   112  ip4.o(.text.ip4_route)
    ip4addr_ntoa                             0x00103dd5   Thumb Code   190  ip4_addr.o(.text.ip4addr_ntoa)
    ip_chksum_pseudo                         0x00103e95   Thumb Code    12  inet_chksum.o(.text.ip_chksum_pseudo)
    ip_reass_tmr                             0x0010404d   Thumb Code    58  ip4_frag.o(.text.ip_reass_tmr)
    lwip_htonl                               0x00104201   Thumb Code     4  def.o(.text.lwip_htonl)
    lwip_htons                               0x00104205   Thumb Code     4  def.o(.text.lwip_htons)
    lwip_init                                0x00104209   Thumb Code    34  init.o(.text.lwip_init)
    lwip_netconn_do_bind                     0x0010422d   Thumb Code    54  api_msg.o(.text.lwip_netconn_do_bind)
    lwip_netconn_do_close                    0x00104265   Thumb Code   238  api_msg.o(.text.lwip_netconn_do_close)
    lwip_netconn_do_delconn                  0x0010463d   Thumb Code   324  api_msg.o(.text.lwip_netconn_do_delconn)
    lwip_netconn_do_listen                   0x00104795   Thumb Code   192  api_msg.o(.text.lwip_netconn_do_listen)
    lwip_netconn_do_newconn                  0x00104855   Thumb Code   176  api_msg.o(.text.lwip_netconn_do_newconn)
    lwip_netconn_do_recv                     0x00104905   Thumb Code    56  api_msg.o(.text.lwip_netconn_do_recv)
    lwip_netconn_do_write                    0x0010493d   Thumb Code   248  api_msg.o(.text.lwip_netconn_do_write)
    lwip_netconn_is_err_msg                  0x00104dad   Thumb Code    88  api_msg.o(.text.lwip_netconn_is_err_msg)
    main                                     0x00104e11   Thumb Code   372  main.o(.text.main)
    mem_free                                 0x00104fa5   Thumb Code   572  mem.o(.text.mem_free)
    mem_init                                 0x00105271   Thumb Code   124  mem.o(.text.mem_init)
    mem_malloc                               0x00105309   Thumb Code   448  mem.o(.text.mem_malloc)
    mem_trim                                 0x00105539   Thumb Code   448  mem.o(.text.mem_trim)
    memp_free                                0x00105731   Thumb Code   108  memp.o(.text.memp_free)
    memp_free_pool                           0x001057b9   Thumb Code   106  memp.o(.text.memp_free_pool)
    memp_init                                0x00105825   Thumb Code    72  memp.o(.text.memp_init)
    memp_init_pool                           0x0010586d   Thumb Code    44  memp.o(.text.memp_init_pool)
    memp_malloc                              0x00105899   Thumb Code   120  memp.o(.text.memp_malloc)
    memp_malloc_pool                         0x00105931   Thumb Code   114  memp.o(.text.memp_malloc_pool)
    mii_check_phy_init                       0x001059a5   Thumb Code    86  mii.o(.text.mii_check_phy_init)
    mii_ethtool_gset                         0x001059fd   Thumb Code   372  mii.o(.text.mii_ethtool_gset)
    netbuf_data                              0x00105b71   Thumb Code   100  netbuf.o(.text.netbuf_data)
    netbuf_delete                            0x00105c2d   Thumb Code    36  netbuf.o(.text.netbuf_delete)
    netconn_accept                           0x00105c51   Thumb Code   180  api_lib.o(.text.netconn_accept)
    netconn_alloc                            0x00105d45   Thumb Code   140  api_msg.o(.text.netconn_alloc)
    netconn_bind                             0x00105df9   Thumb Code    92  api_lib.o(.text.netconn_bind)
    netconn_close                            0x00105e71   Thumb Code    86  api_lib.o(.text.netconn_close)
    netconn_delete                           0x00105ec9   Thumb Code    64  api_lib.o(.text.netconn_delete)
    netconn_err                              0x00105ff5   Thumb Code    28  api_lib.o(.text.netconn_err)
    netconn_free                             0x00106011   Thumb Code   124  api_msg.o(.text.netconn_free)
    netconn_listen_with_backlog              0x001060f9   Thumb Code    72  api_lib.o(.text.netconn_listen_with_backlog)
    netconn_new_with_proto_and_callback      0x00106161   Thumb Code   200  api_lib.o(.text.netconn_new_with_proto_and_callback)
    netconn_recv                             0x001062a5   Thumb Code   188  api_lib.o(.text.netconn_recv)
    netconn_write_partly                     0x001065b1   Thumb Code    28  api_lib.o(.text.netconn_write_partly)
    netconn_write_vectors_partly             0x001065cd   Thumb Code   276  api_lib.o(.text.netconn_write_vectors_partly)
    netif_add                                0x00106745   Thumb Code   404  netif.o(.text.netif_add)
    netif_get_by_index                       0x00106a41   Thumb Code    36  netif.o(.text.netif_get_by_index)
    netif_init                               0x00106a65   Thumb Code     2  netif.o(.text.netif_init)
    netif_set_default                        0x00106a71   Thumb Code    12  netif.o(.text.netif_set_default)
    netif_set_up                             0x00106a7d   Thumb Code    76  netif.o(.text.netif_set_up)
    nu_emac_pbuf_free                        0x00106ae5   Thumb Code    68  emac.o(.text.nu_emac_pbuf_free)
    pbuf_add_header                          0x00106b59   Thumb Code   108  pbuf.o(.text.pbuf_add_header)
    pbuf_alloc                               0x00106bc5   Thumb Code   400  pbuf.o(.text.pbuf_alloc)
    pbuf_alloced_custom                      0x00106d71   Thumb Code    62  pbuf.o(.text.pbuf_alloced_custom)
    pbuf_cat                                 0x00106db1   Thumb Code   148  pbuf.o(.text.pbuf_cat)
    pbuf_clen                                0x00106ebd   Thumb Code    18  pbuf.o(.text.pbuf_clen)
    pbuf_clone                               0x00106ed1   Thumb Code    66  pbuf.o(.text.pbuf_clone)
    pbuf_copy                                0x00106f15   Thumb Code   316  pbuf.o(.text.pbuf_copy)
    pbuf_copy_partial                        0x001070c5   Thumb Code   152  pbuf.o(.text.pbuf_copy_partial)
    pbuf_free                                0x001071a1   Thumb Code   228  pbuf.o(.text.pbuf_free)
    pbuf_header_force                        0x0010730d   Thumb Code     6  pbuf.o(.text.pbuf_header_force)
    pbuf_realloc                             0x001073fd   Thumb Code   200  pbuf.o(.text.pbuf_realloc)
    pbuf_ref                                 0x00107511   Thumb Code    66  pbuf.o(.text.pbuf_ref)
    pbuf_remove_header                       0x00107555   Thumb Code   120  pbuf.o(.text.pbuf_remove_header)
    plat_delay                               0x001075cd   Thumb Code    20  synopGMAC_plat.o(.text.plat_delay)
    pvPortMalloc                             0x00108ab9   Thumb Code   268  heap_2.o(.text.pvPortMalloc)
    pvTaskIncrementMutexHeldCount            0x00108bc5   Thumb Code    24  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    pxPortInitialiseStack                    0x00108bdd   Thumb Code   104  port.o(.text.pxPortInitialiseStack)
    synopGMACClearBits                       0x00108f51   Thumb Code    42  synopGMAC_plat.o(.text.synopGMACClearBits)
    synopGMACReadReg                         0x00108f7d   Thumb Code     4  synopGMAC_plat.o(.text.synopGMACReadReg)
    synopGMACSetBits                         0x00108f81   Thumb Code    42  synopGMAC_plat.o(.text.synopGMACSetBits)
    synopGMACWriteReg                        0x00108fad   Thumb Code    34  synopGMAC_plat.o(.text.synopGMACWriteReg)
    synopGMAC_ES_is_IP_header_error          0x00108fd1   Thumb Code     6  synopGMAC_Dev.o(.text.synopGMAC_ES_is_IP_header_error)
    synopGMAC_ES_is_IP_payload_error         0x00108fd9   Thumb Code     6  synopGMAC_Dev.o(.text.synopGMAC_ES_is_IP_payload_error)
    synopGMAC_ES_is_rx_checksum_bypassed     0x00108fe1   Thumb Code     6  synopGMAC_Dev.o(.text.synopGMAC_ES_is_rx_checksum_bypassed)
    synopGMAC_attach                         0x00108fe9   Thumb Code   222  synopGMAC_Dev.o(.text.synopGMAC_attach)
    synopGMAC_clear_interrupt                0x001090c9   Thumb Code    28  synopGMAC_Dev.o(.text.synopGMAC_clear_interrupt)
    synopGMAC_disable_dma_rx                 0x001090e5   Thumb Code    32  synopGMAC_Dev.o(.text.synopGMAC_disable_dma_rx)
    synopGMAC_disable_dma_tx                 0x00109105   Thumb Code    32  synopGMAC_Dev.o(.text.synopGMAC_disable_dma_tx)
    synopGMAC_disable_interrupt_all          0x00109125   Thumb Code    10  synopGMAC_Dev.o(.text.synopGMAC_disable_interrupt_all)
    synopGMAC_dma_bus_mode_init              0x00109131   Thumb Code    16  synopGMAC_Dev.o(.text.synopGMAC_dma_bus_mode_init)
    synopGMAC_dma_control_init               0x00109141   Thumb Code    16  synopGMAC_Dev.o(.text.synopGMAC_dma_control_init)
    synopGMAC_enable_dma_rx                  0x00109151   Thumb Code    32  synopGMAC_Dev.o(.text.synopGMAC_enable_dma_rx)
    synopGMAC_enable_dma_tx                  0x00109171   Thumb Code    32  synopGMAC_Dev.o(.text.synopGMAC_enable_dma_tx)
    synopGMAC_enable_interrupt               0x00109191   Thumb Code    10  synopGMAC_Dev.o(.text.synopGMAC_enable_interrupt)
    synopGMAC_get_interrupt_type             0x0010919d   Thumb Code    58  synopGMAC_Dev.o(.text.synopGMAC_get_interrupt_type)
    synopGMAC_get_mdc_clk_div                0x001091d9   Thumb Code    16  synopGMAC_Dev.o(.text.synopGMAC_get_mdc_clk_div)
    synopGMAC_get_rx_desc_frame_length       0x001091e9   Thumb Code     6  synopGMAC_Dev.o(.text.synopGMAC_get_rx_desc_frame_length)
    synopGMAC_get_rx_qptr                    0x001091f1   Thumb Code   150  synopGMAC_Dev.o(.text.synopGMAC_get_rx_qptr)
    synopGMAC_get_tx_collision_count         0x00109289   Thumb Code     6  synopGMAC_Dev.o(.text.synopGMAC_get_tx_collision_count)
    synopGMAC_get_tx_qptr                    0x00109291   Thumb Code   150  synopGMAC_Dev.o(.text.synopGMAC_get_tx_qptr)
    synopGMAC_init_rx_desc_base              0x00109329   Thumb Code    12  synopGMAC_Dev.o(.text.synopGMAC_init_rx_desc_base)
    synopGMAC_init_tx_desc_base              0x00109335   Thumb Code    12  synopGMAC_Dev.o(.text.synopGMAC_init_tx_desc_base)
    synopGMAC_init_tx_rx_desc_queue          0x00109341   Thumb Code   102  synopGMAC_Dev.o(.text.synopGMAC_init_tx_rx_desc_queue)
    synopGMAC_is_desc_owned_by_dma           0x001093a9   Thumb Code     6  synopGMAC_Dev.o(.text.synopGMAC_is_desc_owned_by_dma)
    synopGMAC_is_desc_valid                  0x001093b1   Thumb Code    10  synopGMAC_Dev.o(.text.synopGMAC_is_desc_valid)
    synopGMAC_is_ext_status                  0x001093bd   Thumb Code     6  synopGMAC_Dev.o(.text.synopGMAC_is_ext_status)
    synopGMAC_is_frame_dribbling_errors      0x001093c5   Thumb Code     6  synopGMAC_Dev.o(.text.synopGMAC_is_frame_dribbling_errors)
    synopGMAC_is_magic_packet_received       0x001093cd   Thumb Code    16  synopGMAC_Dev.o(.text.synopGMAC_is_magic_packet_received)
    synopGMAC_is_rx_checksum_error           0x001093dd   Thumb Code    64  synopGMAC_Dev.o(.text.synopGMAC_is_rx_checksum_error)
    synopGMAC_is_rx_crc                      0x0010941d   Thumb Code     6  synopGMAC_Dev.o(.text.synopGMAC_is_rx_crc)
    synopGMAC_is_rx_desc_valid               0x00109425   Thumb Code    14  synopGMAC_Dev.o(.text.synopGMAC_is_rx_desc_valid)
    synopGMAC_is_rx_frame_collision          0x00109435   Thumb Code     6  synopGMAC_Dev.o(.text.synopGMAC_is_rx_frame_collision)
    synopGMAC_is_rx_frame_length_errors      0x0010943d   Thumb Code     6  synopGMAC_Dev.o(.text.synopGMAC_is_rx_frame_length_errors)
    synopGMAC_is_tx_aborted                  0x00109445   Thumb Code    12  synopGMAC_Dev.o(.text.synopGMAC_is_tx_aborted)
    synopGMAC_is_tx_carrier_error            0x00109451   Thumb Code    12  synopGMAC_Dev.o(.text.synopGMAC_is_tx_carrier_error)
    synopGMAC_is_tx_ipv4header_checksum_error 0x0010945d   Thumb Code     6  synopGMAC_Dev.o(.text.synopGMAC_is_tx_ipv4header_checksum_error)
    synopGMAC_is_tx_payload_checksum_error   0x00109465   Thumb Code     6  synopGMAC_Dev.o(.text.synopGMAC_is_tx_payload_checksum_error)
    synopGMAC_is_wakeup_frame_received       0x0010946d   Thumb Code    16  synopGMAC_Dev.o(.text.synopGMAC_is_wakeup_frame_received)
    synopGMAC_mac_init                       0x0010947d   Thumb Code   608  synopGMAC_Dev.o(.text.synopGMAC_mac_init)
    synopGMAC_pause_control                  0x001096dd   Thumb Code    58  synopGMAC_Dev.o(.text.synopGMAC_pause_control)
    synopGMAC_pmt_int_disable                0x00109719   Thumb Code    10  synopGMAC_Dev.o(.text.synopGMAC_pmt_int_disable)
    synopGMAC_powerup_mac                    0x00109725   Thumb Code    56  synopGMAC_network_interface.o(.text.synopGMAC_powerup_mac)
    synopGMAC_promisc_enable                 0x0010975d   Thumb Code    10  synopGMAC_Dev.o(.text.synopGMAC_promisc_enable)
    synopGMAC_read_phy_reg                   0x00109769   Thumb Code    98  synopGMAC_Dev.o(.text.synopGMAC_read_phy_reg)
    synopGMAC_read_version                   0x001097cd   Thumb Code    20  synopGMAC_Dev.o(.text.synopGMAC_read_version)
    synopGMAC_reset                          0x001097e1   Thumb Code    40  synopGMAC_Dev.o(.text.synopGMAC_reset)
    synopGMAC_resume_dma_rx                  0x00109809   Thumb Code    10  synopGMAC_Dev.o(.text.synopGMAC_resume_dma_rx)
    synopGMAC_resume_dma_tx                  0x00109815   Thumb Code    10  synopGMAC_Dev.o(.text.synopGMAC_resume_dma_tx)
    synopGMAC_rx_desc_init_ring              0x00109821   Thumb Code    20  synopGMAC_Dev.o(.text.synopGMAC_rx_desc_init_ring)
    synopGMAC_rx_disable                     0x00109835   Thumb Code    10  synopGMAC_Dev.o(.text.synopGMAC_rx_disable)
    synopGMAC_rx_enable                      0x00109841   Thumb Code    10  synopGMAC_Dev.o(.text.synopGMAC_rx_enable)
    synopGMAC_set_mac_addr                   0x0010984d   Thumb Code    30  synopGMAC_Dev.o(.text.synopGMAC_set_mac_addr)
    synopGMAC_set_mdc_clk_div                0x0010986d   Thumb Code    34  synopGMAC_Dev.o(.text.synopGMAC_set_mdc_clk_div)
    synopGMAC_set_mode                       0x00109891   Thumb Code   104  synopGMAC_network_interface.o(.text.synopGMAC_set_mode)
    synopGMAC_set_rx_qptr                    0x001098f9   Thumb Code    88  synopGMAC_Dev.o(.text.synopGMAC_set_rx_qptr)
    synopGMAC_set_tx_qptr                    0x00109951   Thumb Code   124  synopGMAC_Dev.o(.text.synopGMAC_set_tx_qptr)
    synopGMAC_setup_rx_desc_queue            0x001099cd   Thumb Code    58  synopGMAC_network_interface.o(.text.synopGMAC_setup_rx_desc_queue)
    synopGMAC_setup_tx_desc_queue            0x00109a09   Thumb Code    58  synopGMAC_network_interface.o(.text.synopGMAC_setup_tx_desc_queue)
    synopGMAC_take_desc_ownership_rx         0x00109a45   Thumb Code    32  synopGMAC_Dev.o(.text.synopGMAC_take_desc_ownership_rx)
    synopGMAC_take_desc_ownership_tx         0x00109a65   Thumb Code    32  synopGMAC_Dev.o(.text.synopGMAC_take_desc_ownership_tx)
    synopGMAC_tx_desc_init_ring              0x00109a85   Thumb Code    20  synopGMAC_Dev.o(.text.synopGMAC_tx_desc_init_ring)
    synopGMAC_tx_disable                     0x00109a99   Thumb Code    10  synopGMAC_Dev.o(.text.synopGMAC_tx_disable)
    synopGMAC_tx_enable                      0x00109aa5   Thumb Code    10  synopGMAC_Dev.o(.text.synopGMAC_tx_enable)
    synopGMAC_write_phy_reg                  0x00109ab1   Thumb Code    90  synopGMAC_Dev.o(.text.synopGMAC_write_phy_reg)
    synopGMAC_xmit_frames                    0x00109b0d   Thumb Code    60  synopGMAC_network_interface.o(.text.synopGMAC_xmit_frames)
    synop_handle_received_data               0x00109b8d   Thumb Code   336  synopGMAC_network_interface.o(.text.synop_handle_received_data)
    synop_handle_transmit_over               0x00109cdd   Thumb Code   232  synopGMAC_network_interface.o(.text.synop_handle_transmit_over)
    sys_arch_mbox_fetch                      0x00109dc5   Thumb Code    94  sys_arch.o(.text.sys_arch_mbox_fetch)
    sys_arch_mbox_tryfetch                   0x00109e25   Thumb Code    30  sys_arch.o(.text.sys_arch_mbox_tryfetch)
    sys_arch_protect                         0x00109e45   Thumb Code    10  sys_arch.o(.text.sys_arch_protect)
    sys_arch_sem_wait                        0x00109e51   Thumb Code    70  sys_arch.o(.text.sys_arch_sem_wait)
    sys_arch_unprotect                       0x00109e99   Thumb Code     4  sys_arch.o(.text.sys_arch_unprotect)
    sys_check_timeouts                       0x00109e9d   Thumb Code    80  timeouts.o(.text.sys_check_timeouts)
    sys_init                                 0x00109eed   Thumb Code     2  sys_arch.o(.text.sys_init)
    sys_mbox_free                            0x00109ef1   Thumb Code    28  sys_arch.o(.text.sys_mbox_free)
    sys_mbox_new                             0x00109f0d   Thumb Code    26  sys_arch.o(.text.sys_mbox_new)
    sys_mbox_trypost                         0x00109f29   Thumb Code    30  sys_arch.o(.text.sys_mbox_trypost)
    sys_mutex_lock                           0x00109f49   Thumb Code    20  sys_arch.o(.text.sys_mutex_lock)
    sys_mutex_new                            0x00109f5d   Thumb Code    22  sys_arch.o(.text.sys_mutex_new)
    sys_mutex_unlock                         0x00109f75   Thumb Code    12  sys_arch.o(.text.sys_mutex_unlock)
    sys_now                                  0x00109f81   Thumb Code     4  sys_arch.o(.text.sys_now)
    sys_sem_free                             0x00109f85   Thumb Code     6  sys_arch.o(.text.sys_sem_free)
    sys_sem_new                              0x00109f8d   Thumb Code    56  sys_arch.o(.text.sys_sem_new)
    sys_sem_signal                           0x00109fc5   Thumb Code    12  sys_arch.o(.text.sys_sem_signal)
    sys_thread_new                           0x00109fd1   Thumb Code    42  sys_arch.o(.text.sys_thread_new)
    sys_timeout                              0x00109ffd   Thumb Code   148  timeouts.o(.text.sys_timeout)
    sys_timeouts_init                        0x0010a0c9   Thumb Code    46  timeouts.o(.text.sys_timeouts_init)
    sys_timeouts_sleeptime                   0x0010a0f9   Thumb Code    38  timeouts.o(.text.sys_timeouts_sleeptime)
    tcp_abandon                              0x0010a121   Thumb Code   452  tcp.o(.text.tcp_abandon)
    tcp_abort                                0x0010a335   Thumb Code     6  tcp.o(.text.tcp_abort)
    tcp_accept                               0x0010a33d   Thumb Code    16  tcp.o(.text.tcp_accept)
    tcp_alloc                                0x0010a39d   Thumb Code   390  tcp.o(.text.tcp_alloc)
    tcp_arg                                  0x0010a525   Thumb Code     8  tcp.o(.text.tcp_arg)
    tcp_bind                                 0x0010a52d   Thumb Code   344  tcp.o(.text.tcp_bind)
    tcp_close                                0x0010a6c5   Thumb Code    56  tcp.o(.text.tcp_close)
    tcp_eff_send_mss_netif                   0x0010aa91   Thumb Code    72  tcp.o(.text.tcp_eff_send_mss_netif)
    tcp_enqueue_flags                        0x0010ab01   Thumb Code   376  tcp_out.o(.text.tcp_enqueue_flags)
    tcp_err                                  0x0010aced   Thumb Code    64  tcp.o(.text.tcp_err)
    tcp_fasttmr                              0x0010ad55   Thumb Code   150  tcp.o(.text.tcp_fasttmr)
    tcp_free                                 0x0010aded   Thumb Code    52  tcp.o(.text.tcp_free)
    tcp_free_ooseq                           0x0010af39   Thumb Code    46  tcp.o(.text.tcp_free_ooseq)
    tcp_init                                 0x0010af69   Thumb Code    22  tcp.o(.text.tcp_init)
    tcp_input                                0x0010af81   Thumb Code  1580  tcp_in.o(.text.tcp_input)
    tcp_keepalive                            0x0010b66d   Thumb Code   140  tcp_out.o(.text.tcp_keepalive)
    tcp_listen_with_backlog_and_err          0x0010b8dd   Thumb Code   292  tcp.o(.text.tcp_listen_with_backlog_and_err)
    tcp_netif_ip_addr_changed                0x0010ba69   Thumb Code   134  tcp.o(.text.tcp_netif_ip_addr_changed)
    tcp_new_ip_type                          0x0010baf1   Thumb Code     6  tcp.o(.text.tcp_new_ip_type)
    tcp_next_iss                             0x0010baf9   Thumb Code    60  tcp.o(.text.tcp_next_iss)
    tcp_output                               0x0010bbcd   Thumb Code   936  tcp_out.o(.text.tcp_output)
    tcp_pcb_purge                            0x0010c311   Thumb Code   192  tcp.o(.text.tcp_pcb_purge)
    tcp_pcb_remove                           0x0010c3ed   Thumb Code   244  tcp.o(.text.tcp_pcb_remove)
    tcp_poll                                 0x0010c569   Thumb Code    92  tcp.o(.text.tcp_poll)
    tcp_process_refused_data                 0x0010cb81   Thumb Code   184  tcp.o(.text.tcp_process_refused_data)
    tcp_recv                                 0x0010d555   Thumb Code    64  tcp.o(.text.tcp_recv)
    tcp_recv_null                            0x0010d5bd   Thumb Code    92  tcp.o(.text.tcp_recv_null)
    tcp_recved                               0x0010d635   Thumb Code   212  tcp.o(.text.tcp_recved)
    tcp_rexmit                               0x0010d749   Thumb Code   148  tcp_out.o(.text.tcp_rexmit)
    tcp_rexmit_fast                          0x0010d7f5   Thumb Code   120  tcp_out.o(.text.tcp_rexmit_fast)
    tcp_rexmit_rto                           0x0010d88d   Thumb Code   104  tcp_out.o(.text.tcp_rexmit_rto)
    tcp_rexmit_rto_commit                    0x0010d911   Thumb Code    66  tcp_out.o(.text.tcp_rexmit_rto_commit)
    tcp_rexmit_rto_prepare                   0x0010d955   Thumb Code   128  tcp_out.o(.text.tcp_rexmit_rto_prepare)
    tcp_rst                                  0x0010d9f9   Thumb Code   144  tcp_out.o(.text.tcp_rst)
    tcp_seg_copy                             0x0010dac1   Thumb Code    76  tcp.o(.text.tcp_seg_copy)
    tcp_seg_free                             0x0010db29   Thumb Code    32  tcp.o(.text.tcp_seg_free)
    tcp_segs_free                            0x0010db49   Thumb Code    46  tcp.o(.text.tcp_segs_free)
    tcp_send_empty_ack                       0x0010db79   Thumb Code   156  tcp_out.o(.text.tcp_send_empty_ack)
    tcp_send_fin                             0x0010dc35   Thumb Code   100  tcp_out.o(.text.tcp_send_fin)
    tcp_sent                                 0x0010dcb5   Thumb Code    64  tcp.o(.text.tcp_sent)
    tcp_shutdown                             0x0010dd1d   Thumb Code   136  tcp.o(.text.tcp_shutdown)
    tcp_slowtmr                              0x0010ddc1   Thumb Code  1480  tcp.o(.text.tcp_slowtmr)
    tcp_split_unsent_seg                     0x0010e411   Thumb Code   436  tcp_out.o(.text.tcp_split_unsent_seg)
    tcp_timer_needed                         0x0010e62d   Thumb Code   156  timeouts.o(.text.tcp_timer_needed)
    tcp_tmr                                  0x0010e76d   Thumb Code    34  tcp.o(.text.tcp_tmr)
    tcp_trigger_input_pcb_close              0x0010e791   Thumb Code    18  tcp_in.o(.text.tcp_trigger_input_pcb_close)
    tcp_update_rcv_ann_wnd                   0x0010e7a5   Thumb Code   124  tcp.o(.text.tcp_update_rcv_ann_wnd)
    tcp_write                                0x0010e845   Thumb Code  1780  tcp_out.o(.text.tcp_write)
    tcp_zero_window_probe                    0x0010efc1   Thumb Code   264  tcp_out.o(.text.tcp_zero_window_probe)
    tcpip_init                               0x0010f0ed   Thumb Code   144  tcpip.o(.text.tcpip_init)
    tcpip_input                              0x0010f1d5   Thumb Code   178  tcpip.o(.text.tcpip_input)
    tcpip_send_msg_wait_sem                  0x0010f289   Thumb Code    34  tcpip.o(.text.tcpip_send_msg_wait_sem)
    tcpip_try_callback                       0x0010f43d   Thumb Code   104  tcpip.o(.text.tcpip_try_callback)
    udp_bind                                 0x0010f4a5   Thumb Code   268  udp.o(.text.udp_bind)
    udp_init                                 0x0010f5c9   Thumb Code    22  udp.o(.text.udp_init)
    udp_input                                0x0010f5e1   Thumb Code   568  udp.o(.text.udp_input)
    udp_netif_ip_addr_changed                0x0010f891   Thumb Code    62  udp.o(.text.udp_netif_ip_addr_changed)
    udp_new_ip_type                          0x0010f8d1   Thumb Code    38  udp.o(.text.udp_new_ip_type)
    udp_recv                                 0x0010f8f9   Thumb Code    36  udp.o(.text.udp_recv)
    udp_remove                               0x0010f935   Thumb Code    72  udp.o(.text.udp_remove)
    ulSetInterruptMask                       0x0010f995   Thumb Code    22  portasm.o(.text.ulSetInterruptMask)
    uxListRemove                             0x0010f9ad   Thumb Code    36  list.o(.text.uxListRemove)
    uxQueueMessagesWaiting                   0x0010f9d1   Thumb Code    26  queue.o(.text.uxQueueMessagesWaiting)
    uxTaskGetNumberOfTasks                   0x0010f9ed   Thumb Code    12  tasks.o(.text.uxTaskGetNumberOfTasks)
    uxTaskPriorityGet                        0x0010f9f9   Thumb Code    30  tasks.o(.text.uxTaskPriorityGet)
    vApplicationMallocFailedHook             0x0010fa19   Thumb Code     6  main.o(.text.vApplicationMallocFailedHook)
    vApplicationStackOverflowHook            0x0010fa21   Thumb Code     6  main.o(.text.vApplicationStackOverflowHook)
    vApplicationTickHook                     0x0010fa29   Thumb Code     4  main.o(.text.vApplicationTickHook)
    vClearInterruptMask                      0x0010fa2d   Thumb Code    14  portasm.o(.text.vClearInterruptMask)
    vListInitialise                          0x0010fa3d   Thumb Code    22  list.o(.text.vListInitialise)
    vListInitialiseItem                      0x0010fa55   Thumb Code     6  list.o(.text.vListInitialiseItem)
    vListInsert                              0x0010fa5d   Thumb Code    58  list.o(.text.vListInsert)
    vListInsertEnd                           0x0010fa99   Thumb Code    28  list.o(.text.vListInsertEnd)
    vPortEnterCritical                       0x0010fb75   Thumb Code    30  port.o(.text.vPortEnterCritical)
    vPortExitCritical                        0x0010fb95   Thumb Code    46  port.o(.text.vPortExitCritical)
    vPortFree                                0x0010fbc5   Thumb Code   100  heap_2.o(.text.vPortFree)
    vPortSVCHandler_C                        0x0010fc29   Thumb Code    54  port.o(.text.vPortSVCHandler_C)
    vPortSetupTimerInterrupt                 0x0010fc61   Thumb Code    62  port.o(.text.vPortSetupTimerInterrupt)
    vPortSuppressTicksAndSleep               0x0010fca1   Thumb Code   338  port.o(.text.vPortSuppressTicksAndSleep)
    vPortYield                               0x0010fdf5   Thumb Code    24  port.o(.text.vPortYield)
    vQueueAddToRegistry                      0x0010fe0d   Thumb Code    86  queue.o(.text.vQueueAddToRegistry)
    vQueueDelete                             0x0010fe65   Thumb Code    62  queue.o(.text.vQueueDelete)
    vQueueSetAccessQueueSetFromISR           0x0010fea5   Thumb Code   174  QueueSet.o(.text.vQueueSetAccessQueueSetFromISR)
    vQueueWaitForMessageRestricted           0x0010ff55   Thumb Code    70  queue.o(.text.vQueueWaitForMessageRestricted)
    vRestoreContextOfFirstTask               0x0010ffa1   Thumb Code    52  portasm.o(.text.vRestoreContextOfFirstTask)
    vStartFirstTask                          0x0010ffe1   Thumb Code    36  portasm.o(.text.vStartFirstTask)
    vStartGenericQueueTasks                  0x00110005   Thumb Code   160  GenQTest.o(.text.vStartGenericQueueTasks)
    vStartPolledQueueTasks                   0x001100e5   Thumb Code    92  PollQ.o(.text.vStartPolledQueueTasks)
    vStartQueueSetTasks                      0x00110161   Thumb Code    88  QueueSet.o(.text.vStartQueueSetTasks)
    vStartSemaphoreTasks                     0x001101c9   Thumb Code   216  semtest.o(.text.vStartSemaphoreTasks)
    vTaskDelay                               0x001102e1   Thumb Code   142  tasks.o(.text.vTaskDelay)
    vTaskInternalSetTimeOutState             0x00110371   Thumb Code    26  tasks.o(.text.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x0011038d   Thumb Code    14  tasks.o(.text.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x0011039d   Thumb Code    42  tasks.o(.text.vTaskPlaceOnEventList)
    vTaskPlaceOnEventListRestricted          0x001103c9   Thumb Code   102  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    vTaskPriorityDisinheritAfterTimeout      0x00110431   Thumb Code   160  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    vTaskPrioritySet                         0x001104d1   Thumb Code   202  tasks.o(.text.vTaskPrioritySet)
    vTaskResume                              0x0011059d   Thumb Code   146  tasks.o(.text.vTaskResume)
    vTaskStartScheduler                      0x00110631   Thumb Code   124  tasks.o(.text.vTaskStartScheduler)
    vTaskStepTick                            0x001106b5   Thumb Code   106  tasks.o(.text.vTaskStepTick)
    vTaskSuspend                             0x00110721   Thumb Code   214  tasks.o(.text.vTaskSuspend)
    vTaskSuspendAll                          0x001107f9   Thumb Code    16  tasks.o(.text.vTaskSuspendAll)
    vTaskSwitchContext                       0x00110809   Thumb Code   182  tasks.o(.text.vTaskSwitchContext)
    xPortStartScheduler                      0x001109d5   Thumb Code    82  port.o(.text.xPortStartScheduler)
    xQueueAddToSet                           0x00110a29   Thumb Code    38  queue.o(.text.xQueueAddToSet)
    xQueueCreateMutex                        0x00110a51   Thumb Code   118  queue.o(.text.xQueueCreateMutex)
    xQueueCreateSet                          0x00110ac9   Thumb Code     8  queue.o(.text.xQueueCreateSet)
    xQueueGenericCreate                      0x00110ad1   Thumb Code   138  queue.o(.text.xQueueGenericCreate)
    xQueueGenericSend                        0x00110b5d   Thumb Code   442  queue.o(.text.xQueueGenericSend)
    xQueueGenericSendFromISR                 0x00110d19   Thumb Code   298  queue.o(.text.xQueueGenericSendFromISR)
    xQueueGiveFromISR                        0x00110e45   Thumb Code   180  queue.o(.text.xQueueGiveFromISR)
    xQueuePeek                               0x00110ef9   Thumb Code   340  queue.o(.text.xQueuePeek)
    xQueueReceive                            0x0011104d   Thumb Code   352  queue.o(.text.xQueueReceive)
    xQueueReceiveFromISR                     0x001111ad   Thumb Code   168  queue.o(.text.xQueueReceiveFromISR)
    xQueueRemoveFromSet                      0x00111255   Thumb Code    50  queue.o(.text.xQueueRemoveFromSet)
    xQueueSelectFromSet                      0x00111289   Thumb Code    22  queue.o(.text.xQueueSelectFromSet)
    xQueueSelectFromSetFromISR               0x001112a1   Thumb Code    22  queue.o(.text.xQueueSelectFromSetFromISR)
    xQueueSemaphoreTake                      0x001112b9   Thumb Code   370  queue.o(.text.xQueueSemaphoreTake)
    xTaskCheckForTimeOut                     0x0011142d   Thumb Code   116  tasks.o(.text.xTaskCheckForTimeOut)
    xTaskCreate                              0x001114a1   Thumb Code   488  tasks.o(.text.xTaskCreate)
    xTaskGetSchedulerState                   0x00111689   Thumb Code    38  tasks.o(.text.xTaskGetSchedulerState)
    xTaskGetTickCount                        0x001116b1   Thumb Code    12  tasks.o(.text.xTaskGetTickCount)
    xTaskIncrementTick                       0x001116bd   Thumb Code   430  tasks.o(.text.xTaskIncrementTick)
    xTaskPriorityDisinherit                  0x0011186d   Thumb Code   146  tasks.o(.text.xTaskPriorityDisinherit)
    xTaskPriorityInherit                     0x00111901   Thumb Code   166  tasks.o(.text.xTaskPriorityInherit)
    xTaskRemoveFromEventList                 0x001119a9   Thumb Code   284  tasks.o(.text.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x00111ac5   Thumb Code   358  tasks.o(.text.xTaskResumeAll)
    xTimerCreateTimerTask                    0x00111c2d   Thumb Code    76  timers.o(.text.xTimerCreateTimerTask)
    __0printf$8                              0x00111c81   Thumb Code    22  printf8.o(i.__0printf$8)
    __1printf$8                              0x00111c81   Thumb Code     0  printf8.o(i.__0printf$8)
    __2printf                                0x00111c81   Thumb Code     0  printf8.o(i.__0printf$8)
    __scatterload_copy                       0x00111ca1   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x00111caf   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x00111cb1   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    puts                                     0x00112125   Thumb Code    30  puts.o(i.puts)
    ethbroadcast                             0x00127a8f   Data           6  ethernet.o(.rodata.ethbroadcast)
    ethzero                                  0x00127a95   Data           6  ethernet.o(.rodata.ethzero)
    file_404_html                            0x00127a9c   Data          20  fs.o(.rodata.file_404_html)
    file_img_m4_jpg                          0x00127ab0   Data          20  fs.o(.rodata.file_img_m4_jpg)
    file_index_html                          0x00127ac4   Data          20  fs.o(.rodata.file_index_html)
    ip_addr_any                              0x00127ad8   Data           4  ip4_addr.o(.rodata.ip_addr_any)
    lwip_cyclic_timers                       0x00127adc   Data          24  timeouts.o(.rodata.lwip_cyclic_timers)
    memp_FRAG_PBUF                           0x00127af4   Data          12  memp.o(.rodata.memp_FRAG_PBUF)
    memp_NETBUF                              0x00127b00   Data          12  memp.o(.rodata.memp_NETBUF)
    memp_NETCONN                             0x00127b0c   Data          12  memp.o(.rodata.memp_NETCONN)
    memp_PBUF                                0x00127b18   Data          12  memp.o(.rodata.memp_PBUF)
    memp_PBUF_POOL                           0x00127b24   Data          12  memp.o(.rodata.memp_PBUF_POOL)
    memp_REASSDATA                           0x00127b30   Data          12  memp.o(.rodata.memp_REASSDATA)
    memp_SYS_TIMEOUT                         0x00127b3c   Data          12  memp.o(.rodata.memp_SYS_TIMEOUT)
    memp_TCPIP_MSG_API                       0x00127b48   Data          12  memp.o(.rodata.memp_TCPIP_MSG_API)
    memp_TCPIP_MSG_INPKT                     0x00127b54   Data          12  memp.o(.rodata.memp_TCPIP_MSG_INPKT)
    memp_TCP_PCB                             0x00127b60   Data          12  memp.o(.rodata.memp_TCP_PCB)
    memp_TCP_PCB_LISTEN                      0x00127b6c   Data          12  memp.o(.rodata.memp_TCP_PCB_LISTEN)
    memp_TCP_SEG                             0x00127b78   Data          12  memp.o(.rodata.memp_TCP_SEG)
    memp_UDP_PCB                             0x00127b84   Data          12  memp.o(.rodata.memp_UDP_PCB)
    memp_emac_rx                             0x00127b90   Data          12  emac.o(.rodata.memp_emac_rx)
    memp_pools                               0x00127b9c   Data          52  memp.o(.rodata.memp_pools)
    netconn_aborted                          0x00127bd0   Data           1  api_msg.o(.rodata.netconn_aborted)
    netconn_closed                           0x00127bd1   Data           1  api_msg.o(.rodata.netconn_closed)
    netconn_reset                            0x00127bd2   Data           1  api_msg.o(.rodata.netconn_reset)
    tcp_pcb_lists                            0x00128d78   Data          16  tcp.o(.rodata.tcp_pcb_lists)
    uxTopUsedPriority                        0x00128d90   Data           4  tasks.o(.rodata.uxTopUsedPriority)
    Region$$Table$$Base                      0x00128d94   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00128de4   Number         0  anon$$obj.o(Region$$Table)
    SHT$$INIT_ARRAY$$Base                    0x00128de4   Number         0  system_M55M1.o(.init_array)
    SHT$$INIT_ARRAY$$Limit                   0x00128de8   Number         0  cpp_init.o(.init_array)
    DTCM_VECTOR_TABLE                        0x20000000   Data         712  startup_M55M1.o(DTCM.VTOR)
    Image$$ARM_LIB_STACK$$ZI$$Base           0x2001f800   Number         0  anon$$obj.o ABSOLUTE
    Image$$ARM_LIB_STACK$$ZI$$Limit          0x20020000   Number         0  anon$$obj.o ABSOLUTE
    __stdout                                 0x20100000   Data           4  stdout.o(.data)
    CyclesPerUs                              0x20100004   Data           4  system_M55M1.o(.data.CyclesPerUs)
    PllClock                                 0x20100008   Data           4  system_M55M1.o(.data.PllClock)
    SystemCoreClock                          0x2010000c   Data           4  system_M55M1.o(.data.SystemCoreClock)
    my_mac_addr                              0x20100010   Data           6  main.o(.data.my_mac_addr)
    _netif                                   0x20100100   Data           4  ethernetif.o(.bss._netif)
    fs_memory                                0x20100200   Data         240  fs.o(.bss.fs_memory)
    g_u32NonCacheableBase                    0x201002f0   Data           4  system_M55M1.o(.bss.g_u32NonCacheableBase)
    g_u32NonCacheableLimit                   0x201002f4   Data           4  system_M55M1.o(.bss.g_u32NonCacheableLimit)
    ip_data                                  0x20100318   Data          24  ip.o(.bss.ip_data)
    lock_tcpip_core                          0x20100338   Data           4  tcpip.o(.bss.lock_tcpip_core)
    memp_memory_FRAG_PBUF_base               0x20100340   Data         363  memp.o(.bss.memp_memory_FRAG_PBUF_base)
    memp_memory_NETBUF_base                  0x201004ab   Data          35  memp.o(.bss.memp_memory_NETBUF_base)
    memp_memory_NETCONN_base                 0x201004ce   Data         163  memp.o(.bss.memp_memory_NETCONN_base)
    memp_memory_PBUF_POOL_base               0x20100571   Data       34307  memp.o(.bss.memp_memory_PBUF_POOL_base)
    memp_memory_PBUF_base                    0x20108b74   Data        1027  memp.o(.bss.memp_memory_PBUF_base)
    memp_memory_REASSDATA_base               0x20108f77   Data         163  memp.o(.bss.memp_memory_REASSDATA_base)
    memp_memory_SYS_TIMEOUT_base             0x2010901a   Data          51  memp.o(.bss.memp_memory_SYS_TIMEOUT_base)
    memp_memory_TCPIP_MSG_API_base           0x2010904d   Data         131  memp.o(.bss.memp_memory_TCPIP_MSG_API_base)
    memp_memory_TCPIP_MSG_INPKT_base         0x201090d0   Data         131  memp.o(.bss.memp_memory_TCPIP_MSG_INPKT_base)
    memp_memory_TCP_PCB_LISTEN_base          0x20109153   Data         227  memp.o(.bss.memp_memory_TCP_PCB_LISTEN_base)
    memp_memory_TCP_PCB_base                 0x20109236   Data         783  memp.o(.bss.memp_memory_TCP_PCB_base)
    memp_memory_TCP_SEG_base                 0x20109545   Data         259  memp.o(.bss.memp_memory_TCP_SEG_base)
    memp_memory_UDP_PCB_base                 0x20109648   Data         131  memp.o(.bss.memp_memory_UDP_PCB_base)
    memp_memory_emac_rx_base                 0x201096cb   Data         771  emac.o(.bss.memp_memory_emac_rx_base)
    netif                                    0x20109a08   Data          48  main.o(.bss.netif)
    netif_default                            0x20109a38   Data           4  netif.o(.bss.netif_default)
    netif_list                               0x20109a3c   Data           4  netif.o(.bss.netif_list)
    pbuf_free_ooseq_pending                  0x20109a48   Data           1  pbuf.o(.bss.pbuf_free_ooseq_pending)
    pxCurrentTCB                             0x20109a60   Data           4  tasks.o(.bss.pxCurrentTCB)
    ram_heap                                 0x20109b1c   Data       30019  mem.o(.bss.ram_heap)
    tcp_active_pcbs                          0x2011107c   Data           4  tcp.o(.bss.tcp_active_pcbs)
    tcp_active_pcbs_changed                  0x20111080   Data           1  tcp.o(.bss.tcp_active_pcbs_changed)
    tcp_bound_pcbs                           0x20111084   Data           4  tcp.o(.bss.tcp_bound_pcbs)
    tcp_input_pcb                            0x20111088   Data           4  tcp_in.o(.bss.tcp_input_pcb)
    tcp_listen_pcbs                          0x2011108c   Data           4  tcp.o(.bss.tcp_listen_pcbs)
    tcp_ticks                                0x20111090   Data           4  tcp.o(.bss.tcp_ticks)
    tcp_tw_pcbs                              0x20111098   Data           4  tcp.o(.bss.tcp_tw_pcbs)
    udp_pcbs                                 0x2011d8bc   Data           4  udp.o(.bss.udp_pcbs)
    xQueueRegistry                           0x2011d99c   Data          64  queue.o(.bss.xQueueRegistry)
    xQueueSetReceivingTask                   0x2011d9e0   Data           4  QueueSet.o(.bss.xQueueSetReceivingTask)
    xQueueSetSendingTask                     0x2011d9e4   Data           4  QueueSet.o(.bss.xQueueSetSendingTask)
    xRxSemaphore                             0x2011d9f4   Data           4  ethernetif.o(.bss.xRxSemaphore)
    xRxThread                                0x2011d9f8   Data           4  ethernetif.o(.bss.xRxThread)
    Image$$SRAM_NONCACHEABLE$$Base           0x20230000   Number         0  anon$$obj.o ABSOLUTE
    Image$$SRAM_NONCACHEABLE_END$$Base       0x20250000   Number         0  anon$$obj.o ABSOLUTE



==============================================================================

Memory Map of the image

  Image Entry point : 0x00101335

  Load Region LR_ROM (Base: 0x00100000, Size: 0x000292e8, Max: 0x00200000, ABSOLUTE)

    Execution Region ITCM (Exec base: 0x00000000, Load base: 0x00128de8, Size: 0x00000204, Max: 0x00010000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00128de8   0x00000204   Code   RO          127    ITCM                emac.o


    Execution Region ER_ROM (Exec base: 0x00100000, Load base: 0x00100000, Size: 0x00028de8, Max: 0x00200000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00100000   0x00100000   0x00000020   Data   RO           12    RESET               startup_M55M1.o
    0x00100020   0x00100020   0x00000000   Code   RO         2489  * .ARM.Collect$$$$00000000  mc_w.l(entry.o)
    0x00100020   0x00100020   0x00000004   Code   RO         2821    .ARM.Collect$$$$00000003  mc_w.l(entry4.o)
    0x00100024   0x00100024   0x00000004   Code   RO         2824    .ARM.Collect$$$$00000004  mc_w.l(entry5.o)
    0x00100028   0x00100028   0x00000000   Code   RO         2826    .ARM.Collect$$$$00000008  mc_w.l(entry7b.o)
    0x00100028   0x00100028   0x00000004   Code   RO         2827    .ARM.Collect$$$$00000009  mc_w.l(entry8a.o)
    0x0010002c   0x0010002c   0x00000000   Code   RO         2828    .ARM.Collect$$$$0000000A  mc_w.l(entry8b.o)
    0x0010002c   0x0010002c   0x00000008   Code   RO         2829    .ARM.Collect$$$$0000000B  mc_w.l(entry9a.o)
    0x00100034   0x00100034   0x00000000   Code   RO         2831    .ARM.Collect$$$$0000000D  mc_w.l(entry10a.o)
    0x00100034   0x00100034   0x00000000   Code   RO         2833    .ARM.Collect$$$$0000000F  mc_w.l(entry11a.o)
    0x00100034   0x00100034   0x00000004   Code   RO         2822    .ARM.Collect$$$$00002714  mc_w.l(entry4.o)
    0x00100038   0x00100038   0x00000040   Code   RO         2535    .text               mc_w.l(memmovea.o)
    0x00100078   0x00100078   0x00000024   Code   RO         2537    .text               mc_w.l(memseta.o)
    0x0010009c   0x0010009c   0x0000001c   Code   RO         2541    .text               mc_w.l(strcmp.o)
    0x001000b8   0x001000b8   0x0000001a   Code   RO         2543    .text               mc_w.l(memcmp.o)
    0x001000d2   0x001000d2   0x0000001e   Code   RO         2547    .text               mc_w.l(strncmp.o)
    0x001000f0   0x001000f0   0x00000028   Code   RO         2819    .text               mc_w.l(cpp_init.o)
    0x00100118   0x00100118   0x00000062   Code   RO         2847    .text               mc_w.l(uldiv.o)
    0x0010017a   0x0010017a   0x00000002   PAD
    0x0010017c   0x0010017c   0x00000030   Code   RO         2873    .text               mc_w.l(init.o)
    0x001001ac   0x001001ac   0x0000001e   Code   RO         2875    .text               mc_w.l(llshl.o)
    0x001001ca   0x001001ca   0x00000020   Code   RO         2877    .text               mc_w.l(llushr.o)
    0x001001ea   0x001001ea   0x00000002   PAD
    0x001001ec   0x001001ec   0x000002a2   Code   RO          772    .text.CLK_EnableAPLL  clk.o
    0x0010048e   0x0010048e   0x00000002   PAD
    0x00100490   0x00100490   0x00000024   Code   RO          786    .text.CLK_EnableModuleClock  clk.o
    0x001004b4   0x001004b4   0x00000010   Code   RO          782    .text.CLK_EnableXtalRC  clk.o
    0x001004c4   0x001004c4   0x00000082   Code   RO          776    .text.CLK_GetAPLL0ClockFreq  clk.o
    0x00100546   0x00100546   0x00000002   PAD
    0x00100548   0x00100548   0x00000118   Code   RO          804    .text.CLK_SetBusClock  clk.o
    0x00100660   0x00100660   0x0000006e   Code   RO          778    .text.CLK_SetModuleClock  clk.o
    0x001006ce   0x001006ce   0x00000002   PAD
    0x001006d0   0x001006d0   0x000002c0   Code   RO          774    .text.CLK_SetSCLK   clk.o
    0x00100990   0x00100990   0x000000d8   Code   RO          766    .text.CLK_SystemClockUpdate  clk.o
    0x00100a68   0x00100a68   0x0000002a   Code   RO          744    .text.CLK_WaitClockReady  clk.o
    0x00100a92   0x00100a92   0x00000002   PAD
    0x00100a94   0x00100a94   0x00000002   Code   RO            4    .text.Default_Handler  startup_M55M1.o
    0x00100a96   0x00100a96   0x00000002   PAD
    0x00100a98   0x00100a98   0x0000001c   Code   RO          133    .text.EMAC_AllocatePktBuf  emac.o
    0x00100ab4   0x00100ab4   0x00000200   Code   RO          125    .text.EMAC_Open     emac.o
    0x00100cb4   0x00100cb4   0x000000d4   Code   RO          131    .text.EMAC_ReceivePkt  emac.o
    0x00100d88   0x00100d88   0x00000044   Code   RO          135    .text.EMAC_TransmitPkt  emac.o
    0x00100dcc   0x00100dcc   0x0000003c   Code   RO         1332    .text.GPIO_SetMode  gpio.o
    0x00100e08   0x00100e08   0x0000003c   Code   RO         1338    .text.GPIO_SetSlewCtl  gpio.o
    0x00100e44   0x00100e44   0x0000001a   Code   RO            8    .text.HardFault_Handler  startup_M55M1.o
    0x00100e5e   0x00100e5e   0x00000002   PAD
    0x00100e60   0x00100e60   0x00000010   Code   RO           31    .text.InitDebugUart  system_M55M1.o
    0x00100e70   0x00100e70   0x0000029c   Code   RO           33    .text.InitPreDefMPURegion  system_M55M1.o
    0x0010110c   0x0010110c   0x00000004   PAD
    0x00101110   0x00101110   0x00000064   Code   RO          667    .text.PendSV_Handler  portasm.o
    0x00101174   0x00101174   0x000001c0   Code   RO          681    .text.ProcessHardFault  retarget.o
    0x00101334   0x00101334   0x000001c4   Code   RO            6  * .text.Reset_Handler  startup_M55M1.o
    0x001014f8   0x001014f8   0x0000001a   Code   RO           10    .text.Reset_Handler_PreInit  startup_M55M1.o
    0x00101512   0x00101512   0x0000000e   PAD
    0x00101520   0x00101520   0x00000024   Code   RO          669    .text.SVC_Handler   portasm.o
    0x00101544   0x00101544   0x00000022   Code   RO          823    .text.SYS_ResetModule  sys.o
    0x00101566   0x00101566   0x00000002   PAD
    0x00101568   0x00101568   0x0000003e   Code   RO           29    .text.SetDebugUartCLK  system_M55M1.o
    0x001015a6   0x001015a6   0x00000002   PAD
    0x001015a8   0x001015a8   0x0000001c   Code   RO           27    .text.SetDebugUartMFP  system_M55M1.o
    0x001015c4   0x001015c4   0x00000028   Code   RO          624    .text.SysTick_Handler  port.o
    0x001015ec   0x001015ec   0x00000032   Code   RO           25    .text.SystemCoreClockUpdate  system_M55M1.o
    0x0010161e   0x0010161e   0x00000002   PAD
    0x00101620   0x00101620   0x0000007c   Code   RO           35    .text.SystemInit    system_M55M1.o
    0x0010169c   0x0010169c   0x000001fe   Code   RO          852    .text.UART_Open     uart.o
    0x0010189a   0x0010189a   0x00000002   PAD
    0x0010189c   0x0010189c   0x00000164   Code   RO         2254    .text.accept_function  api_msg.o
    0x00101a00   0x00101a00   0x00000048   Code   RO          267    .text.eTaskConfirmSleepModeStatus  tasks.o
    0x00101a48   0x00101a48   0x0000008e   Code   RO          209    .text.eTaskGetState  tasks.o
    0x00101ad6   0x00101ad6   0x00000002   PAD
    0x00101ad8   0x00101ad8   0x000001c4   Code   RO         2274    .text.err_tcp       api_msg.o
    0x00101c9c   0x00101c9c   0x00000026   Code   RO         1424    .text.eth_rx_thread_entry  ethernetif.o
    0x00101cc2   0x00101cc2   0x00000002   PAD
    0x00101cc4   0x00101cc4   0x00000230   Code   RO         2043    .text.etharp_find_entry  etharp.o
    0x00101ef4   0x00101ef4   0x0000017c   Code   RO         2047    .text.etharp_input  etharp.o
    0x00102070   0x00102070   0x00000176   Code   RO         2051    .text.etharp_output  etharp.o
    0x001021e6   0x001021e6   0x00000002   PAD
    0x001021e8   0x001021e8   0x000000ec   Code   RO         2053    .text.etharp_output_to_arp_index  etharp.o
    0x001022d4   0x001022d4   0x00000218   Code   RO         2055    .text.etharp_query  etharp.o
    0x001024ec   0x001024ec   0x0000012c   Code   RO         2049    .text.etharp_raw    etharp.o
    0x00102618   0x00102618   0x00000032   Code   RO         2037    .text.etharp_request  etharp.o
    0x0010264a   0x0010264a   0x00000002   PAD
    0x0010264c   0x0010264c   0x000000ae   Code   RO         2035    .text.etharp_tmr    etharp.o
    0x001026fa   0x001026fa   0x00000002   PAD
    0x001026fc   0x001026fc   0x000000ac   Code   RO         2472    .text.ethernet_input  ethernet.o
    0x001027a8   0x001027a8   0x000000c8   Code   RO         2474    .text.ethernet_output  ethernet.o
    0x00102870   0x00102870   0x00000104   Code   RO         1420    .text.ethernetif_init  ethernetif.o
    0x00102974   0x00102974   0x00000026   Code   RO          711    .text.fputc         retarget.o
    0x0010299a   0x0010299a   0x00000002   PAD
    0x0010299c   0x0010299c   0x00000020   Code   RO           82    .text.fs_close      fs.o
    0x001029bc   0x001029bc   0x00000080   Code   RO           80    .text.fs_open       fs.o
    0x00102a3c   0x00102a3c   0x0000002c   Code   RO          108    .text.http_server_netconn_init  httpserver-netconn.o
    0x00102a68   0x00102a68   0x00000084   Code   RO          110    .text.http_server_netconn_thread  httpserver-netconn.o
    0x00102aec   0x00102aec   0x000000e8   Code   RO          106    .text.http_server_serve  httpserver-netconn.o
    0x00102bd4   0x00102bd4   0x00000008   Code   RO         2073    .text.icmp_dest_unreach  icmp.o
    0x00102bdc   0x00102bdc   0x000001f0   Code   RO         2071    .text.icmp_input    icmp.o
    0x00102dcc   0x00102dcc   0x000000c4   Code   RO         2075    .text.icmp_send_response  icmp.o
    0x00102e90   0x00102e90   0x00000008   Code   RO         2077    .text.icmp_time_exceeded  icmp.o
    0x00102e98   0x00102e98   0x00000072   Code   RO         1475    .text.inet_chksum   inet_chksum.o
    0x00102f0a   0x00102f0a   0x00000002   PAD
    0x00102f0c   0x00102f0c   0x000000cc   Code   RO         1477    .text.inet_chksum_pbuf  inet_chksum.o
    0x00102fd8   0x00102fd8   0x0000010a   Code   RO         1467    .text.inet_chksum_pseudo  inet_chksum.o
    0x001030e2   0x001030e2   0x00000002   PAD
    0x001030e4   0x001030e4   0x00000030   Code   RO         2115    .text.ip4_addr_isbroadcast_u32  ip4_addr.o
    0x00103114   0x00103114   0x0000025c   Code   RO         2148    .text.ip4_frag      ip4_frag.o
    0x00103370   0x00103370   0x000001ba   Code   RO         2094    .text.ip4_input     ip4.o
    0x0010352a   0x0010352a   0x00000002   PAD
    0x0010352c   0x0010352c   0x00000026   Code   RO         2096    .text.ip4_output_if  ip4.o
    0x00103552   0x00103552   0x00000002   PAD
    0x00103554   0x00103554   0x0000015c   Code   RO         2098    .text.ip4_output_if_src  ip4.o
    0x001036b0   0x001036b0   0x000006b4   Code   RO         2146    .text.ip4_reass     ip4_frag.o
    0x00103d64   0x00103d64   0x00000070   Code   RO         2092    .text.ip4_route     ip4.o
    0x00103dd4   0x00103dd4   0x000000be   Code   RO         2123    .text.ip4addr_ntoa  ip4_addr.o
    0x00103e92   0x00103e92   0x00000002   PAD
    0x00103e94   0x00103e94   0x0000000c   Code   RO         1469    .text.ip_chksum_pseudo  inet_chksum.o
    0x00103ea0   0x00103ea0   0x000001ac   Code   RO         2144    .text.ip_reass_free_complete_datagram  ip4_frag.o
    0x0010404c   0x0010404c   0x0000003a   Code   RO         2142    .text.ip_reass_tmr  ip4_frag.o
    0x00104086   0x00104086   0x00000002   PAD
    0x00104088   0x00104088   0x0000006c   Code   RO         2150    .text.ipfrag_free_pbuf_custom  ip4_frag.o
    0x001040f4   0x001040f4   0x00000038   Code   RO         1422    .text.low_level_output  ethernetif.o
    0x0010412c   0x0010412c   0x000000d4   Code   RO         1962    .text.lwip_cyclic_timer  timeouts.o
    0x00104200   0x00104200   0x00000004   Code   RO         1443    .text.lwip_htonl    def.o
    0x00104204   0x00104204   0x00000004   Code   RO         1441    .text.lwip_htons    def.o
    0x00104208   0x00104208   0x00000022   Code   RO         1491    .text.lwip_init     init.o
    0x0010422a   0x0010422a   0x00000002   PAD
    0x0010422c   0x0010422c   0x00000036   Code   RO         2242    .text.lwip_netconn_do_bind  api_msg.o
    0x00104262   0x00104262   0x00000002   PAD
    0x00104264   0x00104264   0x000000ee   Code   RO         2266    .text.lwip_netconn_do_close  api_msg.o
    0x00104352   0x00104352   0x00000002   PAD
    0x00104354   0x00104354   0x000002e8   Code   RO         2240    .text.lwip_netconn_do_close_internal  api_msg.o
    0x0010463c   0x0010463c   0x00000158   Code   RO         2236    .text.lwip_netconn_do_delconn  api_msg.o
    0x00104794   0x00104794   0x000000c0   Code   RO         2252    .text.lwip_netconn_do_listen  api_msg.o
    0x00104854   0x00104854   0x000000b0   Code   RO         2230    .text.lwip_netconn_do_newconn  api_msg.o
    0x00104904   0x00104904   0x00000038   Code   RO         2258    .text.lwip_netconn_do_recv  api_msg.o
    0x0010493c   0x0010493c   0x0000010c   Code   RO         2260    .text.lwip_netconn_do_write  api_msg.o
    0x00104a48   0x00104a48   0x00000364   Code   RO         2262    .text.lwip_netconn_do_writemore  api_msg.o
    0x00104dac   0x00104dac   0x00000064   Code   RO         2228    .text.lwip_netconn_is_err_msg  api_msg.o
    0x00104e10   0x00104e10   0x00000194   Code   RO           54    .text.main          main.o
    0x00104fa4   0x00104fa4   0x000002cc   Code   RO         1513    .text.mem_free      mem.o
    0x00105270   0x00105270   0x00000098   Code   RO         1511    .text.mem_init      mem.o
    0x00105308   0x00105308   0x00000230   Code   RO         1517    .text.mem_malloc    mem.o
    0x00105538   0x00105538   0x000001f8   Code   RO         1515    .text.mem_trim      mem.o
    0x00105730   0x00105730   0x00000088   Code   RO         1548    .text.memp_free     memp.o
    0x001057b8   0x001057b8   0x0000006a   Code   RO         1546    .text.memp_free_pool  memp.o
    0x00105822   0x00105822   0x00000002   PAD
    0x00105824   0x00105824   0x00000048   Code   RO         1540    .text.memp_init     memp.o
    0x0010586c   0x0010586c   0x0000002c   Code   RO         1538    .text.memp_init_pool  memp.o
    0x00105898   0x00105898   0x00000098   Code   RO         1544    .text.memp_malloc   memp.o
    0x00105930   0x00105930   0x00000072   Code   RO         1542    .text.memp_malloc_pool  memp.o
    0x001059a2   0x001059a2   0x00000002   PAD
    0x001059a4   0x001059a4   0x00000056   Code   RO          161    .text.mii_check_phy_init  mii.o
    0x001059fa   0x001059fa   0x00000002   PAD
    0x001059fc   0x001059fc   0x00000174   Code   RO          155    .text.mii_ethtool_gset  mii.o
    0x00105b70   0x00105b70   0x000000bc   Code   RO         2318    .text.netbuf_data   netbuf.o
    0x00105c2c   0x00105c2c   0x00000024   Code   RO         2308    .text.netbuf_delete  netbuf.o
    0x00105c50   0x00105c50   0x000000f4   Code   RO         2184    .text.netconn_accept  api_lib.o
    0x00105d44   0x00105d44   0x000000b4   Code   RO         2232    .text.netconn_alloc  api_msg.o
    0x00105df8   0x00105df8   0x00000078   Code   RO         2174    .text.netconn_bind  api_lib.o
    0x00105e70   0x00105e70   0x00000056   Code   RO         2212    .text.netconn_close  api_lib.o
    0x00105ec6   0x00105ec6   0x00000002   PAD
    0x00105ec8   0x00105ec8   0x00000040   Code   RO         2170    .text.netconn_delete  api_lib.o
    0x00105f08   0x00105f08   0x000000ea   Code   RO         2238    .text.netconn_drain  api_msg.o
    0x00105ff2   0x00105ff2   0x00000002   PAD
    0x00105ff4   0x00105ff4   0x0000001c   Code   RO         2186    .text.netconn_err   api_lib.o
    0x00106010   0x00106010   0x000000e8   Code   RO         2234    .text.netconn_free  api_msg.o
    0x001060f8   0x001060f8   0x00000068   Code   RO         2182    .text.netconn_listen_with_backlog  api_lib.o
    0x00106160   0x00106160   0x00000144   Code   RO         2166    .text.netconn_new_with_proto_and_callback  api_lib.o
    0x001062a4   0x001062a4   0x000000e4   Code   RO         2202    .text.netconn_recv  api_lib.o
    0x00106388   0x00106388   0x00000118   Code   RO         2198    .text.netconn_recv_data  api_lib.o
    0x001064a0   0x001064a0   0x0000010e   Code   RO         2192    .text.netconn_recv_data_tcp  api_lib.o
    0x001065ae   0x001065ae   0x00000002   PAD
    0x001065b0   0x001065b0   0x0000001c   Code   RO         2208    .text.netconn_write_partly  api_lib.o
    0x001065cc   0x001065cc   0x00000178   Code   RO         2210    .text.netconn_write_vectors_partly  api_lib.o
    0x00106744   0x00106744   0x00000218   Code   RO         1608    .text.netif_add     netif.o
    0x0010695c   0x0010695c   0x000000e4   Code   RO         1616    .text.netif_do_set_ipaddr  netif.o
    0x00106a40   0x00106a40   0x00000024   Code   RO         1640    .text.netif_get_by_index  netif.o
    0x00106a64   0x00106a64   0x00000002   Code   RO         1602    .text.netif_init    netif.o
    0x00106a66   0x00106a66   0x00000002   PAD
    0x00106a68   0x00106a68   0x00000006   Code   RO         1610    .text.netif_null_output_ip4  netif.o
    0x00106a6e   0x00106a6e   0x00000002   PAD
    0x00106a70   0x00106a70   0x0000000c   Code   RO         1626    .text.netif_set_default  netif.o
    0x00106a7c   0x00106a7c   0x00000068   Code   RO         1628    .text.netif_set_up  netif.o
    0x00106ae4   0x00106ae4   0x00000074   Code   RO          129    .text.nu_emac_pbuf_free  emac.o
    0x00106b58   0x00106b58   0x0000006c   Code   RO         1667    .text.pbuf_add_header  pbuf.o
    0x00106bc4   0x00106bc4   0x000001ac   Code   RO         1657    .text.pbuf_alloc    pbuf.o
    0x00106d70   0x00106d70   0x0000003e   Code   RO         1663    .text.pbuf_alloced_custom  pbuf.o
    0x00106dae   0x00106dae   0x00000002   PAD
    0x00106db0   0x00106db0   0x0000010c   Code   RO         1685    .text.pbuf_cat      pbuf.o
    0x00106ebc   0x00106ebc   0x00000012   Code   RO         1681    .text.pbuf_clen     pbuf.o
    0x00106ece   0x00106ece   0x00000002   PAD
    0x00106ed0   0x00106ed0   0x00000042   Code   RO         1705    .text.pbuf_clone    pbuf.o
    0x00106f12   0x00106f12   0x00000002   PAD
    0x00106f14   0x00106f14   0x000001b0   Code   RO         1691    .text.pbuf_copy     pbuf.o
    0x001070c4   0x001070c4   0x000000dc   Code   RO         1693    .text.pbuf_copy_partial  pbuf.o
    0x001071a0   0x001071a0   0x00000134   Code   RO         1661    .text.pbuf_free     pbuf.o
    0x001072d4   0x001072d4   0x00000036   Code   RO         1719    .text.pbuf_free_ooseq_callback  pbuf.o
    0x0010730a   0x0010730a   0x00000002   PAD
    0x0010730c   0x0010730c   0x00000006   Code   RO         1677    .text.pbuf_header_force  pbuf.o
    0x00107312   0x00107312   0x00000002   PAD
    0x00107314   0x00107314   0x000000e6   Code   RO         1675    .text.pbuf_header_impl  pbuf.o
    0x001073fa   0x001073fa   0x00000002   PAD
    0x001073fc   0x001073fc   0x00000114   Code   RO         1665    .text.pbuf_realloc  pbuf.o
    0x00107510   0x00107510   0x00000042   Code   RO         1683    .text.pbuf_ref      pbuf.o
    0x00107552   0x00107552   0x00000002   PAD
    0x00107554   0x00107554   0x00000078   Code   RO         1671    .text.pbuf_remove_header  pbuf.o
    0x001075cc   0x001075cc   0x00000014   Code   RO         1309    .text.plat_delay    synopGMAC_plat.o
    0x001075e0   0x001075e0   0x00000082   Code   RO         2272    .text.poll_tcp      api_msg.o
    0x00107662   0x00107662   0x00000002   PAD
    0x00107664   0x00107664   0x0000009e   Code   RO          203    .text.prvAddCurrentTaskToDelayedList  tasks.o
    0x00107702   0x00107702   0x00000002   PAD
    0x00107704   0x00107704   0x00000070   Code   RO          336    .text.prvCheckForValidListAndQueue  timers.o
    0x00107774   0x00107774   0x000000d6   Code   RO          582    .text.prvCheckReceivedValue  QueueSet.o
    0x0010784a   0x0010784a   0x00000002   PAD
    0x0010784c   0x0010784c   0x00000050   Code   RO          506    .text.prvHighPriorityMutexTask  GenQTest.o
    0x0010789c   0x0010789c   0x00000116   Code   RO          225    .text.prvIdleTask   tasks.o
    0x001079b2   0x001079b2   0x00000002   PAD
    0x001079b4   0x001079b4   0x0000023a   Code   RO          502    .text.prvLowPriorityMutexTask  GenQTest.o
    0x00107bee   0x00107bee   0x00000002   PAD
    0x00107bf0   0x00107bf0   0x00000016   Code   RO          504    .text.prvMediumPriorityMutexTask  GenQTest.o
    0x00107c06   0x00107c06   0x00000002   PAD
    0x00107c08   0x00107c08   0x000000a8   Code   RO          434    .text.prvNotifyQueueSetContainer  queue.o
    0x00107cb0   0x00107cb0   0x0000007c   Code   RO          372    .text.prvProcessExpiredTimer  timers.o
    0x00107d2c   0x00107d2c   0x00000652   Code   RO          576    .text.prvQueueSetReceivingTask  QueueSet.o
    0x0010837e   0x0010837e   0x00000002   PAD
    0x00108380   0x00108380   0x00000112   Code   RO          574    .text.prvQueueSetSendingTask  QueueSet.o
    0x00108492   0x00108492   0x00000002   PAD
    0x00108494   0x00108494   0x000000b2   Code   RO          554    .text.prvSemaphoreTest  semtest.o
    0x00108546   0x00108546   0x00000002   PAD
    0x00108548   0x00108548   0x0000029a   Code   RO          500    .text.prvSendFrontAndBackTest  GenQTest.o
    0x001087e2   0x001087e2   0x00000002   PAD
    0x001087e4   0x001087e4   0x0000002c   Code   RO          630    .text.prvTaskExitError  port.o
    0x00108810   0x00108810   0x00000222   Code   RO          338    .text.prvTimerTask  timers.o
    0x00108a32   0x00108a32   0x00000002   PAD
    0x00108a34   0x00108a34   0x00000084   Code   RO          436    .text.prvUnlockQueue  queue.o
    0x00108ab8   0x00108ab8   0x0000010c   Code   RO          392    .text.pvPortMalloc  heap_2.o
    0x00108bc4   0x00108bc4   0x00000018   Code   RO          285    .text.pvTaskIncrementMutexHeldCount  tasks.o
    0x00108bdc   0x00108bdc   0x00000068   Code   RO          628    .text.pxPortInitialiseStack  port.o
    0x00108c44   0x00108c44   0x00000160   Code   RO         2276    .text.recv_tcp      api_msg.o
    0x00108da4   0x00108da4   0x00000134   Code   RO         2268    .text.recv_udp      api_msg.o
    0x00108ed8   0x00108ed8   0x00000076   Code   RO         2270    .text.sent_tcp      api_msg.o
    0x00108f4e   0x00108f4e   0x00000002   PAD
    0x00108f50   0x00108f50   0x0000002a   Code   RO         1317    .text.synopGMACClearBits  synopGMAC_plat.o
    0x00108f7a   0x00108f7a   0x00000002   PAD
    0x00108f7c   0x00108f7c   0x00000004   Code   RO         1311    .text.synopGMACReadReg  synopGMAC_plat.o
    0x00108f80   0x00108f80   0x0000002a   Code   RO         1315    .text.synopGMACSetBits  synopGMAC_plat.o
    0x00108faa   0x00108faa   0x00000002   PAD
    0x00108fac   0x00108fac   0x00000022   Code   RO         1313    .text.synopGMACWriteReg  synopGMAC_plat.o
    0x00108fce   0x00108fce   0x00000002   PAD
    0x00108fd0   0x00108fd0   0x00000006   Code   RO         1164    .text.synopGMAC_ES_is_IP_header_error  synopGMAC_Dev.o
    0x00108fd6   0x00108fd6   0x00000002   PAD
    0x00108fd8   0x00108fd8   0x00000006   Code   RO         1168    .text.synopGMAC_ES_is_IP_payload_error  synopGMAC_Dev.o
    0x00108fde   0x00108fde   0x00000002   PAD
    0x00108fe0   0x00108fe0   0x00000006   Code   RO         1166    .text.synopGMAC_ES_is_rx_checksum_bypassed  synopGMAC_Dev.o
    0x00108fe6   0x00108fe6   0x00000002   PAD
    0x00108fe8   0x00108fe8   0x000000de   Code   RO         1028    .text.synopGMAC_attach  synopGMAC_Dev.o
    0x001090c6   0x001090c6   0x00000002   PAD
    0x001090c8   0x001090c8   0x0000001c   Code   RO         1092    .text.synopGMAC_clear_interrupt  synopGMAC_Dev.o
    0x001090e4   0x001090e4   0x00000020   Code   RO         1128    .text.synopGMAC_disable_dma_rx  synopGMAC_Dev.o
    0x00109104   0x00109104   0x00000020   Code   RO         1126    .text.synopGMAC_disable_dma_tx  synopGMAC_Dev.o
    0x00109124   0x00109124   0x0000000a   Code   RO         1100    .text.synopGMAC_disable_interrupt_all  synopGMAC_Dev.o
    0x0010912e   0x0010912e   0x00000002   PAD
    0x00109130   0x00109130   0x00000010   Code   RO          902    .text.synopGMAC_dma_bus_mode_init  synopGMAC_Dev.o
    0x00109140   0x00109140   0x00000010   Code   RO          904    .text.synopGMAC_dma_control_init  synopGMAC_Dev.o
    0x00109150   0x00109150   0x00000020   Code   RO         1104    .text.synopGMAC_enable_dma_rx  synopGMAC_Dev.o
    0x00109170   0x00109170   0x00000020   Code   RO         1106    .text.synopGMAC_enable_dma_tx  synopGMAC_Dev.o
    0x00109190   0x00109190   0x0000000a   Code   RO         1096    .text.synopGMAC_enable_interrupt  synopGMAC_Dev.o
    0x0010919a   0x0010919a   0x00000002   PAD
    0x0010919c   0x0010919c   0x0000003a   Code   RO         1094    .text.synopGMAC_get_interrupt_type  synopGMAC_Dev.o
    0x001091d6   0x001091d6   0x00000002   PAD
    0x001091d8   0x001091d8   0x00000010   Code   RO          888    .text.synopGMAC_get_mdc_clk_div  synopGMAC_Dev.o
    0x001091e8   0x001091e8   0x00000006   Code   RO         1042    .text.synopGMAC_get_rx_desc_frame_length  synopGMAC_Dev.o
    0x001091ee   0x001091ee   0x00000002   PAD
    0x001091f0   0x001091f0   0x00000096   Code   RO         1090    .text.synopGMAC_get_rx_qptr  synopGMAC_Dev.o
    0x00109286   0x00109286   0x00000002   PAD
    0x00109288   0x00109288   0x00000006   Code   RO         1054    .text.synopGMAC_get_tx_collision_count  synopGMAC_Dev.o
    0x0010928e   0x0010928e   0x00000002   PAD
    0x00109290   0x00109290   0x00000096   Code   RO         1072    .text.synopGMAC_get_tx_qptr  synopGMAC_Dev.o
    0x00109326   0x00109326   0x00000002   PAD
    0x00109328   0x00109328   0x0000000c   Code   RO         1036    .text.synopGMAC_init_rx_desc_base  synopGMAC_Dev.o
    0x00109334   0x00109334   0x0000000c   Code   RO         1038    .text.synopGMAC_init_tx_desc_base  synopGMAC_Dev.o
    0x00109340   0x00109340   0x00000066   Code   RO         1034    .text.synopGMAC_init_tx_rx_desc_queue  synopGMAC_Dev.o
    0x001093a6   0x001093a6   0x00000002   PAD
    0x001093a8   0x001093a8   0x00000006   Code   RO         1040    .text.synopGMAC_is_desc_owned_by_dma  synopGMAC_Dev.o
    0x001093ae   0x001093ae   0x00000002   PAD
    0x001093b0   0x001093b0   0x0000000a   Code   RO         1044    .text.synopGMAC_is_desc_valid  synopGMAC_Dev.o
    0x001093ba   0x001093ba   0x00000002   PAD
    0x001093bc   0x001093bc   0x00000006   Code   RO         1162    .text.synopGMAC_is_ext_status  synopGMAC_Dev.o
    0x001093c2   0x001093c2   0x00000002   PAD
    0x001093c4   0x001093c4   0x00000006   Code   RO         1064    .text.synopGMAC_is_frame_dribbling_errors  synopGMAC_Dev.o
    0x001093ca   0x001093ca   0x00000002   PAD
    0x001093cc   0x001093cc   0x00000010   Code   RO         1150    .text.synopGMAC_is_magic_packet_received  synopGMAC_Dev.o
    0x001093dc   0x001093dc   0x00000040   Code   RO         1170    .text.synopGMAC_is_rx_checksum_error  synopGMAC_Dev.o
    0x0010941c   0x0010941c   0x00000006   Code   RO         1062    .text.synopGMAC_is_rx_crc  synopGMAC_Dev.o
    0x00109422   0x00109422   0x00000002   PAD
    0x00109424   0x00109424   0x0000000e   Code   RO         1048    .text.synopGMAC_is_rx_desc_valid  synopGMAC_Dev.o
    0x00109432   0x00109432   0x00000002   PAD
    0x00109434   0x00109434   0x00000006   Code   RO         1060    .text.synopGMAC_is_rx_frame_collision  synopGMAC_Dev.o
    0x0010943a   0x0010943a   0x00000002   PAD
    0x0010943c   0x0010943c   0x00000006   Code   RO         1066    .text.synopGMAC_is_rx_frame_length_errors  synopGMAC_Dev.o
    0x00109442   0x00109442   0x00000002   PAD
    0x00109444   0x00109444   0x0000000c   Code   RO         1050    .text.synopGMAC_is_tx_aborted  synopGMAC_Dev.o
    0x00109450   0x00109450   0x0000000c   Code   RO         1052    .text.synopGMAC_is_tx_carrier_error  synopGMAC_Dev.o
    0x0010945c   0x0010945c   0x00000006   Code   RO         1172    .text.synopGMAC_is_tx_ipv4header_checksum_error  synopGMAC_Dev.o
    0x00109462   0x00109462   0x00000002   PAD
    0x00109464   0x00109464   0x00000006   Code   RO         1174    .text.synopGMAC_is_tx_payload_checksum_error  synopGMAC_Dev.o
    0x0010946a   0x0010946a   0x00000002   PAD
    0x0010946c   0x0010946c   0x00000010   Code   RO         1152    .text.synopGMAC_is_wakeup_frame_received  synopGMAC_Dev.o
    0x0010947c   0x0010947c   0x00000260   Code   RO         1022    .text.synopGMAC_mac_init  synopGMAC_Dev.o
    0x001096dc   0x001096dc   0x0000003a   Code   RO         1020    .text.synopGMAC_pause_control  synopGMAC_Dev.o
    0x00109716   0x00109716   0x00000002   PAD
    0x00109718   0x00109718   0x0000000a   Code   RO         1132    .text.synopGMAC_pmt_int_disable  synopGMAC_Dev.o
    0x00109722   0x00109722   0x00000002   PAD
    0x00109724   0x00109724   0x00000038   Code   RO         1276    .text.synopGMAC_powerup_mac  synopGMAC_network_interface.o
    0x0010975c   0x0010975c   0x0000000a   Code   RO          996    .text.synopGMAC_promisc_enable  synopGMAC_Dev.o
    0x00109766   0x00109766   0x00000002   PAD
    0x00109768   0x00109768   0x00000062   Code   RO          890    .text.synopGMAC_read_phy_reg  synopGMAC_Dev.o
    0x001097ca   0x001097ca   0x00000002   PAD
    0x001097cc   0x001097cc   0x00000014   Code   RO          896    .text.synopGMAC_read_version  synopGMAC_Dev.o
    0x001097e0   0x001097e0   0x00000028   Code   RO          898    .text.synopGMAC_reset  synopGMAC_Dev.o
    0x00109808   0x00109808   0x0000000a   Code   RO         1118    .text.synopGMAC_resume_dma_rx  synopGMAC_Dev.o
    0x00109812   0x00109812   0x00000002   PAD
    0x00109814   0x00109814   0x0000000a   Code   RO         1116    .text.synopGMAC_resume_dma_tx  synopGMAC_Dev.o
    0x0010981e   0x0010981e   0x00000002   PAD
    0x00109820   0x00109820   0x00000014   Code   RO         1030    .text.synopGMAC_rx_desc_init_ring  synopGMAC_Dev.o
    0x00109834   0x00109834   0x0000000a   Code   RO          956    .text.synopGMAC_rx_disable  synopGMAC_Dev.o
    0x0010983e   0x0010983e   0x00000002   PAD
    0x00109840   0x00109840   0x0000000a   Code   RO          954    .text.synopGMAC_rx_enable  synopGMAC_Dev.o
    0x0010984a   0x0010984a   0x00000002   PAD
    0x0010984c   0x0010984c   0x0000001e   Code   RO         1024    .text.synopGMAC_set_mac_addr  synopGMAC_Dev.o
    0x0010986a   0x0010986a   0x00000002   PAD
    0x0010986c   0x0010986c   0x00000022   Code   RO          886    .text.synopGMAC_set_mdc_clk_div  synopGMAC_Dev.o
    0x0010988e   0x0010988e   0x00000002   PAD
    0x00109890   0x00109890   0x00000068   Code   RO         1296    .text.synopGMAC_set_mode  synopGMAC_network_interface.o
    0x001098f8   0x001098f8   0x00000058   Code   RO         1088    .text.synopGMAC_set_rx_qptr  synopGMAC_Dev.o
    0x00109950   0x00109950   0x0000007c   Code   RO         1078    .text.synopGMAC_set_tx_qptr  synopGMAC_Dev.o
    0x001099cc   0x001099cc   0x0000003a   Code   RO         1282    .text.synopGMAC_setup_rx_desc_queue  synopGMAC_network_interface.o
    0x00109a06   0x00109a06   0x00000002   PAD
    0x00109a08   0x00109a08   0x0000003a   Code   RO         1280    .text.synopGMAC_setup_tx_desc_queue  synopGMAC_network_interface.o
    0x00109a42   0x00109a42   0x00000002   PAD
    0x00109a44   0x00109a44   0x00000020   Code   RO         1122    .text.synopGMAC_take_desc_ownership_rx  synopGMAC_Dev.o
    0x00109a64   0x00109a64   0x00000020   Code   RO         1124    .text.synopGMAC_take_desc_ownership_tx  synopGMAC_Dev.o
    0x00109a84   0x00109a84   0x00000014   Code   RO         1032    .text.synopGMAC_tx_desc_init_ring  synopGMAC_Dev.o
    0x00109a98   0x00109a98   0x0000000a   Code   RO          960    .text.synopGMAC_tx_disable  synopGMAC_Dev.o
    0x00109aa2   0x00109aa2   0x00000002   PAD
    0x00109aa4   0x00109aa4   0x0000000a   Code   RO          958    .text.synopGMAC_tx_enable  synopGMAC_Dev.o
    0x00109aae   0x00109aae   0x00000002   PAD
    0x00109ab0   0x00109ab0   0x0000005a   Code   RO          892    .text.synopGMAC_write_phy_reg  synopGMAC_Dev.o
    0x00109b0a   0x00109b0a   0x00000002   PAD
    0x00109b0c   0x00109b0c   0x00000080   Code   RO         1290    .text.synopGMAC_xmit_frames  synopGMAC_network_interface.o
    0x00109b8c   0x00109b8c   0x00000150   Code   RO         1294    .text.synop_handle_received_data  synopGMAC_network_interface.o
    0x00109cdc   0x00109cdc   0x000000e8   Code   RO         1292    .text.synop_handle_transmit_over  synopGMAC_network_interface.o
    0x00109dc4   0x00109dc4   0x0000005e   Code   RO         1367    .text.sys_arch_mbox_fetch  sys_arch.o
    0x00109e22   0x00109e22   0x00000002   PAD
    0x00109e24   0x00109e24   0x0000001e   Code   RO         1369    .text.sys_arch_mbox_tryfetch  sys_arch.o
    0x00109e42   0x00109e42   0x00000002   PAD
    0x00109e44   0x00109e44   0x0000000a   Code   RO         1393    .text.sys_arch_protect  sys_arch.o
    0x00109e4e   0x00109e4e   0x00000002   PAD
    0x00109e50   0x00109e50   0x00000046   Code   RO         1373    .text.sys_arch_sem_wait  sys_arch.o
    0x00109e96   0x00109e96   0x00000002   PAD
    0x00109e98   0x00109e98   0x00000004   Code   RO         1395    .text.sys_arch_unprotect  sys_arch.o
    0x00109e9c   0x00109e9c   0x00000050   Code   RO         1966    .text.sys_check_timeouts  timeouts.o
    0x00109eec   0x00109eec   0x00000002   Code   RO         1387    .text.sys_init      sys_arch.o
    0x00109eee   0x00109eee   0x00000002   PAD
    0x00109ef0   0x00109ef0   0x0000001c   Code   RO         1359    .text.sys_mbox_free  sys_arch.o
    0x00109f0c   0x00109f0c   0x0000001a   Code   RO         1357    .text.sys_mbox_new  sys_arch.o
    0x00109f26   0x00109f26   0x00000002   PAD
    0x00109f28   0x00109f28   0x0000001e   Code   RO         1363    .text.sys_mbox_trypost  sys_arch.o
    0x00109f46   0x00109f46   0x00000002   PAD
    0x00109f48   0x00109f48   0x00000014   Code   RO         1377    .text.sys_mutex_lock  sys_arch.o
    0x00109f5c   0x00109f5c   0x00000016   Code   RO         1375    .text.sys_mutex_new  sys_arch.o
    0x00109f72   0x00109f72   0x00000002   PAD
    0x00109f74   0x00109f74   0x0000000c   Code   RO         1379    .text.sys_mutex_unlock  sys_arch.o
    0x00109f80   0x00109f80   0x00000004   Code   RO         1389    .text.sys_now       sys_arch.o
    0x00109f84   0x00109f84   0x00000006   Code   RO         1385    .text.sys_sem_free  sys_arch.o
    0x00109f8a   0x00109f8a   0x00000002   PAD
    0x00109f8c   0x00109f8c   0x00000038   Code   RO         1371    .text.sys_sem_new   sys_arch.o
    0x00109fc4   0x00109fc4   0x0000000c   Code   RO         1383    .text.sys_sem_signal  sys_arch.o
    0x00109fd0   0x00109fd0   0x0000002a   Code   RO         1391    .text.sys_thread_new  sys_arch.o
    0x00109ffa   0x00109ffa   0x00000002   PAD
    0x00109ffc   0x00109ffc   0x000000cc   Code   RO         1956    .text.sys_timeout   timeouts.o
    0x0010a0c8   0x0010a0c8   0x0000002e   Code   RO         1960    .text.sys_timeouts_init  timeouts.o
    0x0010a0f6   0x0010a0f6   0x00000002   PAD
    0x0010a0f8   0x0010a0f8   0x00000026   Code   RO         1970    .text.sys_timeouts_sleeptime  timeouts.o
    0x0010a11e   0x0010a11e   0x00000002   PAD
    0x0010a120   0x0010a120   0x00000214   Code   RO         1764    .text.tcp_abandon   tcp.o
    0x0010a334   0x0010a334   0x00000006   Code   RO         1770    .text.tcp_abort     tcp.o
    0x0010a33a   0x0010a33a   0x00000002   PAD
    0x0010a33c   0x0010a33c   0x00000010   Code   RO         1826    .text.tcp_accept    tcp.o
    0x0010a34c   0x0010a34c   0x00000050   Code   RO         1780    .text.tcp_accept_null  tcp.o
    0x0010a39c   0x0010a39c   0x00000186   Code   RO         1810    .text.tcp_alloc     tcp.o
    0x0010a522   0x0010a522   0x00000002   PAD
    0x0010a524   0x0010a524   0x00000008   Code   RO         1818    .text.tcp_arg       tcp.o
    0x0010a52c   0x0010a52c   0x00000198   Code   RO         1772    .text.tcp_bind      tcp.o
    0x0010a6c4   0x0010a6c4   0x00000050   Code   RO         1758    .text.tcp_close     tcp.o
    0x0010a714   0x0010a714   0x000001e4   Code   RO         1760    .text.tcp_close_shutdown  tcp.o
    0x0010a8f8   0x0010a8f8   0x0000004e   Code   RO         1796    .text.tcp_close_shutdown_fin  tcp.o
    0x0010a946   0x0010a946   0x00000002   PAD
    0x0010a948   0x0010a948   0x00000148   Code   RO         1910    .text.tcp_create_segment  tcp_out.o
    0x0010aa90   0x0010aa90   0x00000070   Code   RO         1790    .text.tcp_eff_send_mss_netif  tcp.o
    0x0010ab00   0x0010ab00   0x000001ec   Code   RO         1916    .text.tcp_enqueue_flags  tcp_out.o
    0x0010acec   0x0010acec   0x00000068   Code   RO         1824    .text.tcp_err       tcp.o
    0x0010ad54   0x0010ad54   0x00000096   Code   RO         1754    .text.tcp_fasttmr   tcp.o
    0x0010adea   0x0010adea   0x00000002   PAD
    0x0010adec   0x0010adec   0x00000034   Code   RO         1750    .text.tcp_free      tcp.o
    0x0010ae20   0x0010ae20   0x00000118   Code   RO         1877    .text.tcp_free_acked_segments  tcp_in.o
    0x0010af38   0x0010af38   0x0000002e   Code   RO         1792    .text.tcp_free_ooseq  tcp.o
    0x0010af66   0x0010af66   0x00000002   PAD
    0x0010af68   0x0010af68   0x00000016   Code   RO         1748    .text.tcp_init      tcp.o
    0x0010af7e   0x0010af7e   0x00000002   PAD
    0x0010af80   0x0010af80   0x000006a8   Code   RO         1861    .text.tcp_input     tcp_in.o
    0x0010b628   0x0010b628   0x00000042   Code   RO         1869    .text.tcp_input_delayed_close  tcp_in.o
    0x0010b66a   0x0010b66a   0x00000002   PAD
    0x0010b66c   0x0010b66c   0x000000a8   Code   RO         1938    .text.tcp_keepalive  tcp_out.o
    0x0010b714   0x0010b714   0x00000068   Code   RO         1812    .text.tcp_kill_prio  tcp.o
    0x0010b77c   0x0010b77c   0x00000160   Code   RO         1865    .text.tcp_listen_input  tcp_in.o
    0x0010b8dc   0x0010b8dc   0x0000018c   Code   RO         1778    .text.tcp_listen_with_backlog_and_err  tcp.o
    0x0010ba68   0x0010ba68   0x00000086   Code   RO         1830    .text.tcp_netif_ip_addr_changed  tcp.o
    0x0010baee   0x0010baee   0x00000002   PAD
    0x0010baf0   0x0010baf0   0x00000006   Code   RO         1816    .text.tcp_new_ip_type  tcp.o
    0x0010baf6   0x0010baf6   0x00000002   PAD
    0x0010baf8   0x0010baf8   0x00000058   Code   RO         1788    .text.tcp_next_iss  tcp.o
    0x0010bb50   0x0010bb50   0x0000007c   Code   RO         1879    .text.tcp_oos_insert_segment  tcp_in.o
    0x0010bbcc   0x0010bbcc   0x00000434   Code   RO         1918    .text.tcp_output    tcp_out.o
    0x0010c000   0x0010c000   0x000000b4   Code   RO         1934    .text.tcp_output_alloc_header_common  tcp_out.o
    0x0010c0b4   0x0010c0b4   0x0000006c   Code   RO         1936    .text.tcp_output_control_segment  tcp_out.o
    0x0010c120   0x0010c120   0x00000124   Code   RO         1873    .text.tcp_parseopt  tcp_in.o
    0x0010c244   0x0010c244   0x000000cc   Code   RO         1908    .text.tcp_pbuf_prealloc  tcp_out.o
    0x0010c310   0x0010c310   0x000000dc   Code   RO         1794    .text.tcp_pcb_purge  tcp.o
    0x0010c3ec   0x0010c3ec   0x0000017c   Code   RO         1766    .text.tcp_pcb_remove  tcp.o
    0x0010c568   0x0010c568   0x00000094   Code   RO         1828    .text.tcp_poll      tcp.o
    0x0010c5fc   0x0010c5fc   0x00000584   Code   RO         1867    .text.tcp_process   tcp_in.o
    0x0010cb80   0x0010cb80   0x000000e0   Code   RO         1798    .text.tcp_process_refused_data  tcp.o
    0x0010cc60   0x0010cc60   0x000008f4   Code   RO         1875    .text.tcp_receive   tcp_in.o
    0x0010d554   0x0010d554   0x00000068   Code   RO         1820    .text.tcp_recv      tcp.o
    0x0010d5bc   0x0010d5bc   0x00000078   Code   RO         1802    .text.tcp_recv_null  tcp.o
    0x0010d634   0x0010d634   0x00000114   Code   RO         1784    .text.tcp_recved    tcp.o
    0x0010d748   0x0010d748   0x000000ac   Code   RO         1928    .text.tcp_rexmit    tcp_out.o
    0x0010d7f4   0x0010d7f4   0x00000098   Code   RO         1930    .text.tcp_rexmit_fast  tcp_out.o
    0x0010d88c   0x0010d88c   0x00000084   Code   RO         1926    .text.tcp_rexmit_rto  tcp_out.o
    0x0010d910   0x0010d910   0x00000042   Code   RO         1924    .text.tcp_rexmit_rto_commit  tcp_out.o
    0x0010d952   0x0010d952   0x00000002   PAD
    0x0010d954   0x0010d954   0x000000a4   Code   RO         1922    .text.tcp_rexmit_rto_prepare  tcp_out.o
    0x0010d9f8   0x0010d9f8   0x000000c8   Code   RO         1932    .text.tcp_rst       tcp_out.o
    0x0010dac0   0x0010dac0   0x00000068   Code   RO         1808    .text.tcp_seg_copy  tcp.o
    0x0010db28   0x0010db28   0x00000020   Code   RO         1804    .text.tcp_seg_free  tcp.o
    0x0010db48   0x0010db48   0x0000002e   Code   RO         1768    .text.tcp_segs_free  tcp.o
    0x0010db76   0x0010db76   0x00000002   PAD
    0x0010db78   0x0010db78   0x000000bc   Code   RO         1920    .text.tcp_send_empty_ack  tcp_out.o
    0x0010dc34   0x0010dc34   0x00000080   Code   RO         1914    .text.tcp_send_fin  tcp_out.o
    0x0010dcb4   0x0010dcb4   0x00000068   Code   RO         1822    .text.tcp_sent      tcp.o
    0x0010dd1c   0x0010dd1c   0x000000a4   Code   RO         1762    .text.tcp_shutdown  tcp.o
    0x0010ddc0   0x0010ddc0   0x00000650   Code   RO         1756    .text.tcp_slowtmr   tcp.o
    0x0010e410   0x0010e410   0x0000021c   Code   RO         1912    .text.tcp_split_unsent_seg  tcp_out.o
    0x0010e62c   0x0010e62c   0x0000009c   Code   RO         1954    .text.tcp_timer_needed  timeouts.o
    0x0010e6c8   0x0010e6c8   0x000000a4   Code   RO         1863    .text.tcp_timewait_input  tcp_in.o
    0x0010e76c   0x0010e76c   0x00000022   Code   RO         1752    .text.tcp_tmr       tcp.o
    0x0010e78e   0x0010e78e   0x00000002   PAD
    0x0010e790   0x0010e790   0x00000012   Code   RO         1871    .text.tcp_trigger_input_pcb_close  tcp_in.o
    0x0010e7a2   0x0010e7a2   0x00000002   PAD
    0x0010e7a4   0x0010e7a4   0x000000a0   Code   RO         1782    .text.tcp_update_rcv_ann_wnd  tcp.o
    0x0010e844   0x0010e844   0x0000077c   Code   RO         1906    .text.tcp_write     tcp_out.o
    0x0010efc0   0x0010efc0   0x0000012c   Code   RO         1940    .text.tcp_zero_window_probe  tcp_out.o
    0x0010f0ec   0x0010f0ec   0x000000e8   Code   RO         2446    .text.tcpip_init    tcpip.o
    0x0010f1d4   0x0010f1d4   0x000000b2   Code   RO         2428    .text.tcpip_input   tcpip.o
    0x0010f286   0x0010f286   0x00000002   PAD
    0x0010f288   0x0010f288   0x00000022   Code   RO         2434    .text.tcpip_send_msg_wait_sem  tcpip.o
    0x0010f2aa   0x0010f2aa   0x00000002   PAD
    0x0010f2ac   0x0010f2ac   0x000000a2   Code   RO         1958    .text.tcpip_tcp_timer  timeouts.o
    0x0010f34e   0x0010f34e   0x00000002   PAD
    0x0010f350   0x0010f350   0x000000ea   Code   RO         2448    .text.tcpip_thread  tcpip.o
    0x0010f43a   0x0010f43a   0x00000002   PAD
    0x0010f43c   0x0010f43c   0x00000068   Code   RO         2432    .text.tcpip_try_callback  tcpip.o
    0x0010f4a4   0x0010f4a4   0x00000124   Code   RO         2001    .text.udp_bind      udp.o
    0x0010f5c8   0x0010f5c8   0x00000016   Code   RO         1989    .text.udp_init      udp.o
    0x0010f5de   0x0010f5de   0x00000002   PAD
    0x0010f5e0   0x0010f5e0   0x000002b0   Code   RO         1991    .text.udp_input     udp.o
    0x0010f890   0x0010f890   0x0000003e   Code   RO         2017    .text.udp_netif_ip_addr_changed  udp.o
    0x0010f8ce   0x0010f8ce   0x00000002   PAD
    0x0010f8d0   0x0010f8d0   0x00000026   Code   RO         2015    .text.udp_new_ip_type  udp.o
    0x0010f8f6   0x0010f8f6   0x00000002   PAD
    0x0010f8f8   0x0010f8f8   0x0000003c   Code   RO         2009    .text.udp_recv      udp.o
    0x0010f934   0x0010f934   0x00000060   Code   RO         2011    .text.udp_remove    udp.o
    0x0010f994   0x0010f994   0x00000016   Code   RO          663    .text.ulSetInterruptMask  portasm.o
    0x0010f9aa   0x0010f9aa   0x00000002   PAD
    0x0010f9ac   0x0010f9ac   0x00000024   Code   RO          182    .text.uxListRemove  list.o
    0x0010f9d0   0x0010f9d0   0x0000001a   Code   RO          450    .text.uxQueueMessagesWaiting  queue.o
    0x0010f9ea   0x0010f9ea   0x00000002   PAD
    0x0010f9ec   0x0010f9ec   0x0000000c   Code   RO          235    .text.uxTaskGetNumberOfTasks  tasks.o
    0x0010f9f8   0x0010f9f8   0x0000001e   Code   RO          211    .text.uxTaskPriorityGet  tasks.o
    0x0010fa16   0x0010fa16   0x00000002   PAD
    0x0010fa18   0x0010fa18   0x00000006   Code   RO           58    .text.vApplicationMallocFailedHook  main.o
    0x0010fa1e   0x0010fa1e   0x00000002   PAD
    0x0010fa20   0x0010fa20   0x00000006   Code   RO           62    .text.vApplicationStackOverflowHook  main.o
    0x0010fa26   0x0010fa26   0x00000002   PAD
    0x0010fa28   0x0010fa28   0x00000004   Code   RO           64    .text.vApplicationTickHook  main.o
    0x0010fa2c   0x0010fa2c   0x0000000e   Code   RO          665    .text.vClearInterruptMask  portasm.o
    0x0010fa3a   0x0010fa3a   0x00000002   PAD
    0x0010fa3c   0x0010fa3c   0x00000016   Code   RO          174    .text.vListInitialise  list.o
    0x0010fa52   0x0010fa52   0x00000002   PAD
    0x0010fa54   0x0010fa54   0x00000006   Code   RO          176    .text.vListInitialiseItem  list.o
    0x0010fa5a   0x0010fa5a   0x00000002   PAD
    0x0010fa5c   0x0010fa5c   0x0000003a   Code   RO          180    .text.vListInsert   list.o
    0x0010fa96   0x0010fa96   0x00000002   PAD
    0x0010fa98   0x0010fa98   0x0000001c   Code   RO          178    .text.vListInsertEnd  list.o
    0x0010fab4   0x0010fab4   0x00000064   Code   RO          532    .text.vPolledQueueConsumer  PollQ.o
    0x0010fb18   0x0010fb18   0x0000005a   Code   RO          534    .text.vPolledQueueProducer  PollQ.o
    0x0010fb72   0x0010fb72   0x00000002   PAD
    0x0010fb74   0x0010fb74   0x0000001e   Code   RO          620    .text.vPortEnterCritical  port.o
    0x0010fb92   0x0010fb92   0x00000002   PAD
    0x0010fb94   0x0010fb94   0x0000002e   Code   RO          622    .text.vPortExitCritical  port.o
    0x0010fbc2   0x0010fbc2   0x00000002   PAD
    0x0010fbc4   0x0010fbc4   0x00000064   Code   RO          394    .text.vPortFree     heap_2.o
    0x0010fc28   0x0010fc28   0x00000036   Code   RO          626    .text.vPortSVCHandler_C  port.o
    0x0010fc5e   0x0010fc5e   0x00000002   PAD
    0x0010fc60   0x0010fc60   0x0000003e   Code   RO          616    .text.vPortSetupTimerInterrupt  port.o
    0x0010fc9e   0x0010fc9e   0x00000002   PAD
    0x0010fca0   0x0010fca0   0x00000152   Code   RO          614    .text.vPortSuppressTicksAndSleep  port.o
    0x0010fdf2   0x0010fdf2   0x00000002   PAD
    0x0010fdf4   0x0010fdf4   0x00000018   Code   RO          618    .text.vPortYield    port.o
    0x0010fe0c   0x0010fe0c   0x00000056   Code   RO          470    .text.vQueueAddToRegistry  queue.o
    0x0010fe62   0x0010fe62   0x00000002   PAD
    0x0010fe64   0x0010fe64   0x0000003e   Code   RO          456    .text.vQueueDelete  queue.o
    0x0010fea2   0x0010fea2   0x00000002   PAD
    0x0010fea4   0x0010fea4   0x000000ae   Code   RO          580    .text.vQueueSetAccessQueueSetFromISR  QueueSet.o
    0x0010ff52   0x0010ff52   0x00000002   PAD
    0x0010ff54   0x0010ff54   0x00000046   Code   RO          474    .text.vQueueWaitForMessageRestricted  queue.o
    0x0010ff9a   0x0010ff9a   0x00000006   PAD
    0x0010ffa0   0x0010ffa0   0x00000034   Code   RO          653    .text.vRestoreContextOfFirstTask  portasm.o
    0x0010ffd4   0x0010ffd4   0x0000000c   PAD
    0x0010ffe0   0x0010ffe0   0x00000024   Code   RO          661    .text.vStartFirstTask  portasm.o
    0x00110004   0x00110004   0x000000e0   Code   RO          498    .text.vStartGenericQueueTasks  GenQTest.o
    0x001100e4   0x001100e4   0x0000007c   Code   RO          530    .text.vStartPolledQueueTasks  PollQ.o
    0x00110160   0x00110160   0x00000068   Code   RO          572    .text.vStartQueueSetTasks  QueueSet.o
    0x001101c8   0x001101c8   0x00000118   Code   RO          552    .text.vStartSemaphoreTasks  semtest.o
    0x001102e0   0x001102e0   0x0000008e   Code   RO          207    .text.vTaskDelay    tasks.o
    0x0011036e   0x0011036e   0x00000002   PAD
    0x00110370   0x00110370   0x0000001a   Code   RO          257    .text.vTaskInternalSetTimeOutState  tasks.o
    0x0011038a   0x0011038a   0x00000002   PAD
    0x0011038c   0x0011038c   0x0000000e   Code   RO          261    .text.vTaskMissedYield  tasks.o
    0x0011039a   0x0011039a   0x00000002   PAD
    0x0011039c   0x0011039c   0x0000002a   Code   RO          245    .text.vTaskPlaceOnEventList  tasks.o
    0x001103c6   0x001103c6   0x00000002   PAD
    0x001103c8   0x001103c8   0x00000066   Code   RO          249    .text.vTaskPlaceOnEventListRestricted  tasks.o
    0x0011042e   0x0011042e   0x00000002   PAD
    0x00110430   0x00110430   0x000000a0   Code   RO          279    .text.vTaskPriorityDisinheritAfterTimeout  tasks.o
    0x001104d0   0x001104d0   0x000000ca   Code   RO          215    .text.vTaskPrioritySet  tasks.o
    0x0011059a   0x0011059a   0x00000002   PAD
    0x0011059c   0x0011059c   0x00000092   Code   RO          221    .text.vTaskResume   tasks.o
    0x0011062e   0x0011062e   0x00000002   PAD
    0x00110630   0x00110630   0x00000084   Code   RO          223    .text.vTaskStartScheduler  tasks.o
    0x001106b4   0x001106b4   0x0000006a   Code   RO          241    .text.vTaskStepTick  tasks.o
    0x0011071e   0x0011071e   0x00000002   PAD
    0x00110720   0x00110720   0x000000d6   Code   RO          217    .text.vTaskSuspend  tasks.o
    0x001107f6   0x001107f6   0x00000002   PAD
    0x001107f8   0x001107f8   0x00000010   Code   RO          201    .text.vTaskSuspendAll  tasks.o
    0x00110808   0x00110808   0x000000b6   Code   RO          219    .text.vTaskSwitchContext  tasks.o
    0x001108be   0x001108be   0x00000002   PAD
    0x001108c0   0x001108c0   0x00000114   Code   RO           56    .text.vWebTask      main.o
    0x001109d4   0x001109d4   0x00000052   Code   RO          632    .text.xPortStartScheduler  port.o
    0x00110a26   0x00110a26   0x00000002   PAD
    0x00110a28   0x00110a28   0x00000026   Code   RO          478    .text.xQueueAddToSet  queue.o
    0x00110a4e   0x00110a4e   0x00000002   PAD
    0x00110a50   0x00110a50   0x00000076   Code   RO          422    .text.xQueueCreateMutex  queue.o
    0x00110ac6   0x00110ac6   0x00000002   PAD
    0x00110ac8   0x00110ac8   0x00000008   Code   RO          476    .text.xQueueCreateSet  queue.o
    0x00110ad0   0x00110ad0   0x0000008a   Code   RO          420    .text.xQueueGenericCreate  queue.o
    0x00110b5a   0x00110b5a   0x00000002   PAD
    0x00110b5c   0x00110b5c   0x000001ba   Code   RO          426    .text.xQueueGenericSend  queue.o
    0x00110d16   0x00110d16   0x00000002   PAD
    0x00110d18   0x00110d18   0x0000012a   Code   RO          438    .text.xQueueGenericSendFromISR  queue.o
    0x00110e42   0x00110e42   0x00000002   PAD
    0x00110e44   0x00110e44   0x000000b4   Code   RO          440    .text.xQueueGiveFromISR  queue.o
    0x00110ef8   0x00110ef8   0x00000154   Code   RO          444    .text.xQueuePeek    queue.o
    0x0011104c   0x0011104c   0x00000160   Code   RO          442    .text.xQueueReceive  queue.o
    0x001111ac   0x001111ac   0x000000a8   Code   RO          446    .text.xQueueReceiveFromISR  queue.o
    0x00111254   0x00111254   0x00000032   Code   RO          480    .text.xQueueRemoveFromSet  queue.o
    0x00111286   0x00111286   0x00000002   PAD
    0x00111288   0x00111288   0x00000016   Code   RO          482    .text.xQueueSelectFromSet  queue.o
    0x0011129e   0x0011129e   0x00000002   PAD
    0x001112a0   0x001112a0   0x00000016   Code   RO          484    .text.xQueueSelectFromSetFromISR  queue.o
    0x001112b6   0x001112b6   0x00000002   PAD
    0x001112b8   0x001112b8   0x00000172   Code   RO          430    .text.xQueueSemaphoreTake  queue.o
    0x0011142a   0x0011142a   0x00000002   PAD
    0x0011142c   0x0011142c   0x00000074   Code   RO          259    .text.xTaskCheckForTimeOut  tasks.o
    0x001114a0   0x001114a0   0x000001e8   Code   RO          195    .text.xTaskCreate   tasks.o
    0x00111688   0x00111688   0x00000026   Code   RO          273    .text.xTaskGetSchedulerState  tasks.o
    0x001116ae   0x001116ae   0x00000002   PAD
    0x001116b0   0x001116b0   0x0000000c   Code   RO          231    .text.xTaskGetTickCount  tasks.o
    0x001116bc   0x001116bc   0x000001ae   Code   RO          229    .text.xTaskIncrementTick  tasks.o
    0x0011186a   0x0011186a   0x00000002   PAD
    0x0011186c   0x0011186c   0x00000092   Code   RO          277    .text.xTaskPriorityDisinherit  tasks.o
    0x001118fe   0x001118fe   0x00000002   PAD
    0x00111900   0x00111900   0x000000a6   Code   RO          275    .text.xTaskPriorityInherit  tasks.o
    0x001119a6   0x001119a6   0x00000002   PAD
    0x001119a8   0x001119a8   0x0000011c   Code   RO          251    .text.xTaskRemoveFromEventList  tasks.o
    0x00111ac4   0x00111ac4   0x00000166   Code   RO          205    .text.xTaskResumeAll  tasks.o
    0x00111c2a   0x00111c2a   0x00000002   PAD
    0x00111c2c   0x00111c2c   0x00000054   Code   RO          334    .text.xTimerCreateTimerTask  timers.o
    0x00111c80   0x00111c80   0x00000020   Code   RO         2760    i.__0printf$8       mc_w.l(printf8.o)
    0x00111ca0   0x00111ca0   0x0000000e   Code   RO         2889    i.__scatterload_copy  mc_w.l(handlers.o)
    0x00111cae   0x00111cae   0x00000002   Code   RO         2890    i.__scatterload_null  mc_w.l(handlers.o)
    0x00111cb0   0x00111cb0   0x0000000e   Code   RO         2891    i.__scatterload_zeroinit  mc_w.l(handlers.o)
    0x00111cbe   0x00111cbe   0x00000002   PAD
    0x00111cc0   0x00111cc0   0x00000410   Code   RO         2767    i._printf_core      mc_w.l(printf8.o)
    0x001120d0   0x001120d0   0x00000024   Code   RO         2768    i._printf_post_padding  mc_w.l(printf8.o)
    0x001120f4   0x001120f4   0x0000002e   Code   RO         2769    i._printf_pre_padding  mc_w.l(printf8.o)
    0x00112122   0x00112122   0x00000002   PAD
    0x00112124   0x00112124   0x00000024   Code   RO         2494    i.puts              mc_w.l(puts.o)
    0x00112148   0x00112148   0x00000014   Data   RO          874    .rodata..L__const.UART_SelectIrDAMode.u32ClkTbl  uart.o
    0x0011215c   0x0011215c   0x00000010   Data   RO          811    .rodata.cst16       clk.o
    0x0011216c   0x0011216c   0x00000004   Data   RO          810    .rodata.cst4        clk.o
    0x00112170   0x00112170   0x00000342   Data   RO           88    .rodata.data_404_html  fs.o
    0x001124b2   0x001124b2   0x00014c02   Data   RO           90    .rodata.data_img_m4_jpg  fs.o
    0x001270b4   0x001270b4   0x000009db   Data   RO           92    .rodata.data_index_html  fs.o
    0x00127a8f   0x00127a8f   0x00000006   Data   RO         2476    .rodata.ethbroadcast  ethernet.o
    0x00127a95   0x00127a95   0x00000006   Data   RO         2477    .rodata.ethzero     ethernet.o
    0x00127a9b   0x00127a9b   0x00000001   PAD
    0x00127a9c   0x00127a9c   0x00000014   Data   RO           89    .rodata.file_404_html  fs.o
    0x00127ab0   0x00127ab0   0x00000014   Data   RO           91    .rodata.file_img_m4_jpg  fs.o
    0x00127ac4   0x00127ac4   0x00000014   Data   RO           93    .rodata.file_index_html  fs.o
    0x00127ad8   0x00127ad8   0x00000004   Data   RO         2127    .rodata.ip_addr_any  ip4_addr.o
    0x00127adc   0x00127adc   0x00000018   Data   RO         1972    .rodata.lwip_cyclic_timers  timeouts.o
    0x00127af4   0x00127af4   0x0000000c   Data   RO         1567    .rodata.memp_FRAG_PBUF  memp.o
    0x00127b00   0x00127b00   0x0000000c   Data   RO         1570    .rodata.memp_NETBUF  memp.o
    0x00127b0c   0x00127b0c   0x0000000c   Data   RO         1573    .rodata.memp_NETCONN  memp.o
    0x00127b18   0x00127b18   0x0000000c   Data   RO         1585    .rodata.memp_PBUF   memp.o
    0x00127b24   0x00127b24   0x0000000c   Data   RO         1588    .rodata.memp_PBUF_POOL  memp.o
    0x00127b30   0x00127b30   0x0000000c   Data   RO         1564    .rodata.memp_REASSDATA  memp.o
    0x00127b3c   0x00127b3c   0x0000000c   Data   RO         1582    .rodata.memp_SYS_TIMEOUT  memp.o
    0x00127b48   0x00127b48   0x0000000c   Data   RO         1576    .rodata.memp_TCPIP_MSG_API  memp.o
    0x00127b54   0x00127b54   0x0000000c   Data   RO         1579    .rodata.memp_TCPIP_MSG_INPKT  memp.o
    0x00127b60   0x00127b60   0x0000000c   Data   RO         1555    .rodata.memp_TCP_PCB  memp.o
    0x00127b6c   0x00127b6c   0x0000000c   Data   RO         1558    .rodata.memp_TCP_PCB_LISTEN  memp.o
    0x00127b78   0x00127b78   0x0000000c   Data   RO         1561    .rodata.memp_TCP_SEG  memp.o
    0x00127b84   0x00127b84   0x0000000c   Data   RO         1552    .rodata.memp_UDP_PCB  memp.o
    0x00127b90   0x00127b90   0x0000000c   Data   RO          139    .rodata.memp_emac_rx  emac.o
    0x00127b9c   0x00127b9c   0x00000034   Data   RO         1589    .rodata.memp_pools  memp.o
    0x00127bd0   0x00127bd0   0x00000001   Data   RO         2278    .rodata.netconn_aborted  api_msg.o
    0x00127bd1   0x00127bd1   0x00000001   Data   RO         2280    .rodata.netconn_closed  api_msg.o
    0x00127bd2   0x00127bd2   0x00000001   Data   RO         2279    .rodata.netconn_reset  api_msg.o
    0x00127bd3   0x00127bd3   0x0000000c   Data   RO          113    .rodata.str1.1      httpserver-netconn.o
    0x00127bdf   0x00127bdf   0x000000c4   Data   RO          715    .rodata.str1.1      retarget.o
    0x00127ca3   0x00127ca3   0x0000005b   Data   RO         1429    .rodata.str1.1      ethernetif.o
    0x00127cfe   0x00127cfe   0x00000133   Data   RO         1526    .rodata.str1.1      mem.o
    0x00127e31   0x00127e31   0x0000009f   Data   RO         1590    .rodata.str1.1      memp.o
    0x00127ed0   0x00127ed0   0x0000004b   Data   RO         1642    .rodata.str1.1      netif.o
    0x00127f1b   0x00127f1b   0x000000f6   Data   RO         1721    .rodata.str1.1      pbuf.o
    0x00128011   0x00128011   0x0000020d   Data   RO         1842    .rodata.str1.1      tcp.o
    0x0012821e   0x0012821e   0x000001b4   Data   RO         1881    .rodata.str1.1      tcp_in.o
    0x001283d2   0x001283d2   0x00000316   Data   RO         1942    .rodata.str1.1      tcp_out.o
    0x001286e8   0x001286e8   0x0000008b   Data   RO         1975    .rodata.str1.1      timeouts.o
    0x00128773   0x00128773   0x000000aa   Data   RO         2020    .rodata.str1.1      udp.o
    0x0012881d   0x0012881d   0x000000cc   Data   RO         2058    .rodata.str1.1      etharp.o
    0x001288e9   0x001288e9   0x0000004f   Data   RO         2079    .rodata.str1.1      icmp.o
    0x00128938   0x00128938   0x0000005a   Data   RO         2102    .rodata.str1.1      ip4.o
    0x00128992   0x00128992   0x000000a7   Data   RO         2154    .rodata.str1.1      ip4_frag.o
    0x00128a39   0x00128a39   0x000000ef   Data   RO         2216    .rodata.str1.1      api_lib.o
    0x00128b28   0x00128b28   0x00000132   Data   RO         2281    .rodata.str1.1      api_msg.o
    0x00128c5a   0x00128c5a   0x0000004b   Data   RO         2324    .rodata.str1.1      netbuf.o
    0x00128ca5   0x00128ca5   0x00000075   Data   RO         2457    .rodata.str1.1      tcpip.o
    0x00128d1a   0x00128d1a   0x0000004f   Data   RO         2478    .rodata.str1.1      ethernet.o
    0x00128d69   0x00128d69   0x0000000d   Data   RO         1848    .rodata.tcp_backoff  tcp.o
    0x00128d76   0x00128d76   0x00000002   PAD
    0x00128d78   0x00128d78   0x00000010   Data   RO         1840    .rodata.tcp_pcb_lists  tcp.o
    0x00128d88   0x00128d88   0x00000007   Data   RO         1847    .rodata.tcp_persist_backoff  tcp.o
    0x00128d8f   0x00128d8f   0x00000001   PAD
    0x00128d90   0x00128d90   0x00000004   Data   RO          302    .rodata.uxTopUsedPriority  tasks.o
    0x00128d94   0x00128d94   0x00000050   Data   RO         2888    Region$$Table       anon$$obj.o
    0x00128de4   0x00128de4   0x00000004   Data   RO           42    .init_array         system_M55M1.o
    0x00128de8   0x00128de4   0x00000000   Data   RO         2817    .init_array         mc_w.l(cpp_init.o)


    Execution Region DTCM_VTOR (Exec base: 0x20000000, Load base: 0x00129020, Size: 0x000002c8, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00129020   0x000002c8   Data   RO           13    DTCM.VTOR           startup_M55M1.o


    Execution Region DTCM (Exec base: 0x200002c8, Load base: 0x001292e8, Size: 0x00000000, Max: 0xffffffff, ABSOLUTE)

    **** No section assigned to this execution region ****


    Execution Region ARM_LIB_STACK (Exec base: 0x2001f800, Load base: 0x001292e8, Size: 0x00000800, Max: 0x00000800, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x2001f800        -       0x00000800   Zero   RW            2    ARM_LIB_STACK.bss   anon$$obj.o


    Execution Region RW_NOINIT (Exec base: 0x20100000, Load base: 0x00128fec, Size: 0x00000000, Max: 0x0012f800, ABSOLUTE, UNINIT)

    **** No section assigned to this execution region ****


    Execution Region RW_RAM (Exec base: 0x20100000, Load base: 0x00128fec, Size: 0x0001da44, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20100000   0x00128fec   0x00000004   Data   RW         2835    .data               mc_w.l(stdout.o)
    0x20100004   0x00128ff0   0x00000004   Data   RW           38    .data.CyclesPerUs   system_M55M1.o
    0x20100008   0x00128ff4   0x00000004   Data   RW           39    .data.PllClock      system_M55M1.o
    0x2010000c   0x00128ff8   0x00000004   Data   RW           37    .data.SystemCoreClock  system_M55M1.o
    0x20100010   0x00128ffc   0x00000006   Data   RW           66    .data.my_mac_addr   main.o
    0x20100016   0x00129002   0x00000002   PAD
    0x20100018   0x00129004   0x00000004   Data   RW          601    .data.prvCheckReceivedValue.ulExpectedReceivedFromISR  QueueSet.o
    0x2010001c   0x00129008   0x00000004   Data   RW         1849    .data.tcp_next_iss.iss  tcp.o
    0x20100020   0x0012900c   0x00000002   Data   RW         1841    .data.tcp_port      tcp.o
    0x20100022   0x0012900e   0x00000002   Data   RW         2019    .data.udp_port      udp.o
    0x20100024   0x00129010   0x00000004   Data   RW          641    .data.ulCriticalNesting  port.o
    0x20100028   0x00129014   0x00000004   Data   RW          592    .data.ulISRTxValue  QueueSet.o
    0x2010002c   0x00129018   0x00000004   Data   RW          403    .data.xFreeBytesRemaining  heap_2.o
    0x20100030   0x0012901c   0x00000004   Data   RW          591    .data.xQueueSetTasksStatus  QueueSet.o
    0x20100034        -       0x000000cc   Zero   RW          140    .bss.GMACdev        emac.o
    0x20100100        -       0x00000004   Zero   RW         1428    .bss._netif         ethernetif.o
    0x20100104        -       0x00000004   Zero   RW         1887    .bss.ackno          tcp_in.o
    0x20100108        -       0x000000f0   Zero   RW         2057    .bss.arp_table      etharp.o
    0x201001f8        -       0x00000004   Zero   RW         1977    .bss.current_timeout_due_time  timeouts.o
    0x201001fc        -       0x00000001   Zero   RW         2059    .bss.etharp_cached_entry  etharp.o
    0x201001fd        -       0x00000001   Zero   RW         1888    .bss.flags          tcp_in.o
    0x201001fe   0x00129020   0x00000002   PAD
    0x20100200        -       0x000000f0   Zero   RW           94    .bss.fs_memory      fs.o
    0x201002f0        -       0x00000004   Zero   RW           40    .bss.g_u32NonCacheableBase  system_M55M1.o
    0x201002f4        -       0x00000004   Zero   RW           41    .bss.g_u32NonCacheableLimit  system_M55M1.o
    0x201002f8        -       0x00000010   Zero   RW         1890    .bss.inseg          tcp_in.o
    0x20100308        -       0x00000010   Zero   RW         2130    .bss.ip4addr_ntoa.str  ip4_addr.o
    0x20100318        -       0x00000018   Zero   RW         1502    .bss.ip_data        ip.o
    0x20100330        -       0x00000002   Zero   RW         2103    .bss.ip_id          ip4.o
    0x20100332        -       0x00000002   Zero   RW         2153    .bss.ip_reass_pbufcount  ip4_frag.o
    0x20100334        -       0x00000004   Zero   RW         1524    .bss.lfree          mem.o
    0x20100338        -       0x00000004   Zero   RW         2458    .bss.lock_tcpip_core  tcpip.o
    0x2010033c        -       0x00000004   Zero   RW         1525    .bss.mem_mutex      mem.o
    0x20100340        -       0x0000016b   Zero   RW         1565    .bss.memp_memory_FRAG_PBUF_base  memp.o
    0x201004ab        -       0x00000023   Zero   RW         1568    .bss.memp_memory_NETBUF_base  memp.o
    0x201004ce        -       0x000000a3   Zero   RW         1571    .bss.memp_memory_NETCONN_base  memp.o
    0x20100571        -       0x00008603   Zero   RW         1586    .bss.memp_memory_PBUF_POOL_base  memp.o
    0x20108b74        -       0x00000403   Zero   RW         1583    .bss.memp_memory_PBUF_base  memp.o
    0x20108f77        -       0x000000a3   Zero   RW         1562    .bss.memp_memory_REASSDATA_base  memp.o
    0x2010901a        -       0x00000033   Zero   RW         1580    .bss.memp_memory_SYS_TIMEOUT_base  memp.o
    0x2010904d        -       0x00000083   Zero   RW         1574    .bss.memp_memory_TCPIP_MSG_API_base  memp.o
    0x201090d0        -       0x00000083   Zero   RW         1577    .bss.memp_memory_TCPIP_MSG_INPKT_base  memp.o
    0x20109153        -       0x000000e3   Zero   RW         1556    .bss.memp_memory_TCP_PCB_LISTEN_base  memp.o
    0x20109236        -       0x0000030f   Zero   RW         1553    .bss.memp_memory_TCP_PCB_base  memp.o
    0x20109545        -       0x00000103   Zero   RW         1559    .bss.memp_memory_TCP_SEG_base  memp.o
    0x20109648        -       0x00000083   Zero   RW         1550    .bss.memp_memory_UDP_PCB_base  memp.o
    0x201096cb        -       0x00000303   Zero   RW          137    .bss.memp_memory_emac_rx_base  emac.o
    0x201099ce   0x00129020   0x00000002   PAD
    0x201099d0        -       0x00000004   Zero   RW         1566    .bss.memp_tab_FRAG_PBUF  memp.o
    0x201099d4        -       0x00000004   Zero   RW         1569    .bss.memp_tab_NETBUF  memp.o
    0x201099d8        -       0x00000004   Zero   RW         1572    .bss.memp_tab_NETCONN  memp.o
    0x201099dc        -       0x00000004   Zero   RW         1584    .bss.memp_tab_PBUF  memp.o
    0x201099e0        -       0x00000004   Zero   RW         1587    .bss.memp_tab_PBUF_POOL  memp.o
    0x201099e4        -       0x00000004   Zero   RW         1563    .bss.memp_tab_REASSDATA  memp.o
    0x201099e8        -       0x00000004   Zero   RW         1581    .bss.memp_tab_SYS_TIMEOUT  memp.o
    0x201099ec        -       0x00000004   Zero   RW         1575    .bss.memp_tab_TCPIP_MSG_API  memp.o
    0x201099f0        -       0x00000004   Zero   RW         1578    .bss.memp_tab_TCPIP_MSG_INPKT  memp.o
    0x201099f4        -       0x00000004   Zero   RW         1554    .bss.memp_tab_TCP_PCB  memp.o
    0x201099f8        -       0x00000004   Zero   RW         1557    .bss.memp_tab_TCP_PCB_LISTEN  memp.o
    0x201099fc        -       0x00000004   Zero   RW         1560    .bss.memp_tab_TCP_SEG  memp.o
    0x20109a00        -       0x00000004   Zero   RW         1551    .bss.memp_tab_UDP_PCB  memp.o
    0x20109a04        -       0x00000004   Zero   RW          138    .bss.memp_tab_emac_rx  emac.o
    0x20109a08        -       0x00000030   Zero   RW           67    .bss.netif          main.o
    0x20109a38        -       0x00000004   Zero   RW         1645    .bss.netif_default  netif.o
    0x20109a3c        -       0x00000004   Zero   RW         1644    .bss.netif_list     netif.o
    0x20109a40        -       0x00000001   Zero   RW         1643    .bss.netif_num      netif.o
    0x20109a41   0x00129020   0x00000003   PAD
    0x20109a44        -       0x00000004   Zero   RW         1976    .bss.next_timeout   timeouts.o
    0x20109a48        -       0x00000001   Zero   RW         1722    .bss.pbuf_free_ooseq_pending  pbuf.o
    0x20109a49        -       0x00000001   Zero   RW          598    .bss.prvChangeRelativePriorities.ePriorities  QueueSet.o
    0x20109a4a   0x00129020   0x00000002   PAD
    0x20109a4c        -       0x00000004   Zero   RW          597    .bss.prvChangeRelativePriorities.ulLoops  QueueSet.o
    0x20109a50        -       0x00000004   Zero   RW          600    .bss.prvCheckReceivedValue.ulExpectedReceivedFromTask  QueueSet.o
    0x20109a54        -       0x00000004   Zero   RW          378    .bss.prvSampleTimeNow.xLastTime  timers.o
    0x20109a58        -       0x00000004   Zero   RW          602    .bss.prvSendToQueueInSetFromISR.xQueueToWriteTo  QueueSet.o
    0x20109a5c        -       0x00000001   Zero   RW          402    .bss.pvPortMalloc.xHeapHasBeenInitialised  heap_2.o
    0x20109a5d   0x00129020   0x00000003   PAD
    0x20109a60        -       0x00000004   Zero   RW          301    .bss.pxCurrentTCB   tasks.o
    0x20109a64        -       0x00000004   Zero   RW          376    .bss.pxCurrentTimerList  timers.o
    0x20109a68        -       0x00000004   Zero   RW          310    .bss.pxDelayedTaskList  tasks.o
    0x20109a6c        -       0x00000004   Zero   RW          311    .bss.pxOverflowDelayedTaskList  tasks.o
    0x20109a70        -       0x00000004   Zero   RW          377    .bss.pxOverflowTimerList  timers.o
    0x20109a74        -       0x000000a0   Zero   RW          313    .bss.pxReadyTasksLists  tasks.o
    0x20109b14        -       0x00000004   Zero   RW         1522    .bss.ram            mem.o
    0x20109b18        -       0x00000004   Zero   RW         1523    .bss.ram_end        mem.o
    0x20109b1c        -       0x00007543   Zero   RW         1521    .bss.ram_heap       mem.o
    0x2011105f   0x00129020   0x00000001   PAD
    0x20111060        -       0x00000004   Zero   RW         2152    .bss.reassdatagrams  ip4_frag.o
    0x20111064        -       0x00000002   Zero   RW         1893    .bss.recv_acked     tcp_in.o
    0x20111066   0x00129020   0x00000002   PAD
    0x20111068        -       0x00000004   Zero   RW         1891    .bss.recv_data      tcp_in.o
    0x2011106c        -       0x00000001   Zero   RW         1892    .bss.recv_flags     tcp_in.o
    0x2011106d   0x00129020   0x00000001   PAD
    0x2011106e        -       0x00000008   Zero   RW          559    .bss.sCheckVariables  semtest.o
    0x20111076        -       0x00000002   Zero   RW          560    .bss.sNextCheckVariable  semtest.o
    0x20111078        -       0x00000004   Zero   RW         1886    .bss.seqno          tcp_in.o
    0x2011107c        -       0x00000004   Zero   RW         1838    .bss.tcp_active_pcbs  tcp.o
    0x20111080        -       0x00000001   Zero   RW         1844    .bss.tcp_active_pcbs_changed  tcp.o
    0x20111081   0x00129020   0x00000003   PAD
    0x20111084        -       0x00000004   Zero   RW         1837    .bss.tcp_bound_pcbs  tcp.o
    0x20111088        -       0x00000004   Zero   RW         1894    .bss.tcp_input_pcb  tcp_in.o
    0x2011108c        -       0x00000004   Zero   RW         1836    .bss.tcp_listen_pcbs  tcp.o
    0x20111090        -       0x00000004   Zero   RW         1845    .bss.tcp_ticks      tcp.o
    0x20111094        -       0x00000001   Zero   RW         1843    .bss.tcp_timer      tcp.o
    0x20111095        -       0x00000001   Zero   RW         1846    .bss.tcp_timer_ctr  tcp.o
    0x20111096   0x00129020   0x00000002   PAD
    0x20111098        -       0x00000004   Zero   RW         1839    .bss.tcp_tw_pcbs    tcp.o
    0x2011109c        -       0x00000004   Zero   RW         1882    .bss.tcphdr         tcp_in.o
    0x201110a0        -       0x00000002   Zero   RW         1885    .bss.tcphdr_opt1len  tcp_in.o
    0x201110a2   0x00129020   0x00000002   PAD
    0x201110a4        -       0x00000004   Zero   RW         1884    .bss.tcphdr_opt2    tcp_in.o
    0x201110a8        -       0x00000002   Zero   RW         1883    .bss.tcphdr_optlen  tcp_in.o
    0x201110aa   0x00129020   0x00000002   PAD
    0x201110ac        -       0x00000004   Zero   RW         2459    .bss.tcpip_init_done  tcpip.o
    0x201110b0        -       0x00000004   Zero   RW         2460    .bss.tcpip_init_done_arg  tcpip.o
    0x201110b4        -       0x00000004   Zero   RW         2456    .bss.tcpip_mbox     tcpip.o
    0x201110b8        -       0x00000001   Zero   RW         1974    .bss.tcpip_tcp_timer_active  timeouts.o
    0x201110b9   0x00129020   0x00000001   PAD
    0x201110ba        -       0x00000002   Zero   RW         1889    .bss.tcplen         tcp_in.o
    0x201110bc        -       0x0000c800   Zero   RW          406    .bss.ucHeap         heap_2.o
    0x2011d8bc        -       0x00000004   Zero   RW         2021    .bss.udp_pcbs       udp.o
    0x2011d8c0        -       0x00000004   Zero   RW          589    .bss.ulCycleCounter  QueueSet.o
    0x2011d8c4        -       0x00000004   Zero   RW          517    .bss.ulGuardedVariable  GenQTest.o
    0x2011d8c8        -       0x00000004   Zero   RW          514    .bss.ulLoopCounter  GenQTest.o
    0x2011d8cc        -       0x00000004   Zero   RW          516    .bss.ulLoopCounter2  GenQTest.o
    0x2011d8d0        -       0x0000000c   Zero   RW          590    .bss.ulQueueUsedCounter  QueueSet.o
    0x2011d8dc        -       0x00000001   Zero   RW          640    .bss.ulStoppedTimerCompensation  port.o
    0x2011d8dd   0x00129020   0x00000003   PAD
    0x2011d8e0        -       0x00000001   Zero   RW          639    .bss.ulTimerCountsForOneTick  port.o
    0x2011d8e1   0x00129020   0x00000003   PAD
    0x2011d8e4        -       0x00000004   Zero   RW          306    .bss.uxCurrentNumberOfTasks  tasks.o
    0x2011d8e8        -       0x00000004   Zero   RW          305    .bss.uxDeletedTasksWaitingCleanUp  tasks.o
    0x2011d8ec        -       0x00000004   Zero   RW          596    .bss.uxNextRand     QueueSet.o
    0x2011d8f0        -       0x00000004   Zero   RW          308    .bss.uxSchedulerSuspended  tasks.o
    0x2011d8f4        -       0x00000004   Zero   RW          303    .bss.uxTaskNumber   tasks.o
    0x2011d8f8        -       0x00000004   Zero   RW          314    .bss.uxTopReadyPriority  tasks.o
    0x2011d8fc        -       0x00000004   Zero   RW          593    .bss.vQueueSetAccessQueueSetFromISR.ulCallCount  QueueSet.o
    0x2011d900        -       0x00000004   Zero   RW          538    .bss.vStartPolledQueueTasks.xPolledQueue  PollQ.o
    0x2011d904        -       0x00000014   Zero   RW          379    .bss.xActiveTimerList1  timers.o
    0x2011d918        -       0x00000014   Zero   RW          380    .bss.xActiveTimerList2  timers.o
    0x2011d92c        -       0x00000004   Zero   RW          518    .bss.xBlockWasAborted  GenQTest.o
    0x2011d930        -       0x00000014   Zero   RW          321    .bss.xDelayedTaskList1  tasks.o
    0x2011d944        -       0x00000014   Zero   RW          322    .bss.xDelayedTaskList2  tasks.o
    0x2011d958        -       0x00000008   Zero   RW          405    .bss.xEnd           heap_2.o
    0x2011d960        -       0x00000004   Zero   RW          515    .bss.xErrorDetected  GenQTest.o
    0x2011d964        -       0x00000004   Zero   RW          511    .bss.xHighPriorityMutexTask  GenQTest.o
    0x2011d968        -       0x00000004   Zero   RW          315    .bss.xIdleTaskHandle  tasks.o
    0x2011d96c        -       0x00000001   Zero   RW          638    .bss.xMaximumPossibleSuppressedTicks  port.o
    0x2011d96d   0x00129020   0x00000003   PAD
    0x2011d970        -       0x00000004   Zero   RW          510    .bss.xMediumPriorityMutexTask  GenQTest.o
    0x2011d974        -       0x00000004   Zero   RW          316    .bss.xNextTaskUnblockTime  tasks.o
    0x2011d978        -       0x00000004   Zero   RW          320    .bss.xNumOfOverflows  tasks.o
    0x2011d97c        -       0x00000004   Zero   RW          319    .bss.xPendedTicks   tasks.o
    0x2011d980        -       0x00000014   Zero   RW          317    .bss.xPendingReadyList  tasks.o
    0x2011d994        -       0x00000004   Zero   RW          539    .bss.xPollingConsumerCount  PollQ.o
    0x2011d998        -       0x00000004   Zero   RW          540    .bss.xPollingProducerCount  PollQ.o
    0x2011d99c        -       0x00000040   Zero   RW          486    .bss.xQueueRegistry  queue.o
    0x2011d9dc        -       0x00000004   Zero   RW          599    .bss.xQueueSet      QueueSet.o
    0x2011d9e0        -       0x00000004   Zero   RW          585    .bss.xQueueSetReceivingTask  QueueSet.o
    0x2011d9e4        -       0x00000004   Zero   RW          584    .bss.xQueueSetSendingTask  QueueSet.o
    0x2011d9e8        -       0x0000000c   Zero   RW          595    .bss.xQueues        QueueSet.o
    0x2011d9f4        -       0x00000004   Zero   RW         1426    .bss.xRxSemaphore   ethernetif.o
    0x2011d9f8        -       0x00000004   Zero   RW         1427    .bss.xRxThread      ethernetif.o
    0x2011d9fc        -       0x00000004   Zero   RW          307    .bss.xSchedulerRunning  tasks.o
    0x2011da00        -       0x00000004   Zero   RW          594    .bss.xSetupComplete  QueueSet.o
    0x2011da04        -       0x00000008   Zero   RW          404    .bss.xStart         heap_2.o
    0x2011da0c        -       0x00000014   Zero   RW          312    .bss.xSuspendedTaskList  tasks.o
    0x2011da20        -       0x00000014   Zero   RW          304    .bss.xTasksWaitingTermination  tasks.o
    0x2011da34        -       0x00000004   Zero   RW          309    .bss.xTickCount     tasks.o
    0x2011da38        -       0x00000004   Zero   RW          374    .bss.xTimerQueue    timers.o
    0x2011da3c        -       0x00000004   Zero   RW          375    .bss.xTimerTaskHandle  timers.o
    0x2011da40        -       0x00000004   Zero   RW          318    .bss.xYieldPending  tasks.o


    Execution Region ARM_LIB_HEAP (Exec base: 0x2011da48, Load base: 0x00129020, Size: 0x00000800, Max: 0x00000800, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x2011da48        -       0x00000800   Zero   RW            1    ARM_LIB_HEAP.bss    anon$$obj.o


    Execution Region SRAM_NONCACHEABLE (Exec base: 0x20230000, Load base: 0x001292e8, Size: 0x00012600, Max: 0x00020000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20230000        -       0x00012600   Zero   RW          141    .bss.NonCacheable.ZeroInit  emac.o


    Execution Region SRAM_NONCACHEABLE_END (Exec base: 0x20250000, Load base: 0x001292e8, Size: 0x00000000, Max: 0xffffffff, ABSOLUTE)

    **** No section assigned to this execution region ****


    Execution Region LPSRAM (Exec base: 0x20310000, Load base: 0x001292e8, Size: 0x00000000, Max: 0x00002000, ABSOLUTE)

    **** No section assigned to this execution region ****


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

      1562         64          0          0         28       5144   GenQTest.o
       314         32          0          0         12       2976   PollQ.o
      2384         16          0         12         65       8140   QueueSet.o
      2152        400        239          0          0      20141   api_lib.o
      5402        812        309          0          0      21557   api_msg.o
      2208         24         20          0          0      20475   clk.o
         8          0          0          0          0       3065   def.o
      1452        260         12          0      76243      19855   emac.o
      2610        288        204          0        241      12676   etharp.o
       372         92         91          0          0       4073   ethernet.o
       354         64         91          0         12       7458   ethernetif.o
       160          0      88411          0        240       3225   fs.o
       120          0          0          0          0       4962   gpio.o
       368          0          0          4      51217       3826   heap_2.o
       408        128         12          0          0       5345   httpserver-netconn.o
       708        152         79          0          0       5709   icmp.o
       596          0          0          0          0       6406   inet_chksum.o
        34          0          0          0          0       1087   init.o
         0          0          0          0         24          0   ip.o
       940         48         90          0          2       6506   ip4.o
       238          0          4          0         16       6058   ip4_addr.o
      2914        340        167          0          6      12095   ip4_frag.o
       150          0          0          0          0       2663   list.o
       696        136          0          6         48       9912   main.o
      1932        340        307          0      30035       6624   mem.o
       624         60        367          0      37823       6327   memp.o
       458          0          0          0          0       7068   mii.o
       224         88         75          0          0       5220   netbuf.o
       924        196         75          0          9      10643   netif.o
      2662        488        246          0          1      23224   pbuf.o
       824          0          0          4          3       5049   port.o
       260         16          0          0          0       2006   portasm.o
      3090          0          0          0         64      19728   queue.o
       486        120        196          0          0       9713   retarget.o
       458         64          0          0         10       3679   semtest.o
       506          0        744          0          0      15858   startup_M55M1.o
      2526          0          0          0          0      54454   synopGMAC_Dev.o
       972         68          0          0          0      14911   synopGMAC_network_interface.o
       142          0          0          0          0       4153   synopGMAC_plat.o
        34          0          0          0          0       6336   sys.o
       468          0          0          0          0       7278   sys_arch.o
       948          0          4         12          8      13772   system_M55M1.o
      4238          8          4          0        320      31065   tasks.o
      7028       1128        561          6         23      26568   tcp.o
      6704        456        436          0         50      15633   tcp_in.o
      6514        972        790          0          0      20224   tcp_out.o
       782         88        117          0         16       8976   tcpip.o
       898         56        163          0          9       6269   timeouts.o
       866         26          0          0         60      11301   timers.o
       510          0         20          0          0      11345   uart.o
      1258        192        170          2          4      12116   udp.o

    ----------------------------------------------------------------------
     72856       7234      94088         48     200720     552894   Object Totals
         0          0         80          0       4096          0   (incl. Generated)
       370         12          4          2         35          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

        40          8          0          0          0         80   cpp_init.o
         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry4.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         4          0          0          0          0          0   entry8a.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        48         10          0          0          0         68   init.o
        30          0          0          0          0         68   llshl.o
        32          0          0          0          0         68   llushr.o
        26          0          0          0          0         80   memcmp.o
        64          0          0          0          0         76   memmovea.o
        36          0          0          0          0        108   memseta.o
      1154         54          0          0          0        352   printf8.o
        36          6          0          0          0         80   puts.o
         0          0          0          4          0          0   stdout.o
        28          0          0          0          0         76   strcmp.o
        30          0          0          0          0         80   strncmp.o
        98          0          0          0          0         92   uldiv.o

    ----------------------------------------------------------------------
      1684         86          0          4          0       1228   Library Totals
         8          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      1676         86          0          4          0       1228   mc_w.l

    ----------------------------------------------------------------------
      1684         86          0          4          0       1228   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     74540       7320      94088         52     200720     552722   Grand Totals
     74540       7320      94088         52     200720     552722   ELF Image Totals
     74540       7320      94088         52          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)               168628 ( 164.68kB)
    Total RW  Size (RW Data + ZI Data)            200772 ( 196.07kB)
    Total ROM Size (Code + RO Data + RW Data)     168680 ( 164.73kB)

==============================================================================

